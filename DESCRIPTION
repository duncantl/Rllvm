Package: Rllvm
Version: 0.10-0
Title: Interface to llvm for dynamically compiling native code.
Author: Duncan Temple Lang, Vince Buffalo
SystemRequirements: llvm (>= 2.7)
Maintainer: Duncan Temple Lang <duncan@r-project.org>
Description: This package is an interface to some of the
    functionality in the LLVM toolkit for programmatically constructing native code and
    also comprehensively analyzing native code.
    This allows us to build "compilers" in R and use LLVM's optmization and JIT techniques
    to improve the code we generate and then turn it into machine code.
    This is currently not a compiler. There are examples that illustrate how 
    to generate code to create native functions that are equivalent to 
    some simple R functions. The goal is to build on this and create a compiler,
    hopefully building on the framework that Luke Tierney has created in his
    compiler package (see http://www.cs.uiowa.edu/~luke/R/compiler/).
    This is in the RLLVCompile package.
    The speed up we achieve compiling R code in our examples illustrate that 
    we can significantly outperform the R interpreter and also 
    can outperform some of R's vectorized code by rearranging the computations,
    e.g. fusing loops, avoiding memory usage.
License: GPL-2
Depends: R (>= 2.7.0)
NotDepends: 
Imports: methods, Rffi
RelatedPackages: RLLVMCompile, NativeCodeAnalysis, RCIndex
URL: http://www.omegahat.net/Rllvm
     https://github.com/duncantl/Rllvm
Note:  We hope to build on this to build a compiler for parts of the R language. See the RLLVMCompile package
       at https://github.com/duncantl/R2llvm/ and https://github.com/duncantl/RLLVMCompile/
Collate: llvmVersion.R
	 oldClasses.R	 
         classDefs.R
	 llvmValueClasses.R
	 llvmTypeClasses.R
	 llvmMDNodeClasses.R
	 otherClasses.R
         manual_generics.R
	 generics_bools.R
         LoadStore_generics.R
	 methods.R
	 asMethods.R
         block.R module.R typeDefs.R
         ExecutionEngine.R IRBuilder.R onLoad.R ICmpEnums.R constants.R
         externalLinkage.R globalVar.R value.R dso.R context.R TypeID.R
         generics.R instruction.R manual_instruction.R mkFun.R intrinsic.R
         IntrinsicEnums.R sexpTypes.R utils.R targets.R 
         simpleFunction.R PassManager.R llvm.R 
         declareFunction.R typeName.R
         ostream.R targetMachine.R
         metadata.R
         opCodeClassMap.R
         classof.R initialize.R
         CallingConvEnum.R
         llvmPTXUtils.R
         byVal.R
         getCondition.R
         passConstructors.R 
         showBlocks.R
         z_enumDefs_3.4.R
         z_enumDefs_3.5.R
         z_enumDefs_3.6.R
         z_enumDefs_3.7.R
         z_enumDefs_3.8.R
         z_enumDefs_3.9.R
         z_enumDefs_4.0.R
         z_enumDefs_5.0.R
         z_enumDefs_6.0.R
         z_enumDefs_7.0.R
         z_enumDefs_8.0.R
	 z_enumDefs_9.0.R
	 z_enumDefs_10.0.R
	 z_enumDefs_11.0.R	 	 	 
	 types.R
	 Function.R
         ascii.R
         user.R
         phi.R
         datalayout.R
         DIBuilder.R
         procEnumValues.R
	 streams.R
	 ffi.R
	 assembler.R
	 needSymbol.R
	 drawCFG.R
	 bool_methods.R
	 LoadStore.R
         CallInst.R
	 InvokeInst.R
	 Argument.R
	 debugInfo.R
	 createAccessors.R
	 getArray.R
	 guessFile.R
	 findCalledFunctions.R
	 ModuleODSigs.R
	 lljit.R
	 asEnumValue.R
	 dominates.R
	 loop.R
	 allPredecessors.R