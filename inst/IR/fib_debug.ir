; ModuleID = 'fib.c'
source_filename = "fib.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @fib(i32 %0) #0 !dbg !8 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !12, metadata !DIExpression()), !dbg !13
  %4 = load i32, i32* %3, align 4, !dbg !14
  %5 = icmp slt i32 %4, 2, !dbg !16
  br i1 %5, label %6, label %8, !dbg !17

6:                                                ; preds = %1
  %7 = load i32, i32* %3, align 4, !dbg !18
  store i32 %7, i32* %2, align 4, !dbg !19
  br label %16, !dbg !19

8:                                                ; preds = %1
  %9 = load i32, i32* %3, align 4, !dbg !20
  %10 = sub nsw i32 %9, 1, !dbg !21
  %11 = call i32 @fib(i32 %10), !dbg !22
  %12 = load i32, i32* %3, align 4, !dbg !23
  %13 = sub nsw i32 %12, 2, !dbg !24
  %14 = call i32 @fib(i32 %13), !dbg !25
  %15 = add nsw i32 %11, %14, !dbg !26
  store i32 %15, i32* %2, align 4, !dbg !27
  br label %16, !dbg !27

16:                                               ; preds = %8, %6
  %17 = load i32, i32* %2, align 4, !dbg !28
  ret i32 %17, !dbg !28
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @fib2(i32 %0) #0 !dbg !29 {
  %2 = alloca i32, align 4
  %3 = alloca double, align 8
  %4 = alloca double, align 8
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !30, metadata !DIExpression()), !dbg !31
  call void @llvm.dbg.declare(metadata double* %3, metadata !32, metadata !DIExpression()), !dbg !34
  store double 0x4001E3779B97F4BF, double* %3, align 8, !dbg !34
  call void @llvm.dbg.declare(metadata double* %4, metadata !35, metadata !DIExpression()), !dbg !36
  %7 = load double, double* %3, align 8, !dbg !37
  %8 = fadd double 1.000000e+00, %7, !dbg !38
  %9 = fdiv double %8, 2.000000e+00, !dbg !39
  store double %9, double* %4, align 8, !dbg !36
  call void @llvm.dbg.declare(metadata double* %5, metadata !40, metadata !DIExpression()), !dbg !41
  %10 = load double, double* %4, align 8, !dbg !42
  %11 = fsub double 1.000000e+00, %10, !dbg !43
  store double %11, double* %5, align 8, !dbg !41
  call void @llvm.dbg.declare(metadata double* %6, metadata !44, metadata !DIExpression()), !dbg !45
  %12 = load double, double* %4, align 8, !dbg !46
  %13 = load i32, i32* %2, align 4, !dbg !47
  %14 = sitofp i32 %13 to double, !dbg !47
  %15 = call double @llvm.pow.f64(double %12, double %14), !dbg !48
  %16 = load double, double* %5, align 8, !dbg !49
  %17 = load i32, i32* %2, align 4, !dbg !50
  %18 = sitofp i32 %17 to double, !dbg !50
  %19 = call double @llvm.pow.f64(double %16, double %18), !dbg !51
  %20 = fsub double %15, %19, !dbg !52
  %21 = load double, double* %3, align 8, !dbg !53
  %22 = fdiv double %20, %21, !dbg !54
  store double %22, double* %6, align 8, !dbg !45
  %23 = load double, double* %6, align 8, !dbg !55
  %24 = fptosi double %23 to i32, !dbg !56
  ret i32 %24, !dbg !57
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.pow.f64(double, double) #1

attributes #0 = { noinline nounwind optnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!3, !4, !5, !6}
!llvm.ident = !{!7}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 11.0.0", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, nameTableKind: None, sysroot: "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk", sdk: "MacOSX.sdk")
!1 = !DIFile(filename: "fib.c", directory: "/Users/duncan/GitWorkingArea/Rllvm/inst/IR")
!2 = !{}
!3 = !{i32 7, !"Dwarf Version", i32 4}
!4 = !{i32 2, !"Debug Info Version", i32 3}
!5 = !{i32 1, !"wchar_size", i32 4}
!6 = !{i32 7, !"PIC Level", i32 2}
!7 = !{!"clang version 11.0.0"}
!8 = distinct !DISubprogram(name: "fib", scope: !1, file: !1, line: 2, type: !9, scopeLine: 3, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!9 = !DISubroutineType(types: !10)
!10 = !{!11, !11}
!11 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!12 = !DILocalVariable(name: "n", arg: 1, scope: !8, file: !1, line: 2, type: !11)
!13 = !DILocation(line: 2, column: 9, scope: !8)
!14 = !DILocation(line: 4, column: 8, scope: !15)
!15 = distinct !DILexicalBlock(scope: !8, file: !1, line: 4, column: 8)
!16 = !DILocation(line: 4, column: 10, scope: !15)
!17 = !DILocation(line: 4, column: 8, scope: !8)
!18 = !DILocation(line: 5, column: 9, scope: !15)
!19 = !DILocation(line: 5, column: 2, scope: !15)
!20 = !DILocation(line: 7, column: 16, scope: !8)
!21 = !DILocation(line: 7, column: 18, scope: !8)
!22 = !DILocation(line: 7, column: 12, scope: !8)
!23 = !DILocation(line: 7, column: 30, scope: !8)
!24 = !DILocation(line: 7, column: 32, scope: !8)
!25 = !DILocation(line: 7, column: 26, scope: !8)
!26 = !DILocation(line: 7, column: 24, scope: !8)
!27 = !DILocation(line: 7, column: 5, scope: !8)
!28 = !DILocation(line: 8, column: 1, scope: !8)
!29 = distinct !DISubprogram(name: "fib2", scope: !1, file: !1, line: 15, type: !9, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2)
!30 = !DILocalVariable(name: "n", arg: 1, scope: !29, file: !1, line: 15, type: !11)
!31 = !DILocation(line: 15, column: 10, scope: !29)
!32 = !DILocalVariable(name: "root5", scope: !29, file: !1, line: 17, type: !33)
!33 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!34 = !DILocation(line: 17, column: 12, scope: !29)
!35 = !DILocalVariable(name: "phi", scope: !29, file: !1, line: 19, type: !33)
!36 = !DILocation(line: 19, column: 12, scope: !29)
!37 = !DILocation(line: 19, column: 24, scope: !29)
!38 = !DILocation(line: 19, column: 22, scope: !29)
!39 = !DILocation(line: 19, column: 30, scope: !29)
!40 = !DILocalVariable(name: "psi", scope: !29, file: !1, line: 20, type: !33)
!41 = !DILocation(line: 20, column: 12, scope: !29)
!42 = !DILocation(line: 20, column: 23, scope: !29)
!43 = !DILocation(line: 20, column: 21, scope: !29)
!44 = !DILocalVariable(name: "ans", scope: !29, file: !1, line: 22, type: !33)
!45 = !DILocation(line: 22, column: 12, scope: !29)
!46 = !DILocation(line: 22, column: 23, scope: !29)
!47 = !DILocation(line: 22, column: 28, scope: !29)
!48 = !DILocation(line: 22, column: 19, scope: !29)
!49 = !DILocation(line: 22, column: 37, scope: !29)
!50 = !DILocation(line: 22, column: 42, scope: !29)
!51 = !DILocation(line: 22, column: 33, scope: !29)
!52 = !DILocation(line: 22, column: 31, scope: !29)
!53 = !DILocation(line: 22, column: 46, scope: !29)
!54 = !DILocation(line: 22, column: 45, scope: !29)
!55 = !DILocation(line: 24, column: 12, scope: !29)
!56 = !DILocation(line: 24, column: 11, scope: !29)
!57 = !DILocation(line: 24, column: 5, scope: !29)
