; ModuleID = '../../../src/main/names.c'
source_filename = "../../../src/main/names.c"
target datalayout = "e-m:o-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx10.15.0"

%struct.FUNTAB = type { i8*, %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)*, i32, i32, i32, %struct.PPinfo }
%struct.SEXPREC = type opaque
%struct.PPinfo = type { i32, i32, i32 }
%struct.R_PrintData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.SEXPREC*, %struct.SEXPREC*, i32, i32, %struct.SEXPREC*, %struct.SEXPREC* }

@.str = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"<-\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"<<-\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c".subset\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c".subset2\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"[[\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"[<-\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"[[<-\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"$<-\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"browser\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c".primTrace\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c".primUntrace\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c".Internal\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c".Primitive\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"substitute\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"missing\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"nargs\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"on.exit\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"forceAndCall\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"gettext\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ngettext\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"bindtextdomain\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c".addCondHands\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c".addGlobHands\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c".resetCondHands\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c".signalCondition\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c".dfltStop\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c".dfltWarn\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c".addRestart\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c".getRestart\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c".invokeRestart\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c".addTryHandlers\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"geterrmessage\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"seterrmessage\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"printDeferredWarnings\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"interruptsSuspended\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"as.function.default\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"undebug\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"isdebugged\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"debugonce\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"Recall\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"delayedAssign\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"makeLazy\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"identical\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"C_tryCatchHelper\00", align 1
@.str.64 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.69 = private unnamed_addr constant [3 x i8] c"%%\00", align 1
@.str.70 = private unnamed_addr constant [4 x i8] c"%/%\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"%*%\00", align 1
@.str.72 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.74 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.77 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.81 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.85 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.86 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"...elt\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c"...length\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"...names\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"length<-\00", align 1
@.str.92 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"oldClass\00", align 1
@.str.94 = private unnamed_addr constant [11 x i8] c"oldClass<-\00", align 1
@.str.95 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c".cache_class\00", align 1
@.str.97 = private unnamed_addr constant [8 x i8] c".class2\00", align 1
@.str.98 = private unnamed_addr constant [8 x i8] c"class<-\00", align 1
@.str.99 = private unnamed_addr constant [8 x i8] c"unclass\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"names\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"names<-\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"dimnames\00", align 1
@.str.103 = private unnamed_addr constant [11 x i8] c"dimnames<-\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"dim\00", align 1
@.str.105 = private unnamed_addr constant [6 x i8] c"dim<-\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"attributes\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"attributes<-\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"attr\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"attr<-\00", align 1
@.str.110 = private unnamed_addr constant [4 x i8] c"@<-\00", align 1
@.str.111 = private unnamed_addr constant [9 x i8] c"levels<-\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"vector\00", align 1
@.str.113 = private unnamed_addr constant [8 x i8] c"complex\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.115 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.116 = private unnamed_addr constant [5 x i8] c"diag\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"backsolve\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"max.col\00", align 1
@.str.119 = private unnamed_addr constant [4 x i8] c"row\00", align 1
@.str.120 = private unnamed_addr constant [4 x i8] c"col\00", align 1
@.str.121 = private unnamed_addr constant [7 x i8] c"unlist\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"cbind\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"rbind\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@.str.125 = private unnamed_addr constant [10 x i8] c"all.names\00", align 1
@.str.126 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.127 = private unnamed_addr constant [10 x i8] c"comment<-\00", align 1
@.str.128 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.129 = private unnamed_addr constant [5 x i8] c"get0\00", align 1
@.str.130 = private unnamed_addr constant [5 x i8] c"mget\00", align 1
@.str.131 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.132 = private unnamed_addr constant [7 x i8] c"assign\00", align 1
@.str.133 = private unnamed_addr constant [9 x i8] c"list2env\00", align 1
@.str.134 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.135 = private unnamed_addr constant [11 x i8] c"duplicated\00", align 1
@.str.136 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"anyDuplicated\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c"anyNA\00", align 1
@.str.139 = private unnamed_addr constant [6 x i8] c"which\00", align 1
@.str.140 = private unnamed_addr constant [10 x i8] c"which.min\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"pmin\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"pmax\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"which.max\00", align 1
@.str.144 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.145 = private unnamed_addr constant [7 x i8] c"pmatch\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"charmatch\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"match.call\00", align 1
@.str.148 = private unnamed_addr constant [10 x i8] c"crossprod\00", align 1
@.str.149 = private unnamed_addr constant [11 x i8] c"tcrossprod\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"lengths\00", align 1
@.str.151 = private unnamed_addr constant [9 x i8] c"sequence\00", align 1
@.str.152 = private unnamed_addr constant [7 x i8] c"attach\00", align 1
@.str.153 = private unnamed_addr constant [7 x i8] c"detach\00", align 1
@.str.154 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.155 = private unnamed_addr constant [12 x i8] c"setFileTime\00", align 1
@.str.156 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"signif\00", align 1
@.str.158 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.159 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.160 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.161 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.162 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.163 = private unnamed_addr constant [8 x i8] c"ceiling\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.165 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.166 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.167 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.168 = private unnamed_addr constant [6 x i8] c"expm1\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"log1p\00", align 1
@.str.170 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.172 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.174 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.175 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.176 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.179 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.181 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.182 = private unnamed_addr constant [7 x i8] c"lgamma\00", align 1
@.str.183 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.184 = private unnamed_addr constant [8 x i8] c"digamma\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"trigamma\00", align 1
@.str.186 = private unnamed_addr constant [6 x i8] c"cospi\00", align 1
@.str.187 = private unnamed_addr constant [6 x i8] c"sinpi\00", align 1
@.str.188 = private unnamed_addr constant [6 x i8] c"tanpi\00", align 1
@.str.189 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"lbeta\00", align 1
@.str.191 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.192 = private unnamed_addr constant [8 x i8] c"lchoose\00", align 1
@.str.193 = private unnamed_addr constant [7 x i8] c"choose\00", align 1
@.str.194 = private unnamed_addr constant [7 x i8] c"dchisq\00", align 1
@.str.195 = private unnamed_addr constant [7 x i8] c"pchisq\00", align 1
@.str.196 = private unnamed_addr constant [7 x i8] c"qchisq\00", align 1
@.str.197 = private unnamed_addr constant [5 x i8] c"dexp\00", align 1
@.str.198 = private unnamed_addr constant [5 x i8] c"pexp\00", align 1
@.str.199 = private unnamed_addr constant [5 x i8] c"qexp\00", align 1
@.str.200 = private unnamed_addr constant [6 x i8] c"dgeom\00", align 1
@.str.201 = private unnamed_addr constant [6 x i8] c"pgeom\00", align 1
@.str.202 = private unnamed_addr constant [6 x i8] c"qgeom\00", align 1
@.str.203 = private unnamed_addr constant [6 x i8] c"dpois\00", align 1
@.str.204 = private unnamed_addr constant [6 x i8] c"ppois\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"qpois\00", align 1
@.str.206 = private unnamed_addr constant [3 x i8] c"dt\00", align 1
@.str.207 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.208 = private unnamed_addr constant [3 x i8] c"qt\00", align 1
@.str.209 = private unnamed_addr constant [10 x i8] c"dsignrank\00", align 1
@.str.210 = private unnamed_addr constant [10 x i8] c"psignrank\00", align 1
@.str.211 = private unnamed_addr constant [10 x i8] c"qsignrank\00", align 1
@.str.212 = private unnamed_addr constant [8 x i8] c"besselJ\00", align 1
@.str.213 = private unnamed_addr constant [8 x i8] c"besselY\00", align 1
@.str.214 = private unnamed_addr constant [9 x i8] c"psigamma\00", align 1
@.str.215 = private unnamed_addr constant [3 x i8] c"Re\00", align 1
@.str.216 = private unnamed_addr constant [3 x i8] c"Im\00", align 1
@.str.217 = private unnamed_addr constant [4 x i8] c"Mod\00", align 1
@.str.218 = private unnamed_addr constant [4 x i8] c"Arg\00", align 1
@.str.219 = private unnamed_addr constant [5 x i8] c"Conj\00", align 1
@.str.220 = private unnamed_addr constant [6 x i8] c"dbeta\00", align 1
@.str.221 = private unnamed_addr constant [6 x i8] c"pbeta\00", align 1
@.str.222 = private unnamed_addr constant [6 x i8] c"qbeta\00", align 1
@.str.223 = private unnamed_addr constant [7 x i8] c"dbinom\00", align 1
@.str.224 = private unnamed_addr constant [7 x i8] c"pbinom\00", align 1
@.str.225 = private unnamed_addr constant [7 x i8] c"qbinom\00", align 1
@.str.226 = private unnamed_addr constant [8 x i8] c"dcauchy\00", align 1
@.str.227 = private unnamed_addr constant [8 x i8] c"pcauchy\00", align 1
@.str.228 = private unnamed_addr constant [8 x i8] c"qcauchy\00", align 1
@.str.229 = private unnamed_addr constant [3 x i8] c"df\00", align 1
@.str.230 = private unnamed_addr constant [3 x i8] c"pf\00", align 1
@.str.231 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.232 = private unnamed_addr constant [7 x i8] c"dgamma\00", align 1
@.str.233 = private unnamed_addr constant [7 x i8] c"pgamma\00", align 1
@.str.234 = private unnamed_addr constant [7 x i8] c"qgamma\00", align 1
@.str.235 = private unnamed_addr constant [7 x i8] c"dlnorm\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"plnorm\00", align 1
@.str.237 = private unnamed_addr constant [7 x i8] c"qlnorm\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"dlogis\00", align 1
@.str.239 = private unnamed_addr constant [7 x i8] c"plogis\00", align 1
@.str.240 = private unnamed_addr constant [7 x i8] c"qlogis\00", align 1
@.str.241 = private unnamed_addr constant [8 x i8] c"dnbinom\00", align 1
@.str.242 = private unnamed_addr constant [8 x i8] c"pnbinom\00", align 1
@.str.243 = private unnamed_addr constant [8 x i8] c"qnbinom\00", align 1
@.str.244 = private unnamed_addr constant [6 x i8] c"dnorm\00", align 1
@.str.245 = private unnamed_addr constant [6 x i8] c"pnorm\00", align 1
@.str.246 = private unnamed_addr constant [6 x i8] c"qnorm\00", align 1
@.str.247 = private unnamed_addr constant [6 x i8] c"dunif\00", align 1
@.str.248 = private unnamed_addr constant [6 x i8] c"punif\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"qunif\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"dweibull\00", align 1
@.str.251 = private unnamed_addr constant [9 x i8] c"pweibull\00", align 1
@.str.252 = private unnamed_addr constant [9 x i8] c"qweibull\00", align 1
@.str.253 = private unnamed_addr constant [8 x i8] c"dnchisq\00", align 1
@.str.254 = private unnamed_addr constant [8 x i8] c"pnchisq\00", align 1
@.str.255 = private unnamed_addr constant [8 x i8] c"qnchisq\00", align 1
@.str.256 = private unnamed_addr constant [4 x i8] c"dnt\00", align 1
@.str.257 = private unnamed_addr constant [4 x i8] c"pnt\00", align 1
@.str.258 = private unnamed_addr constant [4 x i8] c"qnt\00", align 1
@.str.259 = private unnamed_addr constant [8 x i8] c"dwilcox\00", align 1
@.str.260 = private unnamed_addr constant [8 x i8] c"pwilcox\00", align 1
@.str.261 = private unnamed_addr constant [8 x i8] c"qwilcox\00", align 1
@.str.262 = private unnamed_addr constant [8 x i8] c"besselI\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"besselK\00", align 1
@.str.264 = private unnamed_addr constant [11 x i8] c"dnbinom_mu\00", align 1
@.str.265 = private unnamed_addr constant [11 x i8] c"pnbinom_mu\00", align 1
@.str.266 = private unnamed_addr constant [11 x i8] c"qnbinom_mu\00", align 1
@.str.267 = private unnamed_addr constant [7 x i8] c"dhyper\00", align 1
@.str.268 = private unnamed_addr constant [7 x i8] c"phyper\00", align 1
@.str.269 = private unnamed_addr constant [7 x i8] c"qhyper\00", align 1
@.str.270 = private unnamed_addr constant [7 x i8] c"dnbeta\00", align 1
@.str.271 = private unnamed_addr constant [7 x i8] c"pnbeta\00", align 1
@.str.272 = private unnamed_addr constant [7 x i8] c"qnbeta\00", align 1
@.str.273 = private unnamed_addr constant [4 x i8] c"dnf\00", align 1
@.str.274 = private unnamed_addr constant [4 x i8] c"pnf\00", align 1
@.str.275 = private unnamed_addr constant [4 x i8] c"qnf\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"dtukey\00", align 1
@.str.277 = private unnamed_addr constant [7 x i8] c"ptukey\00", align 1
@.str.278 = private unnamed_addr constant [7 x i8] c"qtukey\00", align 1
@.str.279 = private unnamed_addr constant [7 x i8] c"rchisq\00", align 1
@.str.280 = private unnamed_addr constant [5 x i8] c"rexp\00", align 1
@.str.281 = private unnamed_addr constant [6 x i8] c"rgeom\00", align 1
@.str.282 = private unnamed_addr constant [6 x i8] c"rpois\00", align 1
@.str.283 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.284 = private unnamed_addr constant [10 x i8] c"rsignrank\00", align 1
@.str.285 = private unnamed_addr constant [6 x i8] c"rbeta\00", align 1
@.str.286 = private unnamed_addr constant [7 x i8] c"rbinom\00", align 1
@.str.287 = private unnamed_addr constant [8 x i8] c"rcauchy\00", align 1
@.str.288 = private unnamed_addr constant [3 x i8] c"rf\00", align 1
@.str.289 = private unnamed_addr constant [7 x i8] c"rgamma\00", align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"rlnorm\00", align 1
@.str.291 = private unnamed_addr constant [7 x i8] c"rlogis\00", align 1
@.str.292 = private unnamed_addr constant [8 x i8] c"rnbinom\00", align 1
@.str.293 = private unnamed_addr constant [11 x i8] c"rnbinom_mu\00", align 1
@.str.294 = private unnamed_addr constant [8 x i8] c"rnchisq\00", align 1
@.str.295 = private unnamed_addr constant [6 x i8] c"rnorm\00", align 1
@.str.296 = private unnamed_addr constant [6 x i8] c"runif\00", align 1
@.str.297 = private unnamed_addr constant [9 x i8] c"rweibull\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"rwilcox\00", align 1
@.str.299 = private unnamed_addr constant [7 x i8] c"rhyper\00", align 1
@.str.300 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.301 = private unnamed_addr constant [8 x i8] c"sample2\00", align 1
@.str.302 = private unnamed_addr constant [8 x i8] c"RNGkind\00", align 1
@.str.303 = private unnamed_addr constant [9 x i8] c"set.seed\00", align 1
@.str.304 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.305 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.306 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.307 = private unnamed_addr constant [5 x i8] c"prod\00", align 1
@.str.308 = private unnamed_addr constant [5 x i8] c"mean\00", align 1
@.str.309 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.310 = private unnamed_addr constant [7 x i8] c"cumsum\00", align 1
@.str.311 = private unnamed_addr constant [8 x i8] c"cumprod\00", align 1
@.str.312 = private unnamed_addr constant [7 x i8] c"cummax\00", align 1
@.str.313 = private unnamed_addr constant [7 x i8] c"cummin\00", align 1
@.str.314 = private unnamed_addr constant [13 x i8] c"as.character\00", align 1
@.str.315 = private unnamed_addr constant [11 x i8] c"as.integer\00", align 1
@.str.316 = private unnamed_addr constant [10 x i8] c"as.double\00", align 1
@.str.317 = private unnamed_addr constant [11 x i8] c"as.numeric\00", align 1
@.str.318 = private unnamed_addr constant [11 x i8] c"as.complex\00", align 1
@.str.319 = private unnamed_addr constant [11 x i8] c"as.logical\00", align 1
@.str.320 = private unnamed_addr constant [7 x i8] c"as.raw\00", align 1
@.str.321 = private unnamed_addr constant [8 x i8] c"as.call\00", align 1
@.str.322 = private unnamed_addr constant [15 x i8] c"as.environment\00", align 1
@.str.323 = private unnamed_addr constant [15 x i8] c"storage.mode<-\00", align 1
@.str.324 = private unnamed_addr constant [18 x i8] c"asCharacterFactor\00", align 1
@.str.325 = private unnamed_addr constant [10 x i8] c"as.vector\00", align 1
@.str.326 = private unnamed_addr constant [6 x i8] c"paste\00", align 1
@.str.327 = private unnamed_addr constant [7 x i8] c"paste0\00", align 1
@.str.328 = private unnamed_addr constant [10 x i8] c"file.path\00", align 1
@.str.329 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.330 = private unnamed_addr constant [12 x i8] c"format.info\00", align 1
@.str.331 = private unnamed_addr constant [4 x i8] c"cat\00", align 1
@.str.332 = private unnamed_addr constant [8 x i8] c"do.call\00", align 1
@.str.333 = private unnamed_addr constant [9 x i8] c"str2lang\00", align 1
@.str.334 = private unnamed_addr constant [15 x i8] c"str2expression\00", align 1
@.str.335 = private unnamed_addr constant [6 x i8] c"nchar\00", align 1
@.str.336 = private unnamed_addr constant [7 x i8] c"nzchar\00", align 1
@.str.337 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.338 = private unnamed_addr constant [11 x i8] c"startsWith\00", align 1
@.str.339 = private unnamed_addr constant [9 x i8] c"endsWith\00", align 1
@.str.340 = private unnamed_addr constant [9 x i8] c"substr<-\00", align 1
@.str.341 = private unnamed_addr constant [9 x i8] c"strsplit\00", align 1
@.str.342 = private unnamed_addr constant [11 x i8] c"abbreviate\00", align 1
@.str.343 = private unnamed_addr constant [11 x i8] c"make.names\00", align 1
@.str.344 = private unnamed_addr constant [12 x i8] c"pcre_config\00", align 1
@.str.345 = private unnamed_addr constant [5 x i8] c"grep\00", align 1
@.str.346 = private unnamed_addr constant [6 x i8] c"grepl\00", align 1
@.str.347 = private unnamed_addr constant [8 x i8] c"grepRaw\00", align 1
@.str.348 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.349 = private unnamed_addr constant [5 x i8] c"gsub\00", align 1
@.str.350 = private unnamed_addr constant [8 x i8] c"regexpr\00", align 1
@.str.351 = private unnamed_addr constant [9 x i8] c"gregexpr\00", align 1
@.str.352 = private unnamed_addr constant [8 x i8] c"regexec\00", align 1
@.str.353 = private unnamed_addr constant [6 x i8] c"agrep\00", align 1
@.str.354 = private unnamed_addr constant [7 x i8] c"agrepl\00", align 1
@.str.355 = private unnamed_addr constant [6 x i8] c"adist\00", align 1
@.str.356 = private unnamed_addr constant [9 x i8] c"aregexec\00", align 1
@.str.357 = private unnamed_addr constant [8 x i8] c"tolower\00", align 1
@.str.358 = private unnamed_addr constant [8 x i8] c"toupper\00", align 1
@.str.359 = private unnamed_addr constant [7 x i8] c"chartr\00", align 1
@.str.360 = private unnamed_addr constant [8 x i8] c"sprintf\00", align 1
@.str.361 = private unnamed_addr constant [12 x i8] c"make.unique\00", align 1
@.str.362 = private unnamed_addr constant [10 x i8] c"charToRaw\00", align 1
@.str.363 = private unnamed_addr constant [10 x i8] c"rawToChar\00", align 1
@.str.364 = private unnamed_addr constant [9 x i8] c"rawShift\00", align 1
@.str.365 = private unnamed_addr constant [10 x i8] c"intToBits\00", align 1
@.str.366 = private unnamed_addr constant [10 x i8] c"numToBits\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"numToInts\00", align 1
@.str.368 = private unnamed_addr constant [10 x i8] c"rawToBits\00", align 1
@.str.369 = private unnamed_addr constant [9 x i8] c"packBits\00", align 1
@.str.370 = private unnamed_addr constant [10 x i8] c"utf8ToInt\00", align 1
@.str.371 = private unnamed_addr constant [10 x i8] c"intToUtf8\00", align 1
@.str.372 = private unnamed_addr constant [10 x i8] c"validUTF8\00", align 1
@.str.373 = private unnamed_addr constant [9 x i8] c"validEnc\00", align 1
@.str.374 = private unnamed_addr constant [13 x i8] c"encodeString\00", align 1
@.str.375 = private unnamed_addr constant [6 x i8] c"iconv\00", align 1
@.str.376 = private unnamed_addr constant [8 x i8] c"strtrim\00", align 1
@.str.377 = private unnamed_addr constant [7 x i8] c"strtoi\00", align 1
@.str.378 = private unnamed_addr constant [7 x i8] c"strrep\00", align 1
@.str.379 = private unnamed_addr constant [8 x i8] c"is.null\00", align 1
@.str.380 = private unnamed_addr constant [11 x i8] c"is.logical\00", align 1
@.str.381 = private unnamed_addr constant [11 x i8] c"is.integer\00", align 1
@.str.382 = private unnamed_addr constant [10 x i8] c"is.double\00", align 1
@.str.383 = private unnamed_addr constant [11 x i8] c"is.complex\00", align 1
@.str.384 = private unnamed_addr constant [13 x i8] c"is.character\00", align 1
@.str.385 = private unnamed_addr constant [10 x i8] c"is.symbol\00", align 1
@.str.386 = private unnamed_addr constant [8 x i8] c"is.name\00", align 1
@.str.387 = private unnamed_addr constant [15 x i8] c"is.environment\00", align 1
@.str.388 = private unnamed_addr constant [8 x i8] c"is.list\00", align 1
@.str.389 = private unnamed_addr constant [12 x i8] c"is.pairlist\00", align 1
@.str.390 = private unnamed_addr constant [14 x i8] c"is.expression\00", align 1
@.str.391 = private unnamed_addr constant [7 x i8] c"is.raw\00", align 1
@.str.392 = private unnamed_addr constant [10 x i8] c"is.object\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"isS4\00", align 1
@.str.394 = private unnamed_addr constant [11 x i8] c"is.numeric\00", align 1
@.str.395 = private unnamed_addr constant [10 x i8] c"is.matrix\00", align 1
@.str.396 = private unnamed_addr constant [9 x i8] c"is.array\00", align 1
@.str.397 = private unnamed_addr constant [10 x i8] c"is.atomic\00", align 1
@.str.398 = private unnamed_addr constant [13 x i8] c"is.recursive\00", align 1
@.str.399 = private unnamed_addr constant [8 x i8] c"is.call\00", align 1
@.str.400 = private unnamed_addr constant [12 x i8] c"is.language\00", align 1
@.str.401 = private unnamed_addr constant [12 x i8] c"is.function\00", align 1
@.str.402 = private unnamed_addr constant [10 x i8] c"is.single\00", align 1
@.str.403 = private unnamed_addr constant [6 x i8] c"is.na\00", align 1
@.str.404 = private unnamed_addr constant [7 x i8] c"is.nan\00", align 1
@.str.405 = private unnamed_addr constant [10 x i8] c"is.finite\00", align 1
@.str.406 = private unnamed_addr constant [12 x i8] c"is.infinite\00", align 1
@.str.407 = private unnamed_addr constant [10 x i8] c"is.vector\00", align 1
@.str.408 = private unnamed_addr constant [10 x i8] c"proc.time\00", align 1
@.str.409 = private unnamed_addr constant [8 x i8] c"gc.time\00", align 1
@.str.410 = private unnamed_addr constant [12 x i8] c"withVisible\00", align 1
@.str.411 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@.str.412 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.413 = private unnamed_addr constant [10 x i8] c"invisible\00", align 1
@.str.414 = private unnamed_addr constant [4 x i8] c"rep\00", align 1
@.str.415 = private unnamed_addr constant [8 x i8] c"rep.int\00", align 1
@.str.416 = private unnamed_addr constant [8 x i8] c"rep_len\00", align 1
@.str.417 = private unnamed_addr constant [8 x i8] c"seq.int\00", align 1
@.str.418 = private unnamed_addr constant [8 x i8] c"seq_len\00", align 1
@.str.419 = private unnamed_addr constant [10 x i8] c"seq_along\00", align 1
@.str.420 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.421 = private unnamed_addr constant [6 x i8] c"xtfrm\00", align 1
@.str.422 = private unnamed_addr constant [11 x i8] c"enc2native\00", align 1
@.str.423 = private unnamed_addr constant [9 x i8] c"enc2utf8\00", align 1
@.str.424 = private unnamed_addr constant [9 x i8] c"emptyenv\00", align 1
@.str.425 = private unnamed_addr constant [8 x i8] c"baseenv\00", align 1
@.str.426 = private unnamed_addr constant [10 x i8] c"globalenv\00", align 1
@.str.427 = private unnamed_addr constant [14 x i8] c"environment<-\00", align 1
@.str.428 = private unnamed_addr constant [11 x i8] c"pos.to.env\00", align 1
@.str.429 = private unnamed_addr constant [3 x i8] c".C\00", align 1
@.str.430 = private unnamed_addr constant [9 x i8] c".Fortran\00", align 1
@.str.431 = private unnamed_addr constant [10 x i8] c".External\00", align 1
@.str.432 = private unnamed_addr constant [11 x i8] c".External2\00", align 1
@.str.433 = private unnamed_addr constant [6 x i8] c".Call\00", align 1
@.str.434 = private unnamed_addr constant [19 x i8] c".External.graphics\00", align 1
@.str.435 = private unnamed_addr constant [15 x i8] c".Call.graphics\00", align 1
@.str.436 = private unnamed_addr constant [7 x i8] c"eapply\00", align 1
@.str.437 = private unnamed_addr constant [7 x i8] c"lapply\00", align 1
@.str.438 = private unnamed_addr constant [7 x i8] c"vapply\00", align 1
@.str.439 = private unnamed_addr constant [7 x i8] c"mapply\00", align 1
@.str.440 = private unnamed_addr constant [8 x i8] c"Version\00", align 1
@.str.441 = private unnamed_addr constant [8 x i8] c"machine\00", align 1
@.str.442 = private unnamed_addr constant [12 x i8] c"commandArgs\00", align 1
@.str.443 = private unnamed_addr constant [12 x i8] c"internalsID\00", align 1
@.str.444 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@.str.445 = private unnamed_addr constant [6 x i8] c"parse\00", align 1
@.str.446 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.447 = private unnamed_addr constant [11 x i8] c"saveToConn\00", align 1
@.str.448 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.449 = private unnamed_addr constant [14 x i8] c"loadFromConn2\00", align 1
@.str.450 = private unnamed_addr constant [18 x i8] c"loadInfoFromConn2\00", align 1
@.str.451 = private unnamed_addr constant [16 x i8] c"serializeToConn\00", align 1
@.str.452 = private unnamed_addr constant [20 x i8] c"unserializeFromConn\00", align 1
@.str.453 = private unnamed_addr constant [22 x i8] c"serializeInfoFromConn\00", align 1
@.str.454 = private unnamed_addr constant [8 x i8] c"deparse\00", align 1
@.str.455 = private unnamed_addr constant [5 x i8] c"dput\00", align 1
@.str.456 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.457 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.458 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@.str.459 = private unnamed_addr constant [14 x i8] c"print.default\00", align 1
@.str.460 = private unnamed_addr constant [9 x i8] c"prmatrix\00", align 1
@.str.461 = private unnamed_addr constant [3 x i8] c"gc\00", align 1
@.str.462 = private unnamed_addr constant [7 x i8] c"gcinfo\00", align 1
@.str.463 = private unnamed_addr constant [10 x i8] c"gctorture\00", align 1
@.str.464 = private unnamed_addr constant [11 x i8] c"gctorture2\00", align 1
@.str.465 = private unnamed_addr constant [15 x i8] c"memory.profile\00", align 1
@.str.466 = private unnamed_addr constant [13 x i8] c"mem.maxVSize\00", align 1
@.str.467 = private unnamed_addr constant [13 x i8] c"mem.maxNSize\00", align 1
@.str.468 = private unnamed_addr constant [6 x i8] c"split\00", align 1
@.str.469 = private unnamed_addr constant [10 x i8] c"is.loaded\00", align 1
@.str.470 = private unnamed_addr constant [15 x i8] c"recordGraphics\00", align 1
@.str.471 = private unnamed_addr constant [9 x i8] c"dyn.load\00", align 1
@.str.472 = private unnamed_addr constant [11 x i8] c"dyn.unload\00", align 1
@.str.473 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.474 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.475 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.476 = private unnamed_addr constant [12 x i8] c"returnValue\00", align 1
@.str.477 = private unnamed_addr constant [11 x i8] c"sys.parent\00", align 1
@.str.478 = private unnamed_addr constant [9 x i8] c"sys.call\00", align 1
@.str.479 = private unnamed_addr constant [10 x i8] c"sys.frame\00", align 1
@.str.480 = private unnamed_addr constant [11 x i8] c"sys.nframe\00", align 1
@.str.481 = private unnamed_addr constant [10 x i8] c"sys.calls\00", align 1
@.str.482 = private unnamed_addr constant [11 x i8] c"sys.frames\00", align 1
@.str.483 = private unnamed_addr constant [12 x i8] c"sys.on.exit\00", align 1
@.str.484 = private unnamed_addr constant [12 x i8] c"sys.parents\00", align 1
@.str.485 = private unnamed_addr constant [13 x i8] c"sys.function\00", align 1
@.str.486 = private unnamed_addr constant [10 x i8] c"traceback\00", align 1
@.str.487 = private unnamed_addr constant [12 x i8] c"browserText\00", align 1
@.str.488 = private unnamed_addr constant [17 x i8] c"browserCondition\00", align 1
@.str.489 = private unnamed_addr constant [16 x i8] c"browserSetDebug\00", align 1
@.str.490 = private unnamed_addr constant [13 x i8] c"parent.frame\00", align 1
@.str.491 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.492 = private unnamed_addr constant [12 x i8] c"is.unsorted\00", align 1
@.str.493 = private unnamed_addr constant [13 x i8] c"sorted_fpass\00", align 1
@.str.494 = private unnamed_addr constant [6 x i8] c"psort\00", align 1
@.str.495 = private unnamed_addr constant [6 x i8] c"qsort\00", align 1
@.str.496 = private unnamed_addr constant [10 x i8] c"radixsort\00", align 1
@.str.497 = private unnamed_addr constant [6 x i8] c"order\00", align 1
@.str.498 = private unnamed_addr constant [5 x i8] c"rank\00", align 1
@.str.499 = private unnamed_addr constant [5 x i8] c"scan\00", align 1
@.str.500 = private unnamed_addr constant [10 x i8] c"t.default\00", align 1
@.str.501 = private unnamed_addr constant [6 x i8] c"aperm\00", align 1
@.str.502 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1
@.str.503 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.504 = private unnamed_addr constant [8 x i8] c"formals\00", align 1
@.str.505 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.506 = private unnamed_addr constant [9 x i8] c"bodyCode\00", align 1
@.str.507 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@.str.508 = private unnamed_addr constant [16 x i8] c"environmentName\00", align 1
@.str.509 = private unnamed_addr constant [9 x i8] c"env2list\00", align 1
@.str.510 = private unnamed_addr constant [14 x i8] c"reg.finalizer\00", align 1
@.str.511 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.512 = private unnamed_addr constant [10 x i8] c"getOption\00", align 1
@.str.513 = private unnamed_addr constant [5 x i8] c"sink\00", align 1
@.str.514 = private unnamed_addr constant [12 x i8] c"sink.number\00", align 1
@.str.515 = private unnamed_addr constant [7 x i8] c"rapply\00", align 1
@.str.516 = private unnamed_addr constant [13 x i8] c"islistfactor\00", align 1
@.str.517 = private unnamed_addr constant [8 x i8] c"colSums\00", align 1
@.str.518 = private unnamed_addr constant [9 x i8] c"colMeans\00", align 1
@.str.519 = private unnamed_addr constant [8 x i8] c"rowSums\00", align 1
@.str.520 = private unnamed_addr constant [9 x i8] c"rowMeans\00", align 1
@.str.521 = private unnamed_addr constant [9 x i8] c"tracemem\00", align 1
@.str.522 = private unnamed_addr constant [11 x i8] c"retracemem\00", align 1
@.str.523 = private unnamed_addr constant [11 x i8] c"untracemem\00", align 1
@.str.524 = private unnamed_addr constant [8 x i8] c"inspect\00", align 1
@.str.525 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.526 = private unnamed_addr constant [6 x i8] c"named\00", align 1
@.str.527 = private unnamed_addr constant [7 x i8] c"refcnt\00", align 1
@.str.528 = private unnamed_addr constant [6 x i8] c"merge\00", align 1
@.str.529 = private unnamed_addr constant [13 x i8] c"capabilities\00", align 1
@.str.530 = private unnamed_addr constant [16 x i8] c"capabilitiesX11\00", align 1
@.str.531 = private unnamed_addr constant [8 x i8] c"new.env\00", align 1
@.str.532 = private unnamed_addr constant [11 x i8] c"parent.env\00", align 1
@.str.533 = private unnamed_addr constant [13 x i8] c"parent.env<-\00", align 1
@.str.534 = private unnamed_addr constant [7 x i8] c"topenv\00", align 1
@.str.535 = private unnamed_addr constant [10 x i8] c"l10n_info\00", align 1
@.str.536 = private unnamed_addr constant [12 x i8] c"Cstack_info\00", align 1
@.str.537 = private unnamed_addr constant [10 x i8] c"mmap_file\00", align 1
@.str.538 = private unnamed_addr constant [12 x i8] c"munmap_file\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"wrap_meta\00", align 1
@.str.540 = private unnamed_addr constant [8 x i8] c"tryWrap\00", align 1
@.str.541 = private unnamed_addr constant [13 x i8] c"altrep_class\00", align 1
@.str.542 = private unnamed_addr constant [10 x i8] c"file.show\00", align 1
@.str.543 = private unnamed_addr constant [12 x i8] c"file.create\00", align 1
@.str.544 = private unnamed_addr constant [12 x i8] c"file.remove\00", align 1
@.str.545 = private unnamed_addr constant [12 x i8] c"file.rename\00", align 1
@.str.546 = private unnamed_addr constant [12 x i8] c"file.append\00", align 1
@.str.547 = private unnamed_addr constant [13 x i8] c"file.symlink\00", align 1
@.str.548 = private unnamed_addr constant [10 x i8] c"file.link\00", align 1
@.str.549 = private unnamed_addr constant [10 x i8] c"file.copy\00", align 1
@.str.550 = private unnamed_addr constant [11 x i8] c"list.files\00", align 1
@.str.551 = private unnamed_addr constant [10 x i8] c"list.dirs\00", align 1
@.str.552 = private unnamed_addr constant [12 x i8] c"file.exists\00", align 1
@.str.553 = private unnamed_addr constant [12 x i8] c"file.choose\00", align 1
@.str.554 = private unnamed_addr constant [10 x i8] c"file.info\00", align 1
@.str.555 = private unnamed_addr constant [12 x i8] c"file.access\00", align 1
@.str.556 = private unnamed_addr constant [11 x i8] c"dir.exists\00", align 1
@.str.557 = private unnamed_addr constant [11 x i8] c"dir.create\00", align 1
@.str.558 = private unnamed_addr constant [9 x i8] c"tempfile\00", align 1
@.str.559 = private unnamed_addr constant [8 x i8] c"tempdir\00", align 1
@.str.560 = private unnamed_addr constant [7 x i8] c"R.home\00", align 1
@.str.561 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.562 = private unnamed_addr constant [11 x i8] c"Sys.getenv\00", align 1
@.str.563 = private unnamed_addr constant [11 x i8] c"Sys.setenv\00", align 1
@.str.564 = private unnamed_addr constant [13 x i8] c"Sys.unsetenv\00", align 1
@.str.565 = private unnamed_addr constant [6 x i8] c"getwd\00", align 1
@.str.566 = private unnamed_addr constant [6 x i8] c"setwd\00", align 1
@.str.567 = private unnamed_addr constant [9 x i8] c"basename\00", align 1
@.str.568 = private unnamed_addr constant [8 x i8] c"dirname\00", align 1
@.str.569 = private unnamed_addr constant [10 x i8] c"Sys.chmod\00", align 1
@.str.570 = private unnamed_addr constant [10 x i8] c"Sys.umask\00", align 1
@.str.571 = private unnamed_addr constant [13 x i8] c"Sys.readlink\00", align 1
@.str.572 = private unnamed_addr constant [9 x i8] c"Sys.info\00", align 1
@.str.573 = private unnamed_addr constant [10 x i8] c"Sys.sleep\00", align 1
@.str.574 = private unnamed_addr constant [14 x i8] c"Sys.getlocale\00", align 1
@.str.575 = private unnamed_addr constant [14 x i8] c"Sys.setlocale\00", align 1
@.str.576 = private unnamed_addr constant [15 x i8] c"Sys.localeconv\00", align 1
@.str.577 = private unnamed_addr constant [12 x i8] c"path.expand\00", align 1
@.str.578 = private unnamed_addr constant [11 x i8] c"Sys.getpid\00", align 1
@.str.579 = private unnamed_addr constant [14 x i8] c"normalizePath\00", align 1
@.str.580 = private unnamed_addr constant [9 x i8] c"Sys.glob\00", align 1
@.str.581 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.582 = private unnamed_addr constant [9 x i8] c"polyroot\00", align 1
@.str.583 = private unnamed_addr constant [9 x i8] c"inherits\00", align 1
@.str.584 = private unnamed_addr constant [10 x i8] c"UseMethod\00", align 1
@.str.585 = private unnamed_addr constant [11 x i8] c"NextMethod\00", align 1
@.str.586 = private unnamed_addr constant [16 x i8] c"standardGeneric\00", align 1
@.str.587 = private unnamed_addr constant [9 x i8] c"Sys.time\00", align 1
@.str.588 = private unnamed_addr constant [11 x i8] c"as.POSIXct\00", align 1
@.str.589 = private unnamed_addr constant [11 x i8] c"as.POSIXlt\00", align 1
@.str.590 = private unnamed_addr constant [15 x i8] c"format.POSIXlt\00", align 1
@.str.591 = private unnamed_addr constant [9 x i8] c"strptime\00", align 1
@.str.592 = private unnamed_addr constant [13 x i8] c"Date2POSIXlt\00", align 1
@.str.593 = private unnamed_addr constant [13 x i8] c"POSIXlt2Date\00", align 1
@.str.594 = private unnamed_addr constant [7 x i8] c"mkCode\00", align 1
@.str.595 = private unnamed_addr constant [8 x i8] c"bcClose\00", align 1
@.str.596 = private unnamed_addr constant [20 x i8] c"is.builtin.internal\00", align 1
@.str.597 = private unnamed_addr constant [12 x i8] c"disassemble\00", align 1
@.str.598 = private unnamed_addr constant [10 x i8] c"bcVersion\00", align 1
@.str.599 = private unnamed_addr constant [15 x i8] c"load.from.file\00", align 1
@.str.600 = private unnamed_addr constant [13 x i8] c"save.to.file\00", align 1
@.str.601 = private unnamed_addr constant [10 x i8] c"growconst\00", align 1
@.str.602 = private unnamed_addr constant [9 x i8] c"putconst\00", align 1
@.str.603 = private unnamed_addr constant [9 x i8] c"getconst\00", align 1
@.str.604 = private unnamed_addr constant [10 x i8] c"enableJIT\00", align 1
@.str.605 = private unnamed_addr constant [12 x i8] c"compilePKGS\00", align 1
@.str.606 = private unnamed_addr constant [18 x i8] c"setNumMathThreads\00", align 1
@.str.607 = private unnamed_addr constant [21 x i8] c"setMaxNumMathThreads\00", align 1
@.str.608 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.609 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.610 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.611 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@.str.612 = private unnamed_addr constant [10 x i8] c"readLines\00", align 1
@.str.613 = private unnamed_addr constant [11 x i8] c"writeLines\00", align 1
@.str.614 = private unnamed_addr constant [8 x i8] c"readBin\00", align 1
@.str.615 = private unnamed_addr constant [9 x i8] c"writeBin\00", align 1
@.str.616 = private unnamed_addr constant [9 x i8] c"readChar\00", align 1
@.str.617 = private unnamed_addr constant [10 x i8] c"writeChar\00", align 1
@.str.618 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.619 = private unnamed_addr constant [7 x i8] c"isOpen\00", align 1
@.str.620 = private unnamed_addr constant [13 x i8] c"isIncomplete\00", align 1
@.str.621 = private unnamed_addr constant [11 x i8] c"isSeekable\00", align 1
@.str.622 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.623 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.624 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.625 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.626 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1
@.str.627 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.628 = private unnamed_addr constant [7 x i8] c"gzfile\00", align 1
@.str.629 = private unnamed_addr constant [7 x i8] c"bzfile\00", align 1
@.str.630 = private unnamed_addr constant [7 x i8] c"xzfile\00", align 1
@.str.631 = private unnamed_addr constant [4 x i8] c"unz\00", align 1
@.str.632 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.633 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.634 = private unnamed_addr constant [9 x i8] c"pushBack\00", align 1
@.str.635 = private unnamed_addr constant [14 x i8] c"clearPushBack\00", align 1
@.str.636 = private unnamed_addr constant [15 x i8] c"pushBackLength\00", align 1
@.str.637 = private unnamed_addr constant [14 x i8] c"rawConnection\00", align 1
@.str.638 = private unnamed_addr constant [19 x i8] c"rawConnectionValue\00", align 1
@.str.639 = private unnamed_addr constant [15 x i8] c"textConnection\00", align 1
@.str.640 = private unnamed_addr constant [20 x i8] c"textConnectionValue\00", align 1
@.str.641 = private unnamed_addr constant [17 x i8] c"socketConnection\00", align 1
@.str.642 = private unnamed_addr constant [13 x i8] c"socketAccept\00", align 1
@.str.643 = private unnamed_addr constant [11 x i8] c"sockSelect\00", align 1
@.str.644 = private unnamed_addr constant [13 x i8] c"serverSocket\00", align 1
@.str.645 = private unnamed_addr constant [14 x i8] c"socketTimeout\00", align 1
@.str.646 = private unnamed_addr constant [14 x i8] c"getConnection\00", align 1
@.str.647 = private unnamed_addr constant [18 x i8] c"getAllConnections\00", align 1
@.str.648 = private unnamed_addr constant [19 x i8] c"summary.connection\00", align 1
@.str.649 = private unnamed_addr constant [6 x i8] c"gzcon\00", align 1
@.str.650 = private unnamed_addr constant [12 x i8] c"memCompress\00", align 1
@.str.651 = private unnamed_addr constant [14 x i8] c"memDecompress\00", align 1
@.str.652 = private unnamed_addr constant [8 x i8] c"readDCF\00", align 1
@.str.653 = private unnamed_addr constant [16 x i8] c"lockEnvironment\00", align 1
@.str.654 = private unnamed_addr constant [20 x i8] c"environmentIsLocked\00", align 1
@.str.655 = private unnamed_addr constant [12 x i8] c"lockBinding\00", align 1
@.str.656 = private unnamed_addr constant [14 x i8] c"unlockBinding\00", align 1
@.str.657 = private unnamed_addr constant [16 x i8] c"bindingIsLocked\00", align 1
@.str.658 = private unnamed_addr constant [18 x i8] c"makeActiveBinding\00", align 1
@.str.659 = private unnamed_addr constant [16 x i8] c"bindingIsActive\00", align 1
@.str.660 = private unnamed_addr constant [22 x i8] c"activeBindingFunction\00", align 1
@.str.661 = private unnamed_addr constant [10 x i8] c"mkUnbound\00", align 1
@.str.662 = private unnamed_addr constant [15 x i8] c"isNamespaceEnv\00", align 1
@.str.663 = private unnamed_addr constant [18 x i8] c"registerNamespace\00", align 1
@.str.664 = private unnamed_addr constant [20 x i8] c"unregisterNamespace\00", align 1
@.str.665 = private unnamed_addr constant [23 x i8] c"getRegisteredNamespace\00", align 1
@.str.666 = private unnamed_addr constant [22 x i8] c"isRegisteredNamespace\00", align 1
@.str.667 = private unnamed_addr constant [21 x i8] c"getNamespaceRegistry\00", align 1
@.str.668 = private unnamed_addr constant [14 x i8] c"importIntoEnv\00", align 1
@.str.669 = private unnamed_addr constant [12 x i8] c"env.profile\00", align 1
@.str.670 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.671 = private unnamed_addr constant [12 x i8] c"setEncoding\00", align 1
@.str.672 = private unnamed_addr constant [13 x i8] c"setTimeLimit\00", align 1
@.str.673 = private unnamed_addr constant [20 x i8] c"setSessionTimeLimit\00", align 1
@.str.674 = private unnamed_addr constant [14 x i8] c"icuSetCollate\00", align 1
@.str.675 = private unnamed_addr constant [14 x i8] c"icuGetCollate\00", align 1
@.str.676 = private unnamed_addr constant [13 x i8] c"readRenviron\00", align 1
@.str.677 = private unnamed_addr constant [14 x i8] c"shortRowNames\00", align 1
@.str.678 = private unnamed_addr constant [11 x i8] c"copyDFattr\00", align 1
@.str.679 = private unnamed_addr constant [22 x i8] c"getRegisteredRoutines\00", align 1
@.str.680 = private unnamed_addr constant [14 x i8] c"getLoadedDLLs\00", align 1
@.str.681 = private unnamed_addr constant [14 x i8] c"getSymbolInfo\00", align 1
@.str.682 = private unnamed_addr constant [21 x i8] c".isMethodsDispatchOn\00", align 1
@.str.683 = private unnamed_addr constant [16 x i8] c"lazyLoadDBfetch\00", align 1
@.str.684 = private unnamed_addr constant [16 x i8] c"lazyLoadDBflush\00", align 1
@.str.685 = private unnamed_addr constant [17 x i8] c"getVarsFromFrame\00", align 1
@.str.686 = private unnamed_addr constant [22 x i8] c"lazyLoadDBinsertValue\00", align 1
@.str.687 = private unnamed_addr constant [8 x i8] c"bincode\00", align 1
@.str.688 = private unnamed_addr constant [9 x i8] c"tabulate\00", align 1
@.str.689 = private unnamed_addr constant [13 x i8] c"findInterval\00", align 1
@.str.690 = private unnamed_addr constant [7 x i8] c"pretty\00", align 1
@.str.691 = private unnamed_addr constant [8 x i8] c"formatC\00", align 1
@.str.692 = private unnamed_addr constant [6 x i8] c"crc64\00", align 1
@.str.693 = private unnamed_addr constant [11 x i8] c"bitwiseAnd\00", align 1
@.str.694 = private unnamed_addr constant [11 x i8] c"bitwiseNot\00", align 1
@.str.695 = private unnamed_addr constant [10 x i8] c"bitwiseOr\00", align 1
@.str.696 = private unnamed_addr constant [11 x i8] c"bitwiseXor\00", align 1
@.str.697 = private unnamed_addr constant [14 x i8] c"bitwiseShiftL\00", align 1
@.str.698 = private unnamed_addr constant [14 x i8] c"bitwiseShiftR\00", align 1
@.str.699 = private unnamed_addr constant [10 x i8] c"serialize\00", align 1
@.str.700 = private unnamed_addr constant [11 x i8] c"serializeb\00", align 1
@.str.701 = private unnamed_addr constant [12 x i8] c"unserialize\00", align 1
@.str.702 = private unnamed_addr constant [14 x i8] c"rowsum_matrix\00", align 1
@.str.703 = private unnamed_addr constant [10 x i8] c"rowsum_df\00", align 1
@.str.704 = private unnamed_addr constant [12 x i8] c"setS4Object\00", align 1
@.str.705 = private unnamed_addr constant [11 x i8] c"traceOnOff\00", align 1
@.str.706 = private unnamed_addr constant [11 x i8] c"debugOnOff\00", align 1
@.str.707 = private unnamed_addr constant [12 x i8] c"La_qr_cmplx\00", align 1
@.str.708 = private unnamed_addr constant [6 x i8] c"La_rs\00", align 1
@.str.709 = private unnamed_addr constant [12 x i8] c"La_rs_cmplx\00", align 1
@.str.710 = private unnamed_addr constant [6 x i8] c"La_rg\00", align 1
@.str.711 = private unnamed_addr constant [12 x i8] c"La_rg_cmplx\00", align 1
@.str.712 = private unnamed_addr constant [10 x i8] c"La_dlange\00", align 1
@.str.713 = private unnamed_addr constant [10 x i8] c"La_dgecon\00", align 1
@.str.714 = private unnamed_addr constant [10 x i8] c"La_dtrcon\00", align 1
@.str.715 = private unnamed_addr constant [10 x i8] c"La_zgecon\00", align 1
@.str.716 = private unnamed_addr constant [10 x i8] c"La_ztrcon\00", align 1
@.str.717 = private unnamed_addr constant [15 x i8] c"La_solve_cmplx\00", align 1
@.str.718 = private unnamed_addr constant [9 x i8] c"La_solve\00", align 1
@.str.719 = private unnamed_addr constant [6 x i8] c"La_qr\00", align 1
@.str.720 = private unnamed_addr constant [8 x i8] c"La_chol\00", align 1
@.str.721 = private unnamed_addr constant [12 x i8] c"La_chol2inv\00", align 1
@.str.722 = private unnamed_addr constant [13 x i8] c"qr_coef_real\00", align 1
@.str.723 = private unnamed_addr constant [11 x i8] c"qr_qy_real\00", align 1
@.str.724 = private unnamed_addr constant [12 x i8] c"det_ge_real\00", align 1
@.str.725 = private unnamed_addr constant [14 x i8] c"qr_coef_cmplx\00", align 1
@.str.726 = private unnamed_addr constant [12 x i8] c"qr_qy_cmplx\00", align 1
@.str.727 = private unnamed_addr constant [7 x i8] c"La_svd\00", align 1
@.str.728 = private unnamed_addr constant [13 x i8] c"La_svd_cmplx\00", align 1
@.str.729 = private unnamed_addr constant [11 x i8] c"La_version\00", align 1
@.str.730 = private unnamed_addr constant [11 x i8] c"La_library\00", align 1
@.str.731 = private unnamed_addr constant [13 x i8] c"bcprofcounts\00", align 1
@.str.732 = private unnamed_addr constant [12 x i8] c"bcprofstart\00", align 1
@.str.733 = private unnamed_addr constant [11 x i8] c"bcprofstop\00", align 1
@.str.734 = private unnamed_addr constant [13 x i8] c"eSoftVersion\00", align 1
@.str.735 = private unnamed_addr constant [12 x i8] c"curlVersion\00", align 1
@.str.736 = private unnamed_addr constant [15 x i8] c"curlGetHeaders\00", align 1
@.str.737 = private unnamed_addr constant [13 x i8] c"curlDownload\00", align 1
@R_FunTab = global [741 x %struct.FUNTAB] [%struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_if, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 10, i32 0, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_while, i32 0, i32 100, i32 2, %struct.PPinfo { i32 16, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_for, i32 0, i32 100, i32 3, %struct.PPinfo { i32 7, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_repeat, i32 0, i32 100, i32 1, %struct.PPinfo { i32 20, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_break, i32 2, i32 0, i32 0, %struct.PPinfo { i32 5, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_break, i32 1, i32 0, i32 0, %struct.PPinfo { i32 11, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_return, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 13, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_function, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 9, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_set, i32 1, i32 100, i32 -1, %struct.PPinfo { i32 1, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_set, i32 3, i32 100, i32 -1, %struct.PPinfo { i32 1, i32 1, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_set, i32 2, i32 100, i32 -1, %struct.PPinfo { i32 2, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_begin, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 6, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_paren, i32 0, i32 1, i32 1, %struct.PPinfo { i32 12, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subset_dflt, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subset2_dflt, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subset, i32 1, i32 0, i32 -1, %struct.PPinfo { i32 15, i32 15, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subset2, i32 2, i32 0, i32 -1, %struct.PPinfo { i32 15, i32 15, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subset3, i32 3, i32 0, i32 2, %struct.PPinfo { i32 18, i32 16, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_AT, i32 0, i32 0, i32 2, %struct.PPinfo { i32 18, i32 16, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subassign, i32 0, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subassign2, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_subassign3, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_switch, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_browser, i32 0, i32 101, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_trace, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_trace, i32 1, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_internal, i32 0, i32 200, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_primitive, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_call, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_quote, i32 0, i32 0, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_substitute, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_missing, i32 1, i32 0, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_nargs, i32 1, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_onexit, i32 0, i32 100, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_forceAndCall, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_stop, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_warning, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gettext, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_ngettext, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bindtextdomain, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_addCondHands, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.41, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_addGlobHands, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_resetCondHands, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_signalCondition, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dfltStop, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dfltWarn, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_addRestart, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.47, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getRestart, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_invokeRestart, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_addTryHandlers, i32 0, i32 111, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.50, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_geterrmessage, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_seterrmessage, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.52, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_printDeferredWarnings, i32 0, i32 111, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.53, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_interruptsSuspended, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asfunction, i32 0, i32 11, i32 2, %struct.PPinfo { i32 9, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_debug, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_debug, i32 1, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_debug, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_debug, i32 3, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_recall, i32 0, i32 210, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_delayed, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.61, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_makelazy, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.62, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_identical, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tryCatchHelper, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 3, i32 9, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 3, i32 9, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 3, i32 1, i32 2, %struct.PPinfo { i32 3, i32 10, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 4, i32 1, i32 2, %struct.PPinfo { i32 4, i32 10, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 5, i32 1, i32 2, %struct.PPinfo { i32 4, i32 14, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 6, i32 1, i32 2, %struct.PPinfo { i32 4, i32 11, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_arith, i32 7, i32 1, i32 2, %struct.PPinfo { i32 4, i32 11, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_matprod, i32 0, i32 1, i32 2, %struct.PPinfo { i32 3, i32 11, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 1, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 2, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 3, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 4, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 5, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_relop, i32 6, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic, i32 1, i32 1, i32 2, %struct.PPinfo { i32 3, i32 6, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic, i32 2, i32 1, i32 2, %struct.PPinfo { i32 3, i32 5, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic, i32 3, i32 1, i32 1, %struct.PPinfo { i32 17, i32 7, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic2, i32 1, i32 0, i32 2, %struct.PPinfo { i32 3, i32 6, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic2, i32 2, i32 0, i32 2, %struct.PPinfo { i32 3, i32 5, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_colon, i32 0, i32 1, i32 2, %struct.PPinfo { i32 4, i32 12, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.84, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tilde, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 3, i32 4, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.85, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic3, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.86, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_logic3, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotsElt, i32 0, i32 201, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotsLength, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotsNames, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_length, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lengthgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.92, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_c, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_class, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.94, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_classgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @R_do_data_class, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @R_do_data_class, i32 1, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.97, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @R_do_data_class, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.98, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @R_do_set_class, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unclass, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_names, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_namesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dimnames, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.103, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dimnamesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dim, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.105, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dimgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attributes, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attributesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attrgets, i32 0, i32 1, i32 3, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.110, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attrgets, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.111, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_levelsgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_makevector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.113, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_complex, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_matrix, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.115, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_array, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.116, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_diag, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_backsolve, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_maxcol, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.119, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rowscols, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.120, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rowscols, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.121, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unlist, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bind, i32 1, i32 10, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bind, i32 2, i32 10, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_drop, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.125, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_allnames, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_comment, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.127, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_commentgets, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.128, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_get, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.129, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_get, i32 2, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.130, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mget, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.131, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_get, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.132, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_assign, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.133, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_list2env, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.134, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_remove, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.135, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_duplicated, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.136, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_duplicated, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_duplicated, i32 2, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_anyNA, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.139, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_which, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.140, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_first_min, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pmin, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pmin, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.143, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_first_min, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.144, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_match, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.145, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pmatch, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_charmatch, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_matchcall, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.148, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_matprod, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.149, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_matprod, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lengths, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.151, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sequence, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.152, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_attach, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.153, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_detach, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.154, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_search, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.155, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setFileTime, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.156, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_Math2, i32 10001, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.157, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_Math2, i32 10004, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.158, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_log, i32 10003, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.159, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_log1arg, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.160, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_log1arg, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.161, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_abs, i32 6, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.162, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.163, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.164, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.165, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.166, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_trunc, i32 5, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.167, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.168, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 11, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 12, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.170, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 20, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.171, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 21, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.172, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 22, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 23, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.174, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 24, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.175, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 25, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.176, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 30, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.177, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 31, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.178, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 32, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.179, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 33, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 34, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.181, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 35, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.182, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 40, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.183, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 41, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.184, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 42, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 43, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.186, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 47, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.187, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 48, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.188, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math1, i32 49, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.189, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.190, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.191, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.193, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.194, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 6, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.195, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 7, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.196, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 8, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 9, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.198, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 10, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.199, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 11, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 12, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.201, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 13, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.202, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 14, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 15, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.204, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 16, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 17, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.206, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 18, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.207, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 19, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.208, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 20, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.209, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 21, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.210, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 22, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.211, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 23, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.212, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 24, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.213, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 25, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.214, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math2, i32 26, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.215, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cmathfuns, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.216, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cmathfuns, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.217, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cmathfuns, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.218, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cmathfuns, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.219, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cmathfuns, i32 5, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.220, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.221, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 2, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.222, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 3, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.223, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 4, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.224, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 5, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.225, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 6, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.226, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 7, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.227, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 8, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.228, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 9, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.229, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 10, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.230, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 11, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.231, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 12, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.232, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 13, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.233, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 14, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.234, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 15, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.235, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 16, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.236, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 17, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.237, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 18, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.238, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 19, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.239, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 20, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.240, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 21, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.241, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 22, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.242, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 23, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.243, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 24, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.244, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 25, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.245, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 26, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.246, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 27, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.247, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 28, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.248, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 29, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.249, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 30, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 31, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.251, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 32, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.252, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 33, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.253, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 34, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 35, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.255, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 36, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.256, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 37, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.257, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 38, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.258, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 39, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.259, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 40, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.260, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 41, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.261, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 42, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.262, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 43, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.263, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 44, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.264, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 45, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.265, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 46, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.266, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math3, i32 47, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.267, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.268, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 2, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.269, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 3, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.270, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 4, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.271, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 5, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.272, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 6, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.273, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 7, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.274, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 8, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.275, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 9, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.276, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 10, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.277, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 11, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.278, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_math4, i32 12, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.279, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.280, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.281, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.282, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.283, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.284, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random1, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.285, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.286, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.287, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 2, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.288, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 3, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.289, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 4, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.290, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 5, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.291, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 6, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.292, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 7, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.293, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 13, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.294, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 12, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.295, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 8, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.296, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 9, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.297, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 10, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.298, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random2, i32 11, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.299, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_random3, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.300, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sample, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.301, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sample2, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_RNGkind, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.303, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setseed, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.304, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_summary, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.305, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_summary, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.306, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_summary, i32 3, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.307, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_summary, i32 4, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.308, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_summary, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.309, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_range, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.310, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cum, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.311, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cum, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.312, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cum, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.313, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cum, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.314, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.315, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.316, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.317, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.318, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 3, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.319, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 4, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.320, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asatomic, i32 5, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.321, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_ascall, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.322, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_as_environment, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.323, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_storage_mode, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.324, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asCharacterFactor, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.325, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asvector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.326, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_paste, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.327, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_paste, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.328, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filepath, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.329, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_format, i32 0, i32 11, i32 9, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.330, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_formatinfo, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.331, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_cat, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.332, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_docall, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.333, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_str2lang, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.334, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_str2lang, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.335, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_nchar, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.336, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_nzchar, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.337, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_substr, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.338, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_startsWith, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.339, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_startsWith, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.340, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_substrgets, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.341, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_strsplit, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.342, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_abbrev, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.343, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_makenames, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.344, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pcre_config, i32 1, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.345, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_grep, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.346, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_grep, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.347, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_grepraw, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.348, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gsub, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.349, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gsub, i32 1, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.350, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_regexpr, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.351, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_regexpr, i32 1, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.352, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_regexec, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.353, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_agrep, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.354, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_agrep, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.355, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_adist, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.356, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_aregexec, i32 1, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.357, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tolower, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.358, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tolower, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.359, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_chartr, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.360, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sprintf, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.361, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_makeunique, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.362, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_charToRaw, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.363, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rawToChar, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.364, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rawShift, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.365, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_intToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.366, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_numToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_numToInts, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.368, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rawToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.369, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_packBits, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.370, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_utf8ToInt, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.371, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_intToUtf8, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.372, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_validUTF8, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.373, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_validEnc, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.374, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_encodeString, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.375, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_iconv, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.376, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_strtrim, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.377, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_strtoi, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.378, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_strrep, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.379, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.380, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.381, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 13, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.382, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 14, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.383, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 15, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.384, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 16, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.385, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.386, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.387, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.388, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 19, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.389, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.390, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 20, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.391, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 24, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.392, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 50, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 51, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.394, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 100, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.395, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 101, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.396, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 102, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.397, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 200, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.398, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 201, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.399, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 300, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.400, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 301, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.401, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 302, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.402, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is, i32 999, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.403, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isna, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.404, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isnan, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.405, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isfinite, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.406, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isinfinite, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.407, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isvector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.408, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_proctime, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.409, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gctime, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.410, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_withVisible, i32 1, i32 10, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.411, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_expression, i32 1, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.412, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_interactive, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.413, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_invisible, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.414, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rep, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.415, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rep_int, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.416, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rep_len, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.417, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_seq, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.418, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_seq_len, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.419, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_seq_along, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.420, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_makelist, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.421, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_xtfrm, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.422, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_enc2, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.423, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_enc2, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.424, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_emptyenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.425, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_baseenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.426, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_globalenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.427, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_envirgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.428, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pos2env, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.429, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotCode, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.430, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotCode, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.431, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_External, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.432, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_External, i32 1, i32 201, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.433, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotcall, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.434, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_Externalgr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.435, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dotcallgr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.436, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_eapply, i32 0, i32 10, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.437, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapply, i32 0, i32 10, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.438, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_vapply, i32 0, i32 10, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.439, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mapply, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.440, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_version, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.441, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_machine, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.442, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_commandArgs, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.443, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_internalsID, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.444, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_system, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.445, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_parse, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.446, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_save, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.447, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_saveToConn, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.448, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_load, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.449, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_loadFromConn2, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.450, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_loadFromConn2, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.451, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_serializeToConn, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.452, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unserializeFromConn, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.453, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unserializeFromConn, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.454, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_deparse, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.455, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dput, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.456, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dump, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.457, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_quit, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.458, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readln, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.459, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_printdefault, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.460, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_prmatrix, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.461, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gc, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.462, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gcinfo, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.463, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gctorture, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.464, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gctorture2, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.465, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_memoryprofile, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.466, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_maxVSize, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.467, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_maxNSize, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.468, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_split, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.469, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isloaded, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.470, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_recordGraphics, i32 0, i32 211, i32 3, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.471, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dynload, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.472, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dynunload, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.473, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_ls, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.474, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_typeof, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.475, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_eval, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.476, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_returnValue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.477, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.478, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 2, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.479, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 3, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.480, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 4, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.481, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 5, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.482, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 6, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.483, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 7, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.484, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 8, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.485, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sys, i32 9, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.486, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_traceback, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.487, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysbrowser, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.488, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysbrowser, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.489, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysbrowser, i32 3, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.490, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_parentframe, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.491, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sort, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.492, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isunsorted, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.493, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sorted_fpass, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.494, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_psort, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.495, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_qsort, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.496, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_radixsort, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.497, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_order, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.498, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rank, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.499, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_scan, i32 0, i32 11, i32 19, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.500, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_transpose, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.501, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_aperm, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.502, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_builtins, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.503, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_args, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.504, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_formals, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.505, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_body, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.506, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bodyCode, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.507, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_envir, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.508, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_envirName, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.509, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_env2list, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.510, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_regFinaliz, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.511, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_options, i32 0, i32 211, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.512, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getOption, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.513, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sink, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.514, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sinknumber, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.515, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rapply, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.516, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_islistfactor, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.517, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_colsum, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.518, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_colsum, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.519, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_colsum, i32 2, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.520, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_colsum, i32 3, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.521, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tracemem, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.522, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_retracemem, i32 0, i32 201, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.523, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_untracemem, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.524, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_inspect, i32 0, i32 111, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.525, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_address, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.526, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_named, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.527, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_refcnt, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.528, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_merge, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.529, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_capabilities, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.530, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_capabilitiesX11, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.531, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_newenv, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.532, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_parentenv, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.533, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_parentenvgets, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.534, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_topenv, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.535, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_l10n_info, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.536, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_Cstack_info, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.537, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mmap_file, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.538, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_munmap_file, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.539, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_wrap_meta, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.540, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tryWrap, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.541, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_altrep_class, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.542, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileshow, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.543, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filecreate, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.544, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileremove, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.545, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filerename, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.546, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileappend, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.547, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filesymlink, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.548, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filelink, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.549, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filecopy, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.550, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_listfiles, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.551, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_listdirs, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.552, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileexists, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.553, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_filechoose, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.554, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileinfo, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.555, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fileaccess, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.556, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_direxists, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.557, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dircreate, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.558, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tempfile, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.559, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tempdir, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.560, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_Rhome, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.561, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_date, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.562, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getenv, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.563, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setenv, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.564, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unsetenv, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.565, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getwd, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.566, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setwd, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.567, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_basename, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.568, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_dirname, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.569, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_syschmod, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.570, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysumask, i32 0, i32 211, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.571, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readlink, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.572, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysinfo, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.573, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_syssleep, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.574, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getlocale, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.575, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setlocale, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.576, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_localeconv, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.577, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pathexpand, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.578, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sysgetpid, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.579, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_normalizepath, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.580, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_glob, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.581, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unlink, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.582, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_polyroot, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.583, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_inherits, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.584, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_usemethod, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.585, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_nextmethod, i32 0, i32 210, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.586, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_standardGeneric, i32 0, i32 201, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.587, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_systime, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.588, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asPOSIXct, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.589, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_asPOSIXlt, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.590, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_formatPOSIXlt, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.591, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_strptime, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.592, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_D2POSIXlt, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.593, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_POSIXlt2D, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.594, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mkcode, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.595, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bcclose, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.596, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_is_builtin_internal, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.597, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_disassemble, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.598, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bcversion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.599, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_loadfile, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.600, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_savefile, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.601, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_growconst, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.602, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_putconst, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.603, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getconst, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.604, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_enablejit, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.605, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_compilepkgs, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.606, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setnumthreads, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.607, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setmaxnumthreads, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.608, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_stdin, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.609, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_stdout, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.610, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_stderr, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.611, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isatty, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.612, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readLines, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.613, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_writelines, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.614, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readbin, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.615, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_writebin, i32 0, i32 211, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.616, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readchar, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.617, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_writechar, i32 0, i32 211, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.618, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_open, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.619, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isopen, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.620, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isincomplete, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.621, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isseekable, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.622, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_close, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.623, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_flush, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.624, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_url, i32 1, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.625, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_url, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.626, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pipe, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.627, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_fifo, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.628, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gzfile, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.629, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gzfile, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.630, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gzfile, i32 2, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.631, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unz, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.632, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_seek, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.633, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_truncate, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.634, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pushback, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.635, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_clearpushback, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.636, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pushbacklength, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.637, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rawconnection, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.638, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rawconvalue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.639, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_textconnection, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.640, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_textconvalue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.641, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sockconn, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.642, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sockconn, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.643, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sockselect, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.644, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_serversocket, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.645, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_socktimeout, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.646, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getconnection, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.647, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getallconnections, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.648, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_sumconnection, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.649, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_gzcon, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.650, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_memCompress, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.651, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_memDecompress, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.652, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readDCF, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.653, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lockEnv, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.654, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_envIsLocked, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.655, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lockBnd, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.656, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lockBnd, i32 1, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.657, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bndIsLocked, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.658, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mkActiveBnd, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.659, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bndIsActive, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.660, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_activeBndFun, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.661, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_mkUnbound, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.662, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_isNSEnv, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.663, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_regNS, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.664, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_unregNS, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.665, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getRegNS, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.666, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getRegNS, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.667, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getNSRegistry, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.668, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_importIntoEnv, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.669, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_envprofile, i32 0, i32 211, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.670, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_encoding, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.671, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setencoding, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.672, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setTimeLimit, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.673, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setSessionTimeLimit, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.674, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_ICUset, i32 0, i32 111, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.675, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_ICUget, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.676, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_readEnviron, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.677, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_shortRowNames, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.678, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_copyDFattr, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.679, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getRegisteredRoutines, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.680, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getDllTable, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.681, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getSymbolInfo, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.682, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_S4on, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.683, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lazyLoadDBfetch, i32 0, i32 1, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.684, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lazyLoadDBflush, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.685, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_getVarsFromFrame, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.686, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lazyLoadDBinsertValue, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.687, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bincode, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.688, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_tabulate, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.689, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_findinterval, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.690, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_pretty, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.691, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_formatC, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.692, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_crc64, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.693, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.694, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.695, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.696, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.697, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.698, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bitwise, i32 6, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.699, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_serialize, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.700, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_serialize, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.701, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_serialize, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.702, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rowsum, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.703, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_rowsum, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.704, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_setS4Object, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.705, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_traceOnOff, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.706, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_traceOnOff, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.707, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.708, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.709, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.710, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.711, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 41, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.708, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.709, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 51, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.712, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 6, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.713, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 7, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.714, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 8, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.715, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 9, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.716, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 10, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.717, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 11, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.718, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 100, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.719, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 101, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.720, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 200, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.721, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 201, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.722, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 300, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.723, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 301, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.724, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 302, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.725, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 303, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.726, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 304, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.727, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 400, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.728, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 401, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.729, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 1000, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.730, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_lapack, i32 1001, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.731, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bcprofcounts, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.732, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bcprofstart, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.733, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_bcprofstop, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.734, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_eSoftVersion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.735, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_curlVersion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.736, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_curlGetHeaders, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.737, i32 0, i32 0), %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)* @do_curlDownload, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB zeroinitializer], align 16, !dbg !0
@R_NilValue = external global %struct.SEXPREC*, align 8
@.str.738 = private unnamed_addr constant [25 x i8] c"string argument required\00", align 1
@.str.739 = private unnamed_addr constant [27 x i8] c"no such primitive function\00", align 1
@R_NaInt = external global i32, align 4
@DDVALSymbols = internal global [65 x %struct.SEXPREC*] zeroinitializer, align 16, !dbg !59
@R_SymbolTable = external global %struct.SEXPREC**, align 8
@.str.740 = private unnamed_addr constant [42 x i8] c"couldn't allocate memory for symbol table\00", align 1
@R_UnboundValue = external global %struct.SEXPREC*, align 8
@.str.741 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@R_MissingArg = external global %struct.SEXPREC*, align 8
@.str.742 = private unnamed_addr constant [15 x i8] c"<in-bc-interp>\00", align 1
@R_InBCInterpreter = external global %struct.SEXPREC*, align 8
@R_RestartToken = external global %struct.SEXPREC*, align 8
@.str.743 = private unnamed_addr constant [21 x i8] c"<current-expression>\00", align 1
@R_CurrentExpression = external global %struct.SEXPREC*, align 8
@R_NaString = external global %struct.SEXPREC*, align 8
@.str.744 = private unnamed_addr constant [3 x i8] c"NA\00", align 1
@R_print = external global %struct.R_PrintData, align 8
@R_BlankString = external global %struct.SEXPREC*, align 8
@R_BlankScalarString = external global %struct.SEXPREC*, align 8
@Spec_name = internal global [40 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* null], align 16, !dbg !64
@.str.745 = private unnamed_addr constant [41 x i8] c"attempt to use zero-length variable name\00", align 1
@.str.746 = private unnamed_addr constant [39 x i8] c"variable names are limited to %d bytes\00", align 1
@utf8locale = external global i32, align 4
@latin1locale = external global i32, align 4
@.str.747 = private unnamed_addr constant [28 x i8] c"class name too long in '%s'\00", align 1
@R_PPStackTop = external global i32, align 4
@.str.748 = private unnamed_addr constant [29 x i8] c"invalid .Internal() argument\00", align 1
@.str.749 = private unnamed_addr constant [36 x i8] c"there is no .Internal function '%s'\00", align 1
@R_Visible = external global i32, align 4
@.str.750 = private unnamed_addr constant [8 x i8] c"formula\00", align 1
@R_ClassSymbol = external global %struct.SEXPREC*, align 8
@R_DotEnvSymbol = external global %struct.SEXPREC*, align 8
@.str.751 = private unnamed_addr constant [5 x i8] c"..%d\00", align 1
@R_Bracket2Symbol = external global %struct.SEXPREC*, align 8
@R_BracketSymbol = external global %struct.SEXPREC*, align 8
@R_BraceSymbol = external global %struct.SEXPREC*, align 8
@.str.752 = private unnamed_addr constant [8 x i8] c".Device\00", align 1
@R_DeviceSymbol = external global %struct.SEXPREC*, align 8
@R_DimNamesSymbol = external global %struct.SEXPREC*, align 8
@R_DimSymbol = external global %struct.SEXPREC*, align 8
@R_DollarSymbol = external global %struct.SEXPREC*, align 8
@.str.753 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@R_DotsSymbol = external global %struct.SEXPREC*, align 8
@R_DropSymbol = external global %struct.SEXPREC*, align 8
@R_EvalSymbol = external global %struct.SEXPREC*, align 8
@.str.754 = private unnamed_addr constant [12 x i8] c".Last.value\00", align 1
@R_LastvalueSymbol = external global %struct.SEXPREC*, align 8
@.str.755 = private unnamed_addr constant [7 x i8] c"levels\00", align 1
@R_LevelsSymbol = external global %struct.SEXPREC*, align 8
@.str.756 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@R_ModeSymbol = external global %struct.SEXPREC*, align 8
@.str.757 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@R_NameSymbol = external global %struct.SEXPREC*, align 8
@R_NamesSymbol = external global %struct.SEXPREC*, align 8
@.str.758 = private unnamed_addr constant [6 x i8] c"na.rm\00", align 1
@R_NaRmSymbol = external global %struct.SEXPREC*, align 8
@.str.759 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@R_PackageSymbol = external global %struct.SEXPREC*, align 8
@.str.760 = private unnamed_addr constant [9 x i8] c"previous\00", align 1
@R_PreviousSymbol = external global %struct.SEXPREC*, align 8
@R_QuoteSymbol = external global %struct.SEXPREC*, align 8
@.str.761 = private unnamed_addr constant [10 x i8] c"row.names\00", align 1
@R_RowNamesSymbol = external global %struct.SEXPREC*, align 8
@.str.762 = private unnamed_addr constant [13 x i8] c".Random.seed\00", align 1
@R_SeedsSymbol = external global %struct.SEXPREC*, align 8
@.str.763 = private unnamed_addr constant [10 x i8] c"sort.list\00", align 1
@R_SortListSymbol = external global %struct.SEXPREC*, align 8
@.str.764 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@R_SourceSymbol = external global %struct.SEXPREC*, align 8
@.str.765 = private unnamed_addr constant [4 x i8] c"tsp\00", align 1
@R_TspSymbol = external global %struct.SEXPREC*, align 8
@R_CommentSymbol = external global %struct.SEXPREC*, align 8
@.str.766 = private unnamed_addr constant [13 x i8] c".Environment\00", align 1
@.str.767 = private unnamed_addr constant [6 x i8] c"exact\00", align 1
@R_ExactSymbol = external global %struct.SEXPREC*, align 8
@.str.768 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@R_RecursiveSymbol = external global %struct.SEXPREC*, align 8
@.str.769 = private unnamed_addr constant [8 x i8] c"srcfile\00", align 1
@R_SrcfileSymbol = external global %struct.SEXPREC*, align 8
@.str.770 = private unnamed_addr constant [7 x i8] c"srcref\00", align 1
@R_SrcrefSymbol = external global %struct.SEXPREC*, align 8
@.str.771 = private unnamed_addr constant [12 x i8] c"wholeSrcref\00", align 1
@R_WholeSrcrefSymbol = external global %struct.SEXPREC*, align 8
@.str.772 = private unnamed_addr constant [6 x i8] c"*tmp*\00", align 1
@R_TmpvalSymbol = external global %struct.SEXPREC*, align 8
@.str.773 = private unnamed_addr constant [10 x i8] c"use.names\00", align 1
@R_UseNamesSymbol = external global %struct.SEXPREC*, align 8
@R_ColonSymbol = external global %struct.SEXPREC*, align 8
@.str.774 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@R_DoubleColonSymbol = external global %struct.SEXPREC*, align 8
@.str.775 = private unnamed_addr constant [4 x i8] c":::\00", align 1
@R_TripleColonSymbol = external global %struct.SEXPREC*, align 8
@.str.776 = private unnamed_addr constant [8 x i8] c"conn_id\00", align 1
@R_ConnIdSymbol = external global %struct.SEXPREC*, align 8
@.str.777 = private unnamed_addr constant [9 x i8] c".Devices\00", align 1
@R_DevicesSymbol = external global %struct.SEXPREC*, align 8
@.str.778 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@R_BaseSymbol = external global %struct.SEXPREC*, align 8
@R_baseSymbol = external global %struct.SEXPREC*, align 8
@.str.779 = private unnamed_addr constant [5 x i8] c"spec\00", align 1
@R_SpecSymbol = external global %struct.SEXPREC*, align 8
@.str.780 = private unnamed_addr constant [16 x i8] c".__NAMESPACE__.\00", align 1
@R_NamespaceEnvSymbol = external global %struct.SEXPREC*, align 8
@R_AsCharacterSymbol = external global %struct.SEXPREC*, align 8
@.str.781 = private unnamed_addr constant [9 x i8] c".Generic\00", align 1
@R_dot_Generic = external global %struct.SEXPREC*, align 8
@.str.782 = private unnamed_addr constant [8 x i8] c".Method\00", align 1
@R_dot_Method = external global %struct.SEXPREC*, align 8
@.str.783 = private unnamed_addr constant [9 x i8] c".Methods\00", align 1
@R_dot_Methods = external global %struct.SEXPREC*, align 8
@.str.784 = private unnamed_addr constant [9 x i8] c".defined\00", align 1
@R_dot_defined = external global %struct.SEXPREC*, align 8
@.str.785 = private unnamed_addr constant [8 x i8] c".target\00", align 1
@R_dot_target = external global %struct.SEXPREC*, align 8
@.str.786 = private unnamed_addr constant [7 x i8] c".Group\00", align 1
@R_dot_Group = external global %struct.SEXPREC*, align 8
@.str.787 = private unnamed_addr constant [7 x i8] c".Class\00", align 1
@R_dot_Class = external global %struct.SEXPREC*, align 8
@.str.788 = private unnamed_addr constant [16 x i8] c".GenericCallEnv\00", align 1
@R_dot_GenericCallEnv = external global %struct.SEXPREC*, align 8
@.str.789 = private unnamed_addr constant [15 x i8] c".GenericDefEnv\00", align 1
@R_dot_GenericDefEnv = external global %struct.SEXPREC*, align 8
@.str.790 = private unnamed_addr constant [13 x i8] c".packageName\00", align 1
@R_dot_packageName = external global %struct.SEXPREC*, align 8

declare %struct.SEXPREC* @do_if(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_while(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_for(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_repeat(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_break(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_return(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

declare %struct.SEXPREC* @do_function(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_set(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_begin(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_paren(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subset_dflt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subset2_dflt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subset(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subset2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subset3(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_AT(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subassign(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subassign2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_subassign3(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_switch(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_browser(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_trace(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @do_internal(%struct.SEXPREC* %call, %struct.SEXPREC* %op, %struct.SEXPREC* %args, %struct.SEXPREC* %env) #2 !dbg !100 {
entry:
  %call.addr = alloca %struct.SEXPREC*, align 8
  %op.addr = alloca %struct.SEXPREC*, align 8
  %args.addr = alloca %struct.SEXPREC*, align 8
  %env.addr = alloca %struct.SEXPREC*, align 8
  %s = alloca %struct.SEXPREC*, align 8
  %fun = alloca %struct.SEXPREC*, align 8
  %ans = alloca %struct.SEXPREC*, align 8
  %save = alloca i32, align 4
  %flag = alloca i32, align 4
  %vmax = alloca i8*, align 8
  store %struct.SEXPREC* %call, %struct.SEXPREC** %call.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %call.addr, metadata !102, metadata !DIExpression()), !dbg !103
  store %struct.SEXPREC* %op, %struct.SEXPREC** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %op.addr, metadata !104, metadata !DIExpression()), !dbg !105
  store %struct.SEXPREC* %args, %struct.SEXPREC** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %args.addr, metadata !106, metadata !DIExpression()), !dbg !107
  store %struct.SEXPREC* %env, %struct.SEXPREC** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %env.addr, metadata !108, metadata !DIExpression()), !dbg !109
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %s, metadata !110, metadata !DIExpression()), !dbg !111
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %fun, metadata !112, metadata !DIExpression()), !dbg !113
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %ans, metadata !114, metadata !DIExpression()), !dbg !115
  call void @llvm.dbg.declare(metadata i32* %save, metadata !116, metadata !DIExpression()), !dbg !117
  %0 = load i32, i32* @R_PPStackTop, align 4, !dbg !118
  store i32 %0, i32* %save, align 4, !dbg !117
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !119, metadata !DIExpression()), !dbg !120
  call void @llvm.dbg.declare(metadata i8** %vmax, metadata !121, metadata !DIExpression()), !dbg !124
  %call1 = call i8* @vmaxget(), !dbg !125
  store i8* %call1, i8** %vmax, align 8, !dbg !124
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** %op.addr, align 8, !dbg !126
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !126
  %3 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !126
  call void @Rf_checkArityCall(%struct.SEXPREC* %1, %struct.SEXPREC* %2, %struct.SEXPREC* %3), !dbg !126
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !127
  %call2 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %4), !dbg !128
  store %struct.SEXPREC* %call2, %struct.SEXPREC** %s, align 8, !dbg !129
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %s, align 8, !dbg !130
  %call3 = call i32 @Rf_isPairList(%struct.SEXPREC* %5), !dbg !132
  %tobool = icmp ne i32 %call3, 0, !dbg !132
  br i1 %tobool, label %if.end, label %if.then, !dbg !133

if.then:                                          ; preds = %entry
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !134
  %call4 = call i8* @libintl_gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.748, i32 0, i32 0)), !dbg !135
  call void (%struct.SEXPREC*, i8*, ...) @Rf_errorcall(%struct.SEXPREC* %6, i8* %call4) #6, !dbg !136
  unreachable, !dbg !136

if.end:                                           ; preds = %entry
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** %s, align 8, !dbg !137
  %call5 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %7), !dbg !138
  store %struct.SEXPREC* %call5, %struct.SEXPREC** %fun, align 8, !dbg !139
  %8 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !140
  %call6 = call i32 @Rf_isSymbol(%struct.SEXPREC* %8), !dbg !142
  %tobool7 = icmp ne i32 %call6, 0, !dbg !142
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !143

if.then8:                                         ; preds = %if.end
  %9 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !144
  %call9 = call i8* @libintl_gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.748, i32 0, i32 0)), !dbg !145
  call void (%struct.SEXPREC*, i8*, ...) @Rf_errorcall(%struct.SEXPREC* %9, i8* %call9) #6, !dbg !146
  unreachable, !dbg !146

if.end10:                                         ; preds = %if.end
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !147
  %call11 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %10), !dbg !149
  %11 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !150
  %cmp = icmp eq %struct.SEXPREC* %call11, %11, !dbg !151
  br i1 %cmp, label %if.then12, label %if.end16, !dbg !152

if.then12:                                        ; preds = %if.end10
  %12 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !153
  %call13 = call i8* @libintl_gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.749, i32 0, i32 0)), !dbg !154
  %13 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !155
  %call14 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %13), !dbg !155
  %call15 = call i8* @R_CHAR(%struct.SEXPREC* %call14), !dbg !155
  call void (%struct.SEXPREC*, i8*, ...) @Rf_errorcall(%struct.SEXPREC* %12, i8* %call13, i8* %call15) #6, !dbg !156
  unreachable, !dbg !156

if.end16:                                         ; preds = %if.end10
  %14 = load %struct.SEXPREC*, %struct.SEXPREC** %s, align 8, !dbg !157
  %call17 = call %struct.SEXPREC* @CDR(%struct.SEXPREC* %14), !dbg !158
  store %struct.SEXPREC* %call17, %struct.SEXPREC** %args.addr, align 8, !dbg !159
  %15 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !160
  %call18 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %15), !dbg !162
  %call19 = call i32 @TYPEOF(%struct.SEXPREC* %call18), !dbg !163
  %cmp20 = icmp eq i32 %call19, 8, !dbg !164
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !165

if.then21:                                        ; preds = %if.end16
  %16 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !166
  %17 = load %struct.SEXPREC*, %struct.SEXPREC** %env.addr, align 8, !dbg !167
  %18 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !168
  %call22 = call %struct.SEXPREC* @Rf_evalList(%struct.SEXPREC* %16, %struct.SEXPREC* %17, %struct.SEXPREC* %18, i32 0), !dbg !169
  store %struct.SEXPREC* %call22, %struct.SEXPREC** %args.addr, align 8, !dbg !170
  br label %if.end23, !dbg !171

if.end23:                                         ; preds = %if.then21, %if.end16
  %19 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !172
  %call24 = call %struct.SEXPREC* @Rf_protect(%struct.SEXPREC* %19), !dbg !172
  %20 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !173
  %call25 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %20), !dbg !173
  %call26 = call i32 @PRIMOFFSET(%struct.SEXPREC* %call25), !dbg !173
  %idxprom = sext i32 %call26 to i64, !dbg !173
  %arrayidx = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom, !dbg !173
  %Rf_eval = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx, i32 0, i32 3, !dbg !173
  %21 = load i32, i32* %Rf_eval, align 4, !dbg !173
  %div = sdiv i32 %21, 100, !dbg !173
  %rem = srem i32 %div, 10, !dbg !173
  store i32 %rem, i32* %flag, align 4, !dbg !174
  %22 = load i32, i32* %flag, align 4, !dbg !175
  %cmp27 = icmp ne i32 %22, 1, !dbg !176
  %conv = zext i1 %cmp27 to i32, !dbg !176
  store i32 %conv, i32* @R_Visible, align 4, !dbg !177
  %23 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !178
  %call28 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %23), !dbg !178
  %call29 = call i32 @PRIMOFFSET(%struct.SEXPREC* %call28), !dbg !178
  %idxprom30 = sext i32 %call29 to i64, !dbg !178
  %arrayidx31 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom30, !dbg !178
  %cfun = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx31, i32 0, i32 1, !dbg !178
  %24 = load %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)*, %struct.SEXPREC* (%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*)** %cfun, align 8, !dbg !178
  %25 = load %struct.SEXPREC*, %struct.SEXPREC** %s, align 8, !dbg !179
  %26 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !180
  %call32 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %26), !dbg !181
  %27 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !182
  %28 = load %struct.SEXPREC*, %struct.SEXPREC** %env.addr, align 8, !dbg !183
  %call33 = call %struct.SEXPREC* %24(%struct.SEXPREC* %25, %struct.SEXPREC* %call32, %struct.SEXPREC* %27, %struct.SEXPREC* %28), !dbg !178
  store %struct.SEXPREC* %call33, %struct.SEXPREC** %ans, align 8, !dbg !184
  %29 = load i32, i32* %flag, align 4, !dbg !185
  %cmp34 = icmp slt i32 %29, 2, !dbg !187
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !188

if.then36:                                        ; preds = %if.end23
  %30 = load i32, i32* %flag, align 4, !dbg !189
  %cmp37 = icmp ne i32 %30, 1, !dbg !190
  %conv38 = zext i1 %cmp37 to i32, !dbg !190
  store i32 %conv38, i32* @R_Visible, align 4, !dbg !191
  br label %if.end39, !dbg !192

if.end39:                                         ; preds = %if.then36, %if.end23
  call void @Rf_unprotect(i32 1), !dbg !193
  %31 = load %struct.SEXPREC*, %struct.SEXPREC** %fun, align 8, !dbg !194
  %call40 = call %struct.SEXPREC* @INTERNAL(%struct.SEXPREC* %31), !dbg !195
  %32 = load i32, i32* %save, align 4, !dbg !196
  call void @Rf_check_stack_balance(%struct.SEXPREC* %call40, i32 %32), !dbg !197
  %33 = load i8*, i8** %vmax, align 8, !dbg !198
  call void @vmaxset(i8* %33), !dbg !199
  %34 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !200
  ret %struct.SEXPREC* %34, !dbg !201
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @do_primitive(%struct.SEXPREC* %call, %struct.SEXPREC* %op, %struct.SEXPREC* %args, %struct.SEXPREC* %env) #2 !dbg !202 {
entry:
  %call.addr = alloca %struct.SEXPREC*, align 8
  %op.addr = alloca %struct.SEXPREC*, align 8
  %args.addr = alloca %struct.SEXPREC*, align 8
  %env.addr = alloca %struct.SEXPREC*, align 8
  %name = alloca %struct.SEXPREC*, align 8
  %prim = alloca %struct.SEXPREC*, align 8
  store %struct.SEXPREC* %call, %struct.SEXPREC** %call.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %call.addr, metadata !203, metadata !DIExpression()), !dbg !204
  store %struct.SEXPREC* %op, %struct.SEXPREC** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %op.addr, metadata !205, metadata !DIExpression()), !dbg !206
  store %struct.SEXPREC* %args, %struct.SEXPREC** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %args.addr, metadata !207, metadata !DIExpression()), !dbg !208
  store %struct.SEXPREC* %env, %struct.SEXPREC** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %env.addr, metadata !209, metadata !DIExpression()), !dbg !210
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %name, metadata !211, metadata !DIExpression()), !dbg !212
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %prim, metadata !213, metadata !DIExpression()), !dbg !214
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** %op.addr, align 8, !dbg !215
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !215
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !215
  call void @Rf_checkArityCall(%struct.SEXPREC* %0, %struct.SEXPREC* %1, %struct.SEXPREC* %2), !dbg !215
  %3 = load %struct.SEXPREC*, %struct.SEXPREC** %args.addr, align 8, !dbg !216
  %call1 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %3), !dbg !217
  store %struct.SEXPREC* %call1, %struct.SEXPREC** %name, align 8, !dbg !218
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** %name, align 8, !dbg !219
  %call2 = call i32 @Rf_isString(%struct.SEXPREC* %4), !dbg !221
  %tobool = icmp ne i32 %call2, 0, !dbg !221
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !222

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %name, align 8, !dbg !223
  %call3 = call i32 @LENGTH(%struct.SEXPREC* %5), !dbg !224
  %cmp = icmp ne i32 %call3, 1, !dbg !225
  br i1 %cmp, label %if.then, label %lor.lhs.false4, !dbg !226

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** %name, align 8, !dbg !227
  %call5 = call %struct.SEXPREC* @STRING_ELT(%struct.SEXPREC* %6, i64 0), !dbg !228
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !229
  %cmp6 = icmp eq %struct.SEXPREC* %call5, %7, !dbg !230
  br i1 %cmp6, label %if.then, label %if.end, !dbg !231

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !232
  %call7 = call i8* @libintl_gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.738, i32 0, i32 0)), !dbg !233
  call void (%struct.SEXPREC*, i8*, ...) @Rf_errorcall(%struct.SEXPREC* %8, i8* %call7) #6, !dbg !234
  unreachable, !dbg !234

if.end:                                           ; preds = %lor.lhs.false4
  %9 = load %struct.SEXPREC*, %struct.SEXPREC** %name, align 8, !dbg !235
  %call8 = call %struct.SEXPREC* @STRING_ELT(%struct.SEXPREC* %9, i64 0), !dbg !235
  %call9 = call i8* @R_CHAR(%struct.SEXPREC* %call8), !dbg !235
  %call10 = call %struct.SEXPREC* @R_Primitive(i8* %call9), !dbg !236
  store %struct.SEXPREC* %call10, %struct.SEXPREC** %prim, align 8, !dbg !237
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %prim, align 8, !dbg !238
  %11 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !240
  %cmp11 = icmp eq %struct.SEXPREC* %10, %11, !dbg !241
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !242

if.then12:                                        ; preds = %if.end
  %12 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !243
  %call13 = call i8* @libintl_gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.739, i32 0, i32 0)), !dbg !244
  call void (%struct.SEXPREC*, i8*, ...) @Rf_errorcall(%struct.SEXPREC* %12, i8* %call13) #6, !dbg !245
  unreachable, !dbg !245

if.end14:                                         ; preds = %if.end
  %13 = load %struct.SEXPREC*, %struct.SEXPREC** %prim, align 8, !dbg !246
  ret %struct.SEXPREC* %13, !dbg !247
}

declare %struct.SEXPREC* @do_call(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_quote(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_substitute(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_missing(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_nargs(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_onexit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_forceAndCall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_stop(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

declare %struct.SEXPREC* @do_warning(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gettext(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_ngettext(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bindtextdomain(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_addCondHands(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_addGlobHands(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_resetCondHands(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_signalCondition(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_dfltStop(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

declare %struct.SEXPREC* @do_dfltWarn(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_addRestart(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getRestart(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_invokeRestart(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

declare %struct.SEXPREC* @do_addTryHandlers(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_geterrmessage(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_seterrmessage(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_printDeferredWarnings(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_interruptsSuspended(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asfunction(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_debug(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_recall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_delayed(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_makelazy(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_identical(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tryCatchHelper(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_arith(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_matprod(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_relop(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_logic(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_logic2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_colon(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @do_tilde(%struct.SEXPREC* %call, %struct.SEXPREC* %op, %struct.SEXPREC* %args, %struct.SEXPREC* %rho) #2 !dbg !248 {
entry:
  %retval = alloca %struct.SEXPREC*, align 8
  %call.addr = alloca %struct.SEXPREC*, align 8
  %op.addr = alloca %struct.SEXPREC*, align 8
  %args.addr = alloca %struct.SEXPREC*, align 8
  %rho.addr = alloca %struct.SEXPREC*, align 8
  %klass = alloca %struct.SEXPREC*, align 8
  store %struct.SEXPREC* %call, %struct.SEXPREC** %call.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %call.addr, metadata !249, metadata !DIExpression()), !dbg !250
  store %struct.SEXPREC* %op, %struct.SEXPREC** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %op.addr, metadata !251, metadata !DIExpression()), !dbg !252
  store %struct.SEXPREC* %args, %struct.SEXPREC** %args.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %args.addr, metadata !253, metadata !DIExpression()), !dbg !254
  store %struct.SEXPREC* %rho, %struct.SEXPREC** %rho.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %rho.addr, metadata !255, metadata !DIExpression()), !dbg !256
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !257
  %call1 = call i32 @Rf_isObject(%struct.SEXPREC* %0), !dbg !259
  %tobool = icmp ne i32 %call1, 0, !dbg !259
  br i1 %tobool, label %if.then, label %if.else, !dbg !260

if.then:                                          ; preds = %entry
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !261
  %call2 = call %struct.SEXPREC* @Rf_duplicate(%struct.SEXPREC* %1), !dbg !262
  store %struct.SEXPREC* %call2, %struct.SEXPREC** %retval, align 8, !dbg !263
  br label %return, !dbg !263

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %klass, metadata !264, metadata !DIExpression()), !dbg !266
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !267
  %call3 = call %struct.SEXPREC* @Rf_duplicate(%struct.SEXPREC* %2), !dbg !267
  store %struct.SEXPREC* %call3, %struct.SEXPREC** %call.addr, align 8, !dbg !267
  %call4 = call %struct.SEXPREC* @Rf_protect(%struct.SEXPREC* %call3), !dbg !267
  %call5 = call %struct.SEXPREC* @Rf_mkString(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.750, i32 0, i32 0)), !dbg !268
  store %struct.SEXPREC* %call5, %struct.SEXPREC** %klass, align 8, !dbg !268
  %call6 = call %struct.SEXPREC* @Rf_protect(%struct.SEXPREC* %call5), !dbg !268
  %3 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !269
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** @R_ClassSymbol, align 8, !dbg !270
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %klass, align 8, !dbg !271
  %call7 = call %struct.SEXPREC* @Rf_setAttrib(%struct.SEXPREC* %3, %struct.SEXPREC* %4, %struct.SEXPREC* %5), !dbg !272
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !273
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** @R_DotEnvSymbol, align 8, !dbg !274
  %8 = load %struct.SEXPREC*, %struct.SEXPREC** %rho.addr, align 8, !dbg !275
  %call8 = call %struct.SEXPREC* @Rf_setAttrib(%struct.SEXPREC* %6, %struct.SEXPREC* %7, %struct.SEXPREC* %8), !dbg !276
  call void @Rf_unprotect(i32 2), !dbg !277
  %9 = load %struct.SEXPREC*, %struct.SEXPREC** %call.addr, align 8, !dbg !278
  store %struct.SEXPREC* %9, %struct.SEXPREC** %retval, align 8, !dbg !279
  br label %return, !dbg !279

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %retval, align 8, !dbg !280
  ret %struct.SEXPREC* %10, !dbg !280
}

declare %struct.SEXPREC* @do_logic3(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotsElt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotsLength(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotsNames(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_length(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lengthgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_c(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_class(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_classgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @R_do_data_class(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @R_do_set_class(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unclass(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_names(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_namesgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dimnames(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dimnamesgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dim(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dimgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_attributes(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_attributesgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_attr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_attrgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_levelsgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_makevector(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_complex(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_matrix(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_array(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_diag(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_backsolve(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_maxcol(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rowscols(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unlist(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bind(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_drop(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_allnames(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_comment(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_commentgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_get(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mget(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_assign(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_list2env(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_remove(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_duplicated(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_anyNA(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_which(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_first_min(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pmin(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_match(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pmatch(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_charmatch(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_matchcall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lengths(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sequence(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_attach(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_detach(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_search(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setFileTime(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_Math2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_log(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_log1arg(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_abs(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_math1(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_trunc(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_math2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_cmathfuns(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_math3(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_math4(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_random1(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_random2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_random3(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sample(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sample2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_RNGkind(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setseed(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_summary(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_range(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_cum(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asatomic(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_ascall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_as_environment(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_storage_mode(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asCharacterFactor(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asvector(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_paste(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filepath(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_format(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_formatinfo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_cat(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_docall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_str2lang(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_nchar(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_nzchar(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_substr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_startsWith(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_substrgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_strsplit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_abbrev(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_makenames(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pcre_config(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_grep(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_grepraw(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gsub(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_regexpr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_regexec(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_agrep(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_adist(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_aregexec(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tolower(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_chartr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sprintf(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_makeunique(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_charToRaw(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rawToChar(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rawShift(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_intToBits(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_numToBits(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_numToInts(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rawToBits(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_packBits(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_utf8ToInt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_intToUtf8(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_validUTF8(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_validEnc(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_encodeString(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_iconv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_strtrim(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_strtoi(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_strrep(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_is(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isna(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isnan(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isfinite(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isinfinite(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isvector(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_proctime(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gctime(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_withVisible(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_expression(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_interactive(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_invisible(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rep(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rep_int(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rep_len(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_seq(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_seq_len(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_seq_along(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_makelist(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_xtfrm(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_enc2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_emptyenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_baseenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_globalenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_envirgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pos2env(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotCode(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_External(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotcall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_Externalgr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dotcallgr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_eapply(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lapply(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_vapply(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mapply(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_version(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_machine(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_commandArgs(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_internalsID(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_system(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_parse(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_save(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_saveToConn(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_load(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_loadFromConn2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_serializeToConn(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unserializeFromConn(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_deparse(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dput(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dump(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_quit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readln(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_printdefault(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_prmatrix(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gc(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gcinfo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gctorture(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gctorture2(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_memoryprofile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_maxVSize(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_maxNSize(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_split(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isloaded(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_recordGraphics(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dynload(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dynunload(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_ls(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_typeof(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_eval(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_returnValue(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sys(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_traceback(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sysbrowser(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_parentframe(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sort(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isunsorted(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sorted_fpass(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_psort(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_qsort(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_radixsort(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_order(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rank(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_scan(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_transpose(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_aperm(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_builtins(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_args(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_formals(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_body(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bodyCode(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_envir(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_envirName(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_env2list(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_regFinaliz(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_options(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getOption(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sink(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sinknumber(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rapply(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_islistfactor(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_colsum(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tracemem(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_retracemem(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_untracemem(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_inspect(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_address(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_named(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_refcnt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_merge(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_capabilities(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_capabilitiesX11(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_newenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_parentenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_parentenvgets(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_topenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_l10n_info(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_Cstack_info(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mmap_file(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_munmap_file(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_wrap_meta(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tryWrap(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_altrep_class(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileshow(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filecreate(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileremove(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filerename(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileappend(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filesymlink(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filelink(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filecopy(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_listfiles(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_listdirs(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileexists(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_filechoose(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileinfo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fileaccess(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_direxists(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dircreate(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tempfile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tempdir(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_Rhome(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_date(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unsetenv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getwd(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setwd(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_basename(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_dirname(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_syschmod(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sysumask(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readlink(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sysinfo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_syssleep(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getlocale(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setlocale(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_localeconv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pathexpand(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sysgetpid(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_normalizepath(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_glob(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unlink(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_polyroot(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_inherits(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noreturn
declare %struct.SEXPREC* @do_usemethod(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #1

declare %struct.SEXPREC* @do_nextmethod(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_standardGeneric(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_systime(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asPOSIXct(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_asPOSIXlt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_formatPOSIXlt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_strptime(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_D2POSIXlt(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_POSIXlt2D(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mkcode(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bcclose(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_is_builtin_internal(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_disassemble(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bcversion(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_loadfile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_savefile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_growconst(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_putconst(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getconst(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_enablejit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_compilepkgs(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setnumthreads(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setmaxnumthreads(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_stdin(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_stdout(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_stderr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isatty(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readLines(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_writelines(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readbin(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_writebin(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readchar(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_writechar(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_open(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isopen(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isincomplete(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isseekable(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_close(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_flush(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_url(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pipe(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_fifo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gzfile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unz(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_seek(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_truncate(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pushback(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_clearpushback(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pushbacklength(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rawconnection(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rawconvalue(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_textconnection(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_textconvalue(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sockconn(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sockselect(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_serversocket(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_socktimeout(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getconnection(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getallconnections(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_sumconnection(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_gzcon(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_memCompress(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_memDecompress(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readDCF(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lockEnv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_envIsLocked(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lockBnd(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bndIsLocked(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mkActiveBnd(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bndIsActive(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_activeBndFun(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_mkUnbound(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_isNSEnv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_regNS(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_unregNS(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getRegNS(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getNSRegistry(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_importIntoEnv(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_envprofile(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_encoding(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setencoding(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setTimeLimit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setSessionTimeLimit(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_ICUset(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_ICUget(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_readEnviron(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_shortRowNames(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_copyDFattr(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getRegisteredRoutines(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getDllTable(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getSymbolInfo(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_S4on(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lazyLoadDBfetch(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lazyLoadDBflush(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_getVarsFromFrame(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lazyLoadDBinsertValue(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bincode(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_tabulate(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_findinterval(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_pretty(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_formatC(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_crc64(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bitwise(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_serialize(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_rowsum(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_setS4Object(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_traceOnOff(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_lapack(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bcprofcounts(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bcprofstart(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_bcprofstop(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_eSoftVersion(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_curlVersion(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_curlGetHeaders(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @do_curlDownload(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @R_Primitive(i8* %primname) #2 !dbg !281 {
entry:
  %retval = alloca %struct.SEXPREC*, align 8
  %primname.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %primname, i8** %primname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %primname.addr, metadata !286, metadata !DIExpression()), !dbg !287
  call void @llvm.dbg.declare(metadata i32* %i, metadata !288, metadata !DIExpression()), !dbg !290
  store i32 0, i32* %i, align 4, !dbg !290
  br label %for.cond, !dbg !291

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !292
  %idxprom = sext i32 %0 to i64, !dbg !294
  %arrayidx = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom, !dbg !294
  %name = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx, i32 0, i32 0, !dbg !295
  %1 = load i8*, i8** %name, align 8, !dbg !295
  %tobool = icmp ne i8* %1, null, !dbg !296
  br i1 %tobool, label %for.body, label %for.end, !dbg !296

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %primname.addr, align 8, !dbg !297
  %3 = load i32, i32* %i, align 4, !dbg !299
  %idxprom1 = sext i32 %3 to i64, !dbg !300
  %arrayidx2 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom1, !dbg !300
  %name3 = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx2, i32 0, i32 0, !dbg !301
  %4 = load i8*, i8** %name3, align 8, !dbg !301
  %call = call i32 @strcmp(i8* %2, i8* %4), !dbg !302
  %cmp = icmp eq i32 %call, 0, !dbg !303
  br i1 %cmp, label %if.then, label %if.end, !dbg !304

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !305
  %idxprom4 = sext i32 %5 to i64, !dbg !308
  %arrayidx5 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom4, !dbg !308
  %Rf_eval = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx5, i32 0, i32 3, !dbg !309
  %6 = load i32, i32* %Rf_eval, align 4, !dbg !309
  %rem = srem i32 %6, 100, !dbg !310
  %div = sdiv i32 %rem, 10, !dbg !311
  %tobool6 = icmp ne i32 %div, 0, !dbg !311
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !312

if.then7:                                         ; preds = %if.then
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !313
  store %struct.SEXPREC* %7, %struct.SEXPREC** %retval, align 8, !dbg !314
  br label %return, !dbg !314

if.else:                                          ; preds = %if.then
  %8 = load i32, i32* %i, align 4, !dbg !315
  %9 = load i32, i32* %i, align 4, !dbg !316
  %idxprom8 = sext i32 %9 to i64, !dbg !317
  %arrayidx9 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom8, !dbg !317
  %Rf_eval10 = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx9, i32 0, i32 3, !dbg !318
  %10 = load i32, i32* %Rf_eval10, align 4, !dbg !318
  %rem11 = srem i32 %10, 10, !dbg !319
  %call12 = call %struct.SEXPREC* @mkPRIMSXP(i32 %8, i32 %rem11), !dbg !320
  store %struct.SEXPREC* %call12, %struct.SEXPREC** %retval, align 8, !dbg !321
  br label %return, !dbg !321

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !322

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !323
  %inc = add nsw i32 %11, 1, !dbg !323
  store i32 %inc, i32* %i, align 4, !dbg !323
  br label %for.cond, !dbg !324, !llvm.loop !325

for.end:                                          ; preds = %for.cond
  %12 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !327
  store %struct.SEXPREC* %12, %struct.SEXPREC** %retval, align 8, !dbg !328
  br label %return, !dbg !328

return:                                           ; preds = %for.end, %if.else, %if.then7
  %13 = load %struct.SEXPREC*, %struct.SEXPREC** %retval, align 8, !dbg !329
  ret %struct.SEXPREC* %13, !dbg !329
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #3

declare i32 @strcmp(i8*, i8*) #0

declare %struct.SEXPREC* @mkPRIMSXP(i32, i32) #0

declare void @Rf_checkArityCall(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

declare %struct.SEXPREC* @CAR(%struct.SEXPREC*) #0

declare i32 @Rf_isString(%struct.SEXPREC*) #0

declare i32 @LENGTH(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @STRING_ELT(%struct.SEXPREC*, i64) #0

; Function Attrs: noreturn
declare void @Rf_errorcall(%struct.SEXPREC*, i8*, ...) #1

declare i8* @libintl_gettext(i8*) #0

declare i8* @R_CHAR(%struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @Rf_StrToInternal(i8* %s) #2 !dbg !330 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !333, metadata !DIExpression()), !dbg !334
  call void @llvm.dbg.declare(metadata i32* %i, metadata !335, metadata !DIExpression()), !dbg !336
  store i32 0, i32* %i, align 4, !dbg !337
  br label %for.cond, !dbg !339

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !340
  %idxprom = sext i32 %0 to i64, !dbg !342
  %arrayidx = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom, !dbg !342
  %name = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx, i32 0, i32 0, !dbg !343
  %1 = load i8*, i8** %name, align 8, !dbg !343
  %tobool = icmp ne i8* %1, null, !dbg !344
  br i1 %tobool, label %for.body, label %for.end, !dbg !344

for.body:                                         ; preds = %for.cond
  %2 = load i8*, i8** %s.addr, align 8, !dbg !345
  %3 = load i32, i32* %i, align 4, !dbg !347
  %idxprom1 = sext i32 %3 to i64, !dbg !348
  %arrayidx2 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom1, !dbg !348
  %name3 = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx2, i32 0, i32 0, !dbg !349
  %4 = load i8*, i8** %name3, align 8, !dbg !349
  %call = call i32 @strcmp(i8* %2, i8* %4), !dbg !350
  %cmp = icmp eq i32 %call, 0, !dbg !351
  br i1 %cmp, label %if.then, label %if.end, !dbg !352

if.then:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !353
  store i32 %5, i32* %retval, align 4, !dbg !354
  br label %return, !dbg !354

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !355

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !356
  %inc = add nsw i32 %6, 1, !dbg !356
  store i32 %inc, i32* %i, align 4, !dbg !356
  br label %for.cond, !dbg !357, !llvm.loop !358

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* @R_NaInt, align 4, !dbg !360
  store i32 %7, i32* %retval, align 4, !dbg !361
  br label %return, !dbg !361

return:                                           ; preds = %for.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !362
  ret i32 %8, !dbg !362
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @Rf_installDDVAL(i32 %n) #2 !dbg !363 {
entry:
  %retval = alloca %struct.SEXPREC*, align 8
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !366, metadata !DIExpression()), !dbg !367
  %0 = load i32, i32* %n.addr, align 4, !dbg !368
  %cmp = icmp slt i32 %0, 65, !dbg !370
  br i1 %cmp, label %if.then, label %if.end, !dbg !371

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !372
  %idxprom = sext i32 %1 to i64, !dbg !373
  %arrayidx = getelementptr inbounds [65 x %struct.SEXPREC*], [65 x %struct.SEXPREC*]* @DDVALSymbols, i64 0, i64 %idxprom, !dbg !373
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %arrayidx, align 8, !dbg !373
  store %struct.SEXPREC* %2, %struct.SEXPREC** %retval, align 8, !dbg !374
  br label %return, !dbg !374

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %n.addr, align 4, !dbg !375
  %call = call %struct.SEXPREC* @createDDVALSymbol(i32 %3), !dbg !376
  store %struct.SEXPREC* %call, %struct.SEXPREC** %retval, align 8, !dbg !377
  br label %return, !dbg !377

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** %retval, align 8, !dbg !378
  ret %struct.SEXPREC* %4, !dbg !378
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal %struct.SEXPREC* @createDDVALSymbol(i32 %n) #2 !dbg !379 {
entry:
  %n.addr = alloca i32, align 4
  %buf = alloca [15 x i8], align 1
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !380, metadata !DIExpression()), !dbg !381
  call void @llvm.dbg.declare(metadata [15 x i8]* %buf, metadata !382, metadata !DIExpression()), !dbg !386
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %buf, i32 0, i32 0, !dbg !387
  %0 = load i32, i32* %n.addr, align 4, !dbg !387
  %call = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* %arraydecay, i64 15, i32 0, i64 15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.751, i32 0, i32 0), i32 %0), !dbg !387
  %arraydecay1 = getelementptr inbounds [15 x i8], [15 x i8]* %buf, i32 0, i32 0, !dbg !388
  %call2 = call %struct.SEXPREC* @Rf_install(i8* %arraydecay1), !dbg !389
  ret %struct.SEXPREC* %call2, !dbg !390
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @Rf_InitNames() #2 !dbg !391 {
entry:
  %i = alloca i32, align 4
  %i16 = alloca i32, align 4
  %i25 = alloca i32, align 4
  %call = call i8* @calloc(i64 49157, i64 8) #7, !dbg !394
  %0 = bitcast i8* %call to %struct.SEXPREC**, !dbg !396
  store %struct.SEXPREC** %0, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !397
  %tobool = icmp ne %struct.SEXPREC** %0, null, !dbg !397
  br i1 %tobool, label %if.end, label %if.then, !dbg !398

if.then:                                          ; preds = %entry
  call void @R_Suicide(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.740, i32 0, i32 0)) #6, !dbg !399
  unreachable, !dbg !399

if.end:                                           ; preds = %entry
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !400
  %call1 = call %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %1), !dbg !401
  store %struct.SEXPREC* %call1, %struct.SEXPREC** @R_UnboundValue, align 8, !dbg !402
  %call2 = call %struct.SEXPREC* @Rf_mkChar(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.741, i32 0, i32 0)), !dbg !403
  %call3 = call %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %call2), !dbg !404
  store %struct.SEXPREC* %call3, %struct.SEXPREC** @R_MissingArg, align 8, !dbg !405
  %call4 = call %struct.SEXPREC* @Rf_mkChar(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.742, i32 0, i32 0)), !dbg !406
  %call5 = call %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %call4), !dbg !407
  store %struct.SEXPREC* %call5, %struct.SEXPREC** @R_InBCInterpreter, align 8, !dbg !408
  %call6 = call %struct.SEXPREC* @Rf_mkChar(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.741, i32 0, i32 0)), !dbg !409
  %call7 = call %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %call6), !dbg !410
  store %struct.SEXPREC* %call7, %struct.SEXPREC** @R_RestartToken, align 8, !dbg !411
  %call8 = call %struct.SEXPREC* @Rf_mkChar(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.743, i32 0, i32 0)), !dbg !412
  %call9 = call %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %call8), !dbg !413
  store %struct.SEXPREC* %call9, %struct.SEXPREC** @R_CurrentExpression, align 8, !dbg !414
  %call10 = call %struct.SEXPREC* @Rf_allocCharsxp(i32 2), !dbg !415
  store %struct.SEXPREC* %call10, %struct.SEXPREC** @R_NaString, align 8, !dbg !416
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NaString, align 8, !dbg !417
  %call11 = call i8* @R_CHAR(%struct.SEXPREC* %2), !dbg !417
  %call12 = call i8* @__strcpy_chk(i8* %call11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.744, i32 0, i32 0), i64 -1) #8, !dbg !417
  %3 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NaString, align 8, !dbg !418
  %call13 = call i32 @SET_CACHED(%struct.SEXPREC* %3), !dbg !419
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NaString, align 8, !dbg !420
  store %struct.SEXPREC* %4, %struct.SEXPREC** getelementptr inbounds (%struct.R_PrintData, %struct.R_PrintData* @R_print, i32 0, i32 9), align 8, !dbg !421
  %call14 = call %struct.SEXPREC* @Rf_mkChar(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.741, i32 0, i32 0)), !dbg !422
  store %struct.SEXPREC* %call14, %struct.SEXPREC** @R_BlankString, align 8, !dbg !423
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** @R_BlankString, align 8, !dbg !424
  %call15 = call %struct.SEXPREC* @Rf_ScalarString(%struct.SEXPREC* %5), !dbg !425
  store %struct.SEXPREC* %call15, %struct.SEXPREC** @R_BlankScalarString, align 8, !dbg !426
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** @R_BlankScalarString, align 8, !dbg !427
  call void @MARK_NOT_MUTABLE(%struct.SEXPREC* %6), !dbg !428
  call void @llvm.dbg.declare(metadata i32* %i, metadata !429, metadata !DIExpression()), !dbg !431
  store i32 0, i32* %i, align 4, !dbg !431
  br label %for.cond, !dbg !432

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !433
  %cmp = icmp slt i32 %7, 49157, !dbg !435
  br i1 %cmp, label %for.body, label %for.end, !dbg !436

for.body:                                         ; preds = %for.cond
  %8 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !437
  %9 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !438
  %10 = load i32, i32* %i, align 4, !dbg !439
  %idxprom = sext i32 %10 to i64, !dbg !438
  %arrayidx = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %9, i64 %idxprom, !dbg !438
  store %struct.SEXPREC* %8, %struct.SEXPREC** %arrayidx, align 8, !dbg !440
  br label %for.inc, !dbg !438

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !441
  %inc = add nsw i32 %11, 1, !dbg !441
  store i32 %inc, i32* %i, align 4, !dbg !441
  br label %for.cond, !dbg !442, !llvm.loop !443

for.end:                                          ; preds = %for.cond
  call void @SymbolShortcuts(), !dbg !445
  call void @llvm.dbg.declare(metadata i32* %i16, metadata !446, metadata !DIExpression()), !dbg !448
  store i32 0, i32* %i16, align 4, !dbg !448
  br label %for.cond17, !dbg !449

for.cond17:                                       ; preds = %for.inc22, %for.end
  %12 = load i32, i32* %i16, align 4, !dbg !450
  %idxprom18 = sext i32 %12 to i64, !dbg !452
  %arrayidx19 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom18, !dbg !452
  %name = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx19, i32 0, i32 0, !dbg !453
  %13 = load i8*, i8** %name, align 8, !dbg !453
  %tobool20 = icmp ne i8* %13, null, !dbg !454
  br i1 %tobool20, label %for.body21, label %for.end24, !dbg !454

for.body21:                                       ; preds = %for.cond17
  %14 = load i32, i32* %i16, align 4, !dbg !455
  call void @installFunTab(i32 %14), !dbg !456
  br label %for.inc22, !dbg !456

for.inc22:                                        ; preds = %for.body21
  %15 = load i32, i32* %i16, align 4, !dbg !457
  %inc23 = add nsw i32 %15, 1, !dbg !457
  store i32 %inc23, i32* %i16, align 4, !dbg !457
  br label %for.cond17, !dbg !458, !llvm.loop !459

for.end24:                                        ; preds = %for.cond17
  call void @llvm.dbg.declare(metadata i32* %i25, metadata !461, metadata !DIExpression()), !dbg !463
  store i32 0, i32* %i25, align 4, !dbg !463
  br label %for.cond26, !dbg !464

for.cond26:                                       ; preds = %for.inc34, %for.end24
  %16 = load i32, i32* %i25, align 4, !dbg !465
  %idxprom27 = sext i32 %16 to i64, !dbg !467
  %arrayidx28 = getelementptr inbounds [40 x i8*], [40 x i8*]* @Spec_name, i64 0, i64 %idxprom27, !dbg !467
  %17 = load i8*, i8** %arrayidx28, align 8, !dbg !467
  %tobool29 = icmp ne i8* %17, null, !dbg !468
  br i1 %tobool29, label %for.body30, label %for.end36, !dbg !468

for.body30:                                       ; preds = %for.cond26
  %18 = load i32, i32* %i25, align 4, !dbg !469
  %idxprom31 = sext i32 %18 to i64, !dbg !470
  %arrayidx32 = getelementptr inbounds [40 x i8*], [40 x i8*]* @Spec_name, i64 0, i64 %idxprom31, !dbg !470
  %19 = load i8*, i8** %arrayidx32, align 8, !dbg !470
  %call33 = call %struct.SEXPREC* @Rf_install(i8* %19), !dbg !471
  call void @SET_SPECIAL_SYMBOL(%struct.SEXPREC* %call33), !dbg !472
  br label %for.inc34, !dbg !472

for.inc34:                                        ; preds = %for.body30
  %20 = load i32, i32* %i25, align 4, !dbg !473
  %inc35 = add nsw i32 %20, 1, !dbg !473
  store i32 %inc35, i32* %i25, align 4, !dbg !473
  br label %for.cond26, !dbg !474, !llvm.loop !475

for.end36:                                        ; preds = %for.cond26
  call void @R_initAssignSymbols(), !dbg !477
  call void @initializeDDVALSymbols(), !dbg !478
  call void @R_initialize_bcode(), !dbg !479
  call void (...) @R_init_altrep(), !dbg !480
  ret void, !dbg !481
}

; Function Attrs: allocsize(0,1)
declare i8* @calloc(i64, i64) #4

; Function Attrs: noreturn
declare void @R_Suicide(i8*) #1

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal %struct.SEXPREC* @mkSymMarker(%struct.SEXPREC* %pname) #2 !dbg !482 {
entry:
  %pname.addr = alloca %struct.SEXPREC*, align 8
  %ans = alloca %struct.SEXPREC*, align 8
  store %struct.SEXPREC* %pname, %struct.SEXPREC** %pname.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %pname.addr, metadata !485, metadata !DIExpression()), !dbg !486
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** %pname.addr, align 8, !dbg !487
  %call = call %struct.SEXPREC* @Rf_protect(%struct.SEXPREC* %0), !dbg !487
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %ans, metadata !488, metadata !DIExpression()), !dbg !489
  %call1 = call %struct.SEXPREC* @Rf_allocSExp(i32 1), !dbg !490
  store %struct.SEXPREC* %call1, %struct.SEXPREC** %ans, align 8, !dbg !489
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !491
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !492
  call void @SET_SYMVALUE(%struct.SEXPREC* %1, %struct.SEXPREC* %2), !dbg !493
  %3 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !494
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !495
  call void @SET_ATTRIB(%struct.SEXPREC* %3, %struct.SEXPREC* %4), !dbg !496
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !497
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** %pname.addr, align 8, !dbg !498
  call void @SET_PRINTNAME(%struct.SEXPREC* %5, %struct.SEXPREC* %6), !dbg !499
  call void @Rf_unprotect(i32 1), !dbg !500
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** %ans, align 8, !dbg !501
  ret %struct.SEXPREC* %7, !dbg !502
}

declare %struct.SEXPREC* @Rf_mkChar(i8*) #0

declare %struct.SEXPREC* @Rf_allocCharsxp(i32) #0

; Function Attrs: nounwind
declare i8* @__strcpy_chk(i8*, i8*, i64) #5

declare i32 @SET_CACHED(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @Rf_ScalarString(%struct.SEXPREC*) #0

declare void @MARK_NOT_MUTABLE(%struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @SymbolShortcuts() #2 !dbg !503 {
entry:
  %call = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i32 0, i32 0)), !dbg !504
  store %struct.SEXPREC* %call, %struct.SEXPREC** @R_Bracket2Symbol, align 8, !dbg !505
  %call1 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i32 0, i32 0)), !dbg !506
  store %struct.SEXPREC* %call1, %struct.SEXPREC** @R_BracketSymbol, align 8, !dbg !507
  %call2 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0)), !dbg !508
  store %struct.SEXPREC* %call2, %struct.SEXPREC** @R_BraceSymbol, align 8, !dbg !509
  %call3 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.95, i32 0, i32 0)), !dbg !510
  store %struct.SEXPREC* %call3, %struct.SEXPREC** @R_ClassSymbol, align 8, !dbg !511
  %call4 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.752, i32 0, i32 0)), !dbg !512
  store %struct.SEXPREC* %call4, %struct.SEXPREC** @R_DeviceSymbol, align 8, !dbg !513
  %call5 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0)), !dbg !514
  store %struct.SEXPREC* %call5, %struct.SEXPREC** @R_DimNamesSymbol, align 8, !dbg !515
  %call6 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0)), !dbg !516
  store %struct.SEXPREC* %call6, %struct.SEXPREC** @R_DimSymbol, align 8, !dbg !517
  %call7 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i32 0, i32 0)), !dbg !518
  store %struct.SEXPREC* %call7, %struct.SEXPREC** @R_DollarSymbol, align 8, !dbg !519
  %call8 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.753, i32 0, i32 0)), !dbg !520
  store %struct.SEXPREC* %call8, %struct.SEXPREC** @R_DotsSymbol, align 8, !dbg !521
  %call9 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i32 0, i32 0)), !dbg !522
  store %struct.SEXPREC* %call9, %struct.SEXPREC** @R_DropSymbol, align 8, !dbg !523
  %call10 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.475, i32 0, i32 0)), !dbg !524
  store %struct.SEXPREC* %call10, %struct.SEXPREC** @R_EvalSymbol, align 8, !dbg !525
  %call11 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.754, i32 0, i32 0)), !dbg !526
  store %struct.SEXPREC* %call11, %struct.SEXPREC** @R_LastvalueSymbol, align 8, !dbg !527
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** @R_LastvalueSymbol, align 8, !dbg !528
  call void @DISABLE_REFCNT(%struct.SEXPREC* %0), !dbg !529
  %call12 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.755, i32 0, i32 0)), !dbg !530
  store %struct.SEXPREC* %call12, %struct.SEXPREC** @R_LevelsSymbol, align 8, !dbg !531
  %call13 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.756, i32 0, i32 0)), !dbg !532
  store %struct.SEXPREC* %call13, %struct.SEXPREC** @R_ModeSymbol, align 8, !dbg !533
  %call14 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.757, i32 0, i32 0)), !dbg !534
  store %struct.SEXPREC* %call14, %struct.SEXPREC** @R_NameSymbol, align 8, !dbg !535
  %call15 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i32 0, i32 0)), !dbg !536
  store %struct.SEXPREC* %call15, %struct.SEXPREC** @R_NamesSymbol, align 8, !dbg !537
  %call16 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.758, i32 0, i32 0)), !dbg !538
  store %struct.SEXPREC* %call16, %struct.SEXPREC** @R_NaRmSymbol, align 8, !dbg !539
  %call17 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.759, i32 0, i32 0)), !dbg !540
  store %struct.SEXPREC* %call17, %struct.SEXPREC** @R_PackageSymbol, align 8, !dbg !541
  %call18 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.760, i32 0, i32 0)), !dbg !542
  store %struct.SEXPREC* %call18, %struct.SEXPREC** @R_PreviousSymbol, align 8, !dbg !543
  %call19 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0)), !dbg !544
  store %struct.SEXPREC* %call19, %struct.SEXPREC** @R_QuoteSymbol, align 8, !dbg !545
  %call20 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.761, i32 0, i32 0)), !dbg !546
  store %struct.SEXPREC* %call20, %struct.SEXPREC** @R_RowNamesSymbol, align 8, !dbg !547
  %call21 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.762, i32 0, i32 0)), !dbg !548
  store %struct.SEXPREC* %call21, %struct.SEXPREC** @R_SeedsSymbol, align 8, !dbg !549
  %call22 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.763, i32 0, i32 0)), !dbg !550
  store %struct.SEXPREC* %call22, %struct.SEXPREC** @R_SortListSymbol, align 8, !dbg !551
  %call23 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.764, i32 0, i32 0)), !dbg !552
  store %struct.SEXPREC* %call23, %struct.SEXPREC** @R_SourceSymbol, align 8, !dbg !553
  %call24 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.765, i32 0, i32 0)), !dbg !554
  store %struct.SEXPREC* %call24, %struct.SEXPREC** @R_TspSymbol, align 8, !dbg !555
  %call25 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.126, i32 0, i32 0)), !dbg !556
  store %struct.SEXPREC* %call25, %struct.SEXPREC** @R_CommentSymbol, align 8, !dbg !557
  %call26 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.766, i32 0, i32 0)), !dbg !558
  store %struct.SEXPREC* %call26, %struct.SEXPREC** @R_DotEnvSymbol, align 8, !dbg !559
  %call27 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.767, i32 0, i32 0)), !dbg !560
  store %struct.SEXPREC* %call27, %struct.SEXPREC** @R_ExactSymbol, align 8, !dbg !561
  %call28 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.768, i32 0, i32 0)), !dbg !562
  store %struct.SEXPREC* %call28, %struct.SEXPREC** @R_RecursiveSymbol, align 8, !dbg !563
  %call29 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.769, i32 0, i32 0)), !dbg !564
  store %struct.SEXPREC* %call29, %struct.SEXPREC** @R_SrcfileSymbol, align 8, !dbg !565
  %call30 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.770, i32 0, i32 0)), !dbg !566
  store %struct.SEXPREC* %call30, %struct.SEXPREC** @R_SrcrefSymbol, align 8, !dbg !567
  %call31 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.771, i32 0, i32 0)), !dbg !568
  store %struct.SEXPREC* %call31, %struct.SEXPREC** @R_WholeSrcrefSymbol, align 8, !dbg !569
  %call32 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.772, i32 0, i32 0)), !dbg !570
  store %struct.SEXPREC* %call32, %struct.SEXPREC** @R_TmpvalSymbol, align 8, !dbg !571
  %call33 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.773, i32 0, i32 0)), !dbg !572
  store %struct.SEXPREC* %call33, %struct.SEXPREC** @R_UseNamesSymbol, align 8, !dbg !573
  %call34 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i32 0, i32 0)), !dbg !574
  store %struct.SEXPREC* %call34, %struct.SEXPREC** @R_ColonSymbol, align 8, !dbg !575
  %call35 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.774, i32 0, i32 0)), !dbg !576
  store %struct.SEXPREC* %call35, %struct.SEXPREC** @R_DoubleColonSymbol, align 8, !dbg !577
  %call36 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.775, i32 0, i32 0)), !dbg !578
  store %struct.SEXPREC* %call36, %struct.SEXPREC** @R_TripleColonSymbol, align 8, !dbg !579
  %call37 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.776, i32 0, i32 0)), !dbg !580
  store %struct.SEXPREC* %call37, %struct.SEXPREC** @R_ConnIdSymbol, align 8, !dbg !581
  %call38 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.777, i32 0, i32 0)), !dbg !582
  store %struct.SEXPREC* %call38, %struct.SEXPREC** @R_DevicesSymbol, align 8, !dbg !583
  %call39 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.778, i32 0, i32 0)), !dbg !584
  store %struct.SEXPREC* %call39, %struct.SEXPREC** @R_BaseSymbol, align 8, !dbg !585
  store %struct.SEXPREC* %call39, %struct.SEXPREC** @R_baseSymbol, align 8, !dbg !586
  %call40 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.779, i32 0, i32 0)), !dbg !587
  store %struct.SEXPREC* %call40, %struct.SEXPREC** @R_SpecSymbol, align 8, !dbg !588
  %call41 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.780, i32 0, i32 0)), !dbg !589
  store %struct.SEXPREC* %call41, %struct.SEXPREC** @R_NamespaceEnvSymbol, align 8, !dbg !590
  %call42 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.314, i32 0, i32 0)), !dbg !591
  store %struct.SEXPREC* %call42, %struct.SEXPREC** @R_AsCharacterSymbol, align 8, !dbg !592
  %call43 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.781, i32 0, i32 0)), !dbg !593
  store %struct.SEXPREC* %call43, %struct.SEXPREC** @R_dot_Generic, align 8, !dbg !594
  %call44 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.782, i32 0, i32 0)), !dbg !595
  store %struct.SEXPREC* %call44, %struct.SEXPREC** @R_dot_Method, align 8, !dbg !596
  %call45 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.783, i32 0, i32 0)), !dbg !597
  store %struct.SEXPREC* %call45, %struct.SEXPREC** @R_dot_Methods, align 8, !dbg !598
  %call46 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.784, i32 0, i32 0)), !dbg !599
  store %struct.SEXPREC* %call46, %struct.SEXPREC** @R_dot_defined, align 8, !dbg !600
  %call47 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.785, i32 0, i32 0)), !dbg !601
  store %struct.SEXPREC* %call47, %struct.SEXPREC** @R_dot_target, align 8, !dbg !602
  %call48 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.786, i32 0, i32 0)), !dbg !603
  store %struct.SEXPREC* %call48, %struct.SEXPREC** @R_dot_Group, align 8, !dbg !604
  %call49 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.787, i32 0, i32 0)), !dbg !605
  store %struct.SEXPREC* %call49, %struct.SEXPREC** @R_dot_Class, align 8, !dbg !606
  %call50 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.788, i32 0, i32 0)), !dbg !607
  store %struct.SEXPREC* %call50, %struct.SEXPREC** @R_dot_GenericCallEnv, align 8, !dbg !608
  %call51 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.789, i32 0, i32 0)), !dbg !609
  store %struct.SEXPREC* %call51, %struct.SEXPREC** @R_dot_GenericDefEnv, align 8, !dbg !610
  %call52 = call %struct.SEXPREC* @Rf_install(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.790, i32 0, i32 0)), !dbg !611
  store %struct.SEXPREC* %call52, %struct.SEXPREC** @R_dot_packageName, align 8, !dbg !612
  ret void, !dbg !613
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @installFunTab(i32 %i) #2 !dbg !614 {
entry:
  %i.addr = alloca i32, align 4
  %prim = alloca %struct.SEXPREC*, align 8
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !617, metadata !DIExpression()), !dbg !618
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %prim, metadata !619, metadata !DIExpression()), !dbg !620
  %0 = load i32, i32* %i.addr, align 4, !dbg !621
  %1 = load i32, i32* %i.addr, align 4, !dbg !622
  %idxprom = sext i32 %1 to i64, !dbg !623
  %arrayidx = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom, !dbg !623
  %Rf_eval = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx, i32 0, i32 3, !dbg !624
  %2 = load i32, i32* %Rf_eval, align 4, !dbg !624
  %rem = srem i32 %2, 10, !dbg !625
  %call = call %struct.SEXPREC* @mkPRIMSXP(i32 %0, i32 %rem), !dbg !626
  store %struct.SEXPREC* %call, %struct.SEXPREC** %prim, align 8, !dbg !627
  %3 = load i32, i32* %i.addr, align 4, !dbg !628
  %idxprom1 = sext i32 %3 to i64, !dbg !630
  %arrayidx2 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom1, !dbg !630
  %Rf_eval3 = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx2, i32 0, i32 3, !dbg !631
  %4 = load i32, i32* %Rf_eval3, align 4, !dbg !631
  %rem4 = srem i32 %4, 100, !dbg !632
  %div = sdiv i32 %rem4, 10, !dbg !633
  %tobool = icmp ne i32 %div, 0, !dbg !633
  br i1 %tobool, label %if.then, label %if.else, !dbg !634

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %i.addr, align 4, !dbg !635
  %idxprom5 = sext i32 %5 to i64, !dbg !636
  %arrayidx6 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom5, !dbg !636
  %name = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx6, i32 0, i32 0, !dbg !637
  %6 = load i8*, i8** %name, align 8, !dbg !637
  %call7 = call %struct.SEXPREC* @Rf_install(i8* %6), !dbg !638
  %7 = load %struct.SEXPREC*, %struct.SEXPREC** %prim, align 8, !dbg !639
  call void @SET_INTERNAL(%struct.SEXPREC* %call7, %struct.SEXPREC* %7), !dbg !640
  br label %if.end, !dbg !640

if.else:                                          ; preds = %entry
  %8 = load i32, i32* %i.addr, align 4, !dbg !641
  %idxprom8 = sext i32 %8 to i64, !dbg !642
  %arrayidx9 = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom8, !dbg !642
  %name10 = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx9, i32 0, i32 0, !dbg !643
  %9 = load i8*, i8** %name10, align 8, !dbg !643
  %call11 = call %struct.SEXPREC* @Rf_install(i8* %9), !dbg !644
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %prim, align 8, !dbg !645
  call void @SET_SYMVALUE(%struct.SEXPREC* %call11, %struct.SEXPREC* %10), !dbg !646
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !647
}

declare void @SET_SPECIAL_SYMBOL(%struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @Rf_install(i8* %name) #2 !dbg !648 {
entry:
  %retval = alloca %struct.SEXPREC*, align 8
  %name.addr = alloca i8*, align 8
  %sym = alloca %struct.SEXPREC*, align 8
  %i = alloca i32, align 4
  %hashcode = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !649, metadata !DIExpression()), !dbg !650
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %sym, metadata !651, metadata !DIExpression()), !dbg !652
  call void @llvm.dbg.declare(metadata i32* %i, metadata !653, metadata !DIExpression()), !dbg !654
  call void @llvm.dbg.declare(metadata i32* %hashcode, metadata !655, metadata !DIExpression()), !dbg !656
  %0 = load i8*, i8** %name.addr, align 8, !dbg !657
  %call = call i32 @R_Newhashpjw(i8* %0), !dbg !658
  store i32 %call, i32* %hashcode, align 4, !dbg !659
  %1 = load i32, i32* %hashcode, align 4, !dbg !660
  %rem = srem i32 %1, 49157, !dbg !661
  store i32 %rem, i32* %i, align 4, !dbg !662
  %2 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !663
  %3 = load i32, i32* %i, align 4, !dbg !665
  %idxprom = sext i32 %3 to i64, !dbg !663
  %arrayidx = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %2, i64 %idxprom, !dbg !663
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** %arrayidx, align 8, !dbg !663
  store %struct.SEXPREC* %4, %struct.SEXPREC** %sym, align 8, !dbg !666
  br label %for.cond, !dbg !667

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !668
  %6 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !670
  %cmp = icmp ne %struct.SEXPREC* %5, %6, !dbg !671
  br i1 %cmp, label %for.body, label %for.end, !dbg !672

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %name.addr, align 8, !dbg !673
  %8 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !675
  %call1 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %8), !dbg !675
  %call2 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %call1), !dbg !675
  %call3 = call i8* @R_CHAR(%struct.SEXPREC* %call2), !dbg !675
  %call4 = call i32 @strcmp(i8* %7, i8* %call3), !dbg !676
  %cmp5 = icmp eq i32 %call4, 0, !dbg !677
  br i1 %cmp5, label %if.then, label %if.end, !dbg !678

if.then:                                          ; preds = %for.body
  %9 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !679
  %call6 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %9), !dbg !680
  store %struct.SEXPREC* %call6, %struct.SEXPREC** %retval, align 8, !dbg !681
  br label %return, !dbg !681

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !682

for.inc:                                          ; preds = %if.end
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !683
  %call7 = call %struct.SEXPREC* @CDR(%struct.SEXPREC* %10), !dbg !684
  store %struct.SEXPREC* %call7, %struct.SEXPREC** %sym, align 8, !dbg !685
  br label %for.cond, !dbg !686, !llvm.loop !687

for.end:                                          ; preds = %for.cond
  %11 = load i8*, i8** %name.addr, align 8, !dbg !689
  %12 = load i8, i8* %11, align 1, !dbg !691
  %conv = sext i8 %12 to i32, !dbg !691
  %cmp8 = icmp eq i32 %conv, 0, !dbg !692
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !693

if.then10:                                        ; preds = %for.end
  %call11 = call i8* @libintl_gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.745, i32 0, i32 0)), !dbg !694
  call void (i8*, ...) @Rf_error(i8* %call11) #6, !dbg !695
  unreachable, !dbg !695

if.end12:                                         ; preds = %for.end
  %13 = load i8*, i8** %name.addr, align 8, !dbg !696
  %call13 = call i64 @strlen(i8* %13), !dbg !698
  %cmp14 = icmp ugt i64 %call13, 10000, !dbg !699
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !700

if.then16:                                        ; preds = %if.end12
  %call17 = call i8* @libintl_gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.746, i32 0, i32 0)), !dbg !701
  call void (i8*, ...) @Rf_error(i8* %call17, i32 10000) #6, !dbg !702
  unreachable, !dbg !702

if.end18:                                         ; preds = %if.end12
  %14 = load i8*, i8** %name.addr, align 8, !dbg !703
  %call19 = call %struct.SEXPREC* @Rf_mkChar(i8* %14), !dbg !704
  %15 = load %struct.SEXPREC*, %struct.SEXPREC** @R_UnboundValue, align 8, !dbg !705
  %call20 = call %struct.SEXPREC* @Rf_mkSYMSXP(%struct.SEXPREC* %call19, %struct.SEXPREC* %15), !dbg !706
  store %struct.SEXPREC* %call20, %struct.SEXPREC** %sym, align 8, !dbg !707
  %16 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !708
  %call21 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %16), !dbg !709
  %17 = load i32, i32* %hashcode, align 4, !dbg !710
  call void @SET_HASHVALUE(%struct.SEXPREC* %call21, i32 %17), !dbg !711
  %18 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !712
  %call22 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %18), !dbg !713
  call void @SET_HASHASH(%struct.SEXPREC* %call22, i32 1), !dbg !714
  %19 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !715
  %20 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !715
  %21 = load i32, i32* %i, align 4, !dbg !715
  %idxprom23 = sext i32 %21 to i64, !dbg !715
  %arrayidx24 = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %20, i64 %idxprom23, !dbg !715
  %22 = load %struct.SEXPREC*, %struct.SEXPREC** %arrayidx24, align 8, !dbg !715
  %call25 = call %struct.SEXPREC* @Rf_cons(%struct.SEXPREC* %19, %struct.SEXPREC* %22), !dbg !715
  %23 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !716
  %24 = load i32, i32* %i, align 4, !dbg !717
  %idxprom26 = sext i32 %24 to i64, !dbg !716
  %arrayidx27 = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %23, i64 %idxprom26, !dbg !716
  store %struct.SEXPREC* %call25, %struct.SEXPREC** %arrayidx27, align 8, !dbg !718
  %25 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !719
  store %struct.SEXPREC* %25, %struct.SEXPREC** %retval, align 8, !dbg !720
  br label %return, !dbg !720

return:                                           ; preds = %if.end18, %if.then
  %26 = load %struct.SEXPREC*, %struct.SEXPREC** %retval, align 8, !dbg !721
  ret %struct.SEXPREC* %26, !dbg !721
}

declare void @R_initAssignSymbols() #0

declare void @R_initialize_bcode() #0

declare void @R_init_altrep(...) #0

declare i32 @R_Newhashpjw(i8*) #0

declare %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @CDR(%struct.SEXPREC*) #0

; Function Attrs: noreturn
declare void @Rf_error(i8*, ...) #1

declare i64 @strlen(i8*) #0

declare %struct.SEXPREC* @Rf_mkSYMSXP(%struct.SEXPREC*, %struct.SEXPREC*) #0

declare void @SET_HASHVALUE(%struct.SEXPREC*, i32) #0

declare void @SET_HASHASH(%struct.SEXPREC*, i32) #0

declare %struct.SEXPREC* @Rf_cons(%struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @Rf_installNoTrChar(%struct.SEXPREC* %charSXP) #2 !dbg !722 {
entry:
  %retval = alloca %struct.SEXPREC*, align 8
  %charSXP.addr = alloca %struct.SEXPREC*, align 8
  %sym = alloca %struct.SEXPREC*, align 8
  %i = alloca i32, align 4
  %hashcode = alloca i32, align 4
  %len = alloca i32, align 4
  store %struct.SEXPREC* %charSXP, %struct.SEXPREC** %charSXP.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %charSXP.addr, metadata !723, metadata !DIExpression()), !dbg !724
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %sym, metadata !725, metadata !DIExpression()), !dbg !726
  call void @llvm.dbg.declare(metadata i32* %i, metadata !727, metadata !DIExpression()), !dbg !728
  call void @llvm.dbg.declare(metadata i32* %hashcode, metadata !729, metadata !DIExpression()), !dbg !730
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !731
  %call = call i32 @HASHASH(%struct.SEXPREC* %0), !dbg !733
  %tobool = icmp ne i32 %call, 0, !dbg !733
  br i1 %tobool, label %if.else, label %if.then, !dbg !734

if.then:                                          ; preds = %entry
  %1 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !735
  %call1 = call i8* @R_CHAR(%struct.SEXPREC* %1), !dbg !735
  %call2 = call i32 @R_Newhashpjw(i8* %call1), !dbg !737
  store i32 %call2, i32* %hashcode, align 4, !dbg !738
  %2 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !739
  %3 = load i32, i32* %hashcode, align 4, !dbg !740
  call void @SET_HASHVALUE(%struct.SEXPREC* %2, i32 %3), !dbg !741
  %4 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !742
  call void @SET_HASHASH(%struct.SEXPREC* %4, i32 1), !dbg !743
  br label %if.end, !dbg !744

if.else:                                          ; preds = %entry
  %5 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !745
  %call3 = call i32 @HASHVALUE(%struct.SEXPREC* %5), !dbg !747
  store i32 %call3, i32* %hashcode, align 4, !dbg !748
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %hashcode, align 4, !dbg !749
  %rem = srem i32 %6, 49157, !dbg !750
  store i32 %rem, i32* %i, align 4, !dbg !751
  %7 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !752
  %8 = load i32, i32* %i, align 4, !dbg !754
  %idxprom = sext i32 %8 to i64, !dbg !752
  %arrayidx = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %7, i64 %idxprom, !dbg !752
  %9 = load %struct.SEXPREC*, %struct.SEXPREC** %arrayidx, align 8, !dbg !752
  store %struct.SEXPREC* %9, %struct.SEXPREC** %sym, align 8, !dbg !755
  br label %for.cond, !dbg !756

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !757
  %11 = load %struct.SEXPREC*, %struct.SEXPREC** @R_NilValue, align 8, !dbg !759
  %cmp = icmp ne %struct.SEXPREC* %10, %11, !dbg !760
  br i1 %cmp, label %for.body, label %for.end, !dbg !761

for.body:                                         ; preds = %for.cond
  %12 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !762
  %call4 = call i8* @R_CHAR(%struct.SEXPREC* %12), !dbg !762
  %13 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !764
  %call5 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %13), !dbg !764
  %call6 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %call5), !dbg !764
  %call7 = call i8* @R_CHAR(%struct.SEXPREC* %call6), !dbg !764
  %call8 = call i32 @strcmp(i8* %call4, i8* %call7), !dbg !765
  %cmp9 = icmp eq i32 %call8, 0, !dbg !766
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !767

if.then10:                                        ; preds = %for.body
  %14 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !768
  %call11 = call %struct.SEXPREC* @CAR(%struct.SEXPREC* %14), !dbg !769
  store %struct.SEXPREC* %call11, %struct.SEXPREC** %retval, align 8, !dbg !770
  br label %return, !dbg !770

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !771

for.inc:                                          ; preds = %if.end12
  %15 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !772
  %call13 = call %struct.SEXPREC* @CDR(%struct.SEXPREC* %15), !dbg !773
  store %struct.SEXPREC* %call13, %struct.SEXPREC** %sym, align 8, !dbg !774
  br label %for.cond, !dbg !775, !llvm.loop !776

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %len, metadata !778, metadata !DIExpression()), !dbg !779
  %16 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !780
  %call14 = call i32 @LENGTH(%struct.SEXPREC* %16), !dbg !781
  store i32 %call14, i32* %len, align 4, !dbg !779
  %17 = load i32, i32* %len, align 4, !dbg !782
  %cmp15 = icmp eq i32 %17, 0, !dbg !784
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !785

if.then16:                                        ; preds = %for.end
  %call17 = call i8* @libintl_gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.745, i32 0, i32 0)), !dbg !786
  call void (i8*, ...) @Rf_error(i8* %call17) #6, !dbg !787
  unreachable, !dbg !787

if.end18:                                         ; preds = %for.end
  %18 = load i32, i32* %len, align 4, !dbg !788
  %cmp19 = icmp sgt i32 %18, 10000, !dbg !790
  br i1 %cmp19, label %if.then20, label %if.end22, !dbg !791

if.then20:                                        ; preds = %if.end18
  %call21 = call i8* @libintl_gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.746, i32 0, i32 0)), !dbg !792
  call void (i8*, ...) @Rf_error(i8* %call21, i32 10000) #6, !dbg !793
  unreachable, !dbg !793

if.end22:                                         ; preds = %if.end18
  %19 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !794
  %call23 = call i32 @IS_ASCII(%struct.SEXPREC* %19), !dbg !796
  %tobool24 = icmp ne i32 %call23, 0, !dbg !796
  br i1 %tobool24, label %if.then33, label %lor.lhs.false, !dbg !797

lor.lhs.false:                                    ; preds = %if.end22
  %20 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !798
  %call25 = call i32 @IS_UTF8(%struct.SEXPREC* %20), !dbg !799
  %tobool26 = icmp ne i32 %call25, 0, !dbg !799
  br i1 %tobool26, label %land.lhs.true, label %lor.lhs.false28, !dbg !800

land.lhs.true:                                    ; preds = %lor.lhs.false
  %21 = load i32, i32* @utf8locale, align 4, !dbg !801
  %tobool27 = icmp ne i32 %21, 0, !dbg !801
  br i1 %tobool27, label %if.then33, label %lor.lhs.false28, !dbg !802

lor.lhs.false28:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %22 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !803
  %call29 = call i32 @IS_LATIN1(%struct.SEXPREC* %22), !dbg !804
  %tobool30 = icmp ne i32 %call29, 0, !dbg !804
  br i1 %tobool30, label %land.lhs.true31, label %if.else35, !dbg !805

land.lhs.true31:                                  ; preds = %lor.lhs.false28
  %23 = load i32, i32* @latin1locale, align 4, !dbg !806
  %tobool32 = icmp ne i32 %23, 0, !dbg !806
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !807

if.then33:                                        ; preds = %land.lhs.true31, %land.lhs.true, %if.end22
  %24 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !808
  %25 = load %struct.SEXPREC*, %struct.SEXPREC** @R_UnboundValue, align 8, !dbg !809
  %call34 = call %struct.SEXPREC* @Rf_mkSYMSXP(%struct.SEXPREC* %24, %struct.SEXPREC* %25), !dbg !810
  store %struct.SEXPREC* %call34, %struct.SEXPREC** %sym, align 8, !dbg !811
  br label %if.end42, !dbg !812

if.else35:                                        ; preds = %land.lhs.true31, %lor.lhs.false28
  %26 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !813
  %call36 = call %struct.SEXPREC* @Rf_protect(%struct.SEXPREC* %26), !dbg !813
  %27 = load %struct.SEXPREC*, %struct.SEXPREC** %charSXP.addr, align 8, !dbg !815
  %call37 = call i8* @R_CHAR(%struct.SEXPREC* %27), !dbg !815
  %call38 = call %struct.SEXPREC* @Rf_mkChar(i8* %call37), !dbg !816
  %28 = load %struct.SEXPREC*, %struct.SEXPREC** @R_UnboundValue, align 8, !dbg !817
  %call39 = call %struct.SEXPREC* @Rf_mkSYMSXP(%struct.SEXPREC* %call38, %struct.SEXPREC* %28), !dbg !818
  store %struct.SEXPREC* %call39, %struct.SEXPREC** %sym, align 8, !dbg !819
  %29 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !820
  %call40 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %29), !dbg !821
  %30 = load i32, i32* %hashcode, align 4, !dbg !822
  call void @SET_HASHVALUE(%struct.SEXPREC* %call40, i32 %30), !dbg !823
  %31 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !824
  %call41 = call %struct.SEXPREC* @PRINTNAME(%struct.SEXPREC* %31), !dbg !825
  call void @SET_HASHASH(%struct.SEXPREC* %call41, i32 1), !dbg !826
  call void @Rf_unprotect(i32 1), !dbg !827
  br label %if.end42

if.end42:                                         ; preds = %if.else35, %if.then33
  %32 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !828
  %33 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !828
  %34 = load i32, i32* %i, align 4, !dbg !828
  %idxprom43 = sext i32 %34 to i64, !dbg !828
  %arrayidx44 = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %33, i64 %idxprom43, !dbg !828
  %35 = load %struct.SEXPREC*, %struct.SEXPREC** %arrayidx44, align 8, !dbg !828
  %call45 = call %struct.SEXPREC* @Rf_cons(%struct.SEXPREC* %32, %struct.SEXPREC* %35), !dbg !828
  %36 = load %struct.SEXPREC**, %struct.SEXPREC*** @R_SymbolTable, align 8, !dbg !829
  %37 = load i32, i32* %i, align 4, !dbg !830
  %idxprom46 = sext i32 %37 to i64, !dbg !829
  %arrayidx47 = getelementptr inbounds %struct.SEXPREC*, %struct.SEXPREC** %36, i64 %idxprom46, !dbg !829
  store %struct.SEXPREC* %call45, %struct.SEXPREC** %arrayidx47, align 8, !dbg !831
  %38 = load %struct.SEXPREC*, %struct.SEXPREC** %sym, align 8, !dbg !832
  store %struct.SEXPREC* %38, %struct.SEXPREC** %retval, align 8, !dbg !833
  br label %return, !dbg !833

return:                                           ; preds = %if.end42, %if.then10
  %39 = load %struct.SEXPREC*, %struct.SEXPREC** %retval, align 8, !dbg !834
  ret %struct.SEXPREC* %39, !dbg !834
}

declare i32 @HASHASH(%struct.SEXPREC*) #0

declare i32 @HASHVALUE(%struct.SEXPREC*) #0

declare i32 @IS_ASCII(%struct.SEXPREC*) #0

declare i32 @IS_UTF8(%struct.SEXPREC*) #0

declare i32 @IS_LATIN1(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @Rf_protect(%struct.SEXPREC*) #0

declare void @Rf_unprotect(i32) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define %struct.SEXPREC* @Rf_installS3Signature(i8* %className, i8* %methodName) #2 !dbg !835 {
entry:
  %className.addr = alloca i8*, align 8
  %methodName.addr = alloca i8*, align 8
  %src = alloca i8*, align 8
  %signature = alloca [512 x i8], align 16
  %i = alloca i32, align 4
  store i8* %className, i8** %className.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %className.addr, metadata !838, metadata !DIExpression()), !dbg !839
  store i8* %methodName, i8** %methodName.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %methodName.addr, metadata !840, metadata !DIExpression()), !dbg !841
  call void @llvm.dbg.declare(metadata i8** %src, metadata !842, metadata !DIExpression()), !dbg !843
  call void @llvm.dbg.declare(metadata [512 x i8]* %signature, metadata !844, metadata !DIExpression()), !dbg !848
  call void @llvm.dbg.declare(metadata i32* %i, metadata !849, metadata !DIExpression()), !dbg !850
  store i32 0, i32* %i, align 4, !dbg !850
  %0 = load i8*, i8** %className.addr, align 8, !dbg !851
  store i8* %0, i8** %src, align 8, !dbg !853
  br label %for.cond, !dbg !854

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %src, align 8, !dbg !855
  %2 = load i8, i8* %1, align 1, !dbg !857
  %tobool = icmp ne i8 %2, 0, !dbg !858
  br i1 %tobool, label %for.body, label %for.end, !dbg !858

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !859
  %cmp = icmp eq i32 %3, 512, !dbg !862
  br i1 %cmp, label %if.then, label %if.end, !dbg !863

if.then:                                          ; preds = %for.body
  %call = call i8* @libintl_gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.747, i32 0, i32 0)), !dbg !864
  %4 = load i8*, i8** %className.addr, align 8, !dbg !865
  call void (i8*, ...) @Rf_error(i8* %call, i8* %4) #6, !dbg !866
  unreachable, !dbg !866

if.end:                                           ; preds = %for.body
  %5 = load i8*, i8** %src, align 8, !dbg !867
  %6 = load i8, i8* %5, align 1, !dbg !868
  %7 = load i32, i32* %i, align 4, !dbg !869
  %inc = add nsw i32 %7, 1, !dbg !869
  store i32 %inc, i32* %i, align 4, !dbg !869
  %idxprom = sext i32 %7 to i64, !dbg !870
  %arrayidx = getelementptr inbounds [512 x i8], [512 x i8]* %signature, i64 0, i64 %idxprom, !dbg !870
  store i8 %6, i8* %arrayidx, align 1, !dbg !871
  br label %for.inc, !dbg !872

for.inc:                                          ; preds = %if.end
  %8 = load i8*, i8** %src, align 8, !dbg !873
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !873
  store i8* %incdec.ptr, i8** %src, align 8, !dbg !873
  br label %for.cond, !dbg !874, !llvm.loop !875

for.end:                                          ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !877
  %cmp1 = icmp eq i32 %9, 512, !dbg !879
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !880

if.then2:                                         ; preds = %for.end
  %call3 = call i8* @libintl_gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.747, i32 0, i32 0)), !dbg !881
  %10 = load i8*, i8** %className.addr, align 8, !dbg !882
  call void (i8*, ...) @Rf_error(i8* %call3, i8* %10) #6, !dbg !883
  unreachable, !dbg !883

if.end4:                                          ; preds = %for.end
  %11 = load i32, i32* %i, align 4, !dbg !884
  %inc5 = add nsw i32 %11, 1, !dbg !884
  store i32 %inc5, i32* %i, align 4, !dbg !884
  %idxprom6 = sext i32 %11 to i64, !dbg !885
  %arrayidx7 = getelementptr inbounds [512 x i8], [512 x i8]* %signature, i64 0, i64 %idxprom6, !dbg !885
  store i8 46, i8* %arrayidx7, align 1, !dbg !886
  %12 = load i8*, i8** %methodName.addr, align 8, !dbg !887
  store i8* %12, i8** %src, align 8, !dbg !889
  br label %for.cond8, !dbg !890

for.cond8:                                        ; preds = %for.inc18, %if.end4
  %13 = load i8*, i8** %src, align 8, !dbg !891
  %14 = load i8, i8* %13, align 1, !dbg !893
  %tobool9 = icmp ne i8 %14, 0, !dbg !894
  br i1 %tobool9, label %for.body10, label %for.end20, !dbg !894

for.body10:                                       ; preds = %for.cond8
  %15 = load i32, i32* %i, align 4, !dbg !895
  %cmp11 = icmp eq i32 %15, 512, !dbg !898
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !899

if.then12:                                        ; preds = %for.body10
  %call13 = call i8* @libintl_gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.747, i32 0, i32 0)), !dbg !900
  %16 = load i8*, i8** %className.addr, align 8, !dbg !901
  call void (i8*, ...) @Rf_error(i8* %call13, i8* %16) #6, !dbg !902
  unreachable, !dbg !902

if.end14:                                         ; preds = %for.body10
  %17 = load i8*, i8** %src, align 8, !dbg !903
  %18 = load i8, i8* %17, align 1, !dbg !904
  %19 = load i32, i32* %i, align 4, !dbg !905
  %inc15 = add nsw i32 %19, 1, !dbg !905
  store i32 %inc15, i32* %i, align 4, !dbg !905
  %idxprom16 = sext i32 %19 to i64, !dbg !906
  %arrayidx17 = getelementptr inbounds [512 x i8], [512 x i8]* %signature, i64 0, i64 %idxprom16, !dbg !906
  store i8 %18, i8* %arrayidx17, align 1, !dbg !907
  br label %for.inc18, !dbg !908

for.inc18:                                        ; preds = %if.end14
  %20 = load i8*, i8** %src, align 8, !dbg !909
  %incdec.ptr19 = getelementptr inbounds i8, i8* %20, i32 1, !dbg !909
  store i8* %incdec.ptr19, i8** %src, align 8, !dbg !909
  br label %for.cond8, !dbg !910, !llvm.loop !911

for.end20:                                        ; preds = %for.cond8
  %21 = load i32, i32* %i, align 4, !dbg !913
  %cmp21 = icmp eq i32 %21, 512, !dbg !915
  br i1 %cmp21, label %if.then22, label %if.end24, !dbg !916

if.then22:                                        ; preds = %for.end20
  %call23 = call i8* @libintl_gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.747, i32 0, i32 0)), !dbg !917
  %22 = load i8*, i8** %className.addr, align 8, !dbg !918
  call void (i8*, ...) @Rf_error(i8* %call23, i8* %22) #6, !dbg !919
  unreachable, !dbg !919

if.end24:                                         ; preds = %for.end20
  %23 = load i32, i32* %i, align 4, !dbg !920
  %idxprom25 = sext i32 %23 to i64, !dbg !921
  %arrayidx26 = getelementptr inbounds [512 x i8], [512 x i8]* %signature, i64 0, i64 %idxprom25, !dbg !921
  store i8 0, i8* %arrayidx26, align 1, !dbg !922
  %arraydecay = getelementptr inbounds [512 x i8], [512 x i8]* %signature, i32 0, i32 0, !dbg !923
  %call27 = call %struct.SEXPREC* @Rf_install(i8* %arraydecay), !dbg !924
  ret %struct.SEXPREC* %call27, !dbg !925
}

declare i8* @vmaxget() #0

declare i32 @Rf_isPairList(%struct.SEXPREC*) #0

declare i32 @Rf_isSymbol(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @INTERNAL(%struct.SEXPREC*) #0

declare i32 @TYPEOF(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @Rf_evalList(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*, i32) #0

declare i32 @PRIMOFFSET(%struct.SEXPREC*) #0

declare void @Rf_check_stack_balance(%struct.SEXPREC*, i32) #0

declare void @vmaxset(i8*) #0

declare i32 @Rf_isObject(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @Rf_duplicate(%struct.SEXPREC*) #0

declare %struct.SEXPREC* @Rf_mkString(i8*) #0

declare %struct.SEXPREC* @Rf_setAttrib(%struct.SEXPREC*, %struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @getPRIMNAME(%struct.SEXPREC* %object) #2 !dbg !926 {
entry:
  %object.addr = alloca %struct.SEXPREC*, align 8
  store %struct.SEXPREC* %object, %struct.SEXPREC** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SEXPREC** %object.addr, metadata !929, metadata !DIExpression()), !dbg !930
  %0 = load %struct.SEXPREC*, %struct.SEXPREC** %object.addr, align 8, !dbg !931
  %call = call i32 @PRIMOFFSET(%struct.SEXPREC* %0), !dbg !931
  %idxprom = sext i32 %call to i64, !dbg !931
  %arrayidx = getelementptr inbounds [741 x %struct.FUNTAB], [741 x %struct.FUNTAB]* @R_FunTab, i64 0, i64 %idxprom, !dbg !931
  %name = getelementptr inbounds %struct.FUNTAB, %struct.FUNTAB* %arrayidx, i32 0, i32 0, !dbg !931
  %1 = load i8*, i8** %name, align 8, !dbg !931
  ret i8* %1, !dbg !932
}

declare i32 @__snprintf_chk(i8*, i64, i32, i64, i8*, ...) #0

declare %struct.SEXPREC* @Rf_allocSExp(i32) #0

declare void @SET_SYMVALUE(%struct.SEXPREC*, %struct.SEXPREC*) #0

declare void @SET_ATTRIB(%struct.SEXPREC*, %struct.SEXPREC*) #0

declare void @SET_PRINTNAME(%struct.SEXPREC*, %struct.SEXPREC*) #0

declare void @DISABLE_REFCNT(%struct.SEXPREC*) #0

declare void @SET_INTERNAL(%struct.SEXPREC*, %struct.SEXPREC*) #0

; Function Attrs: noinline nounwind optnone ssp uwtable
define internal void @initializeDDVALSymbols() #2 !dbg !933 {
entry:
  %i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !934, metadata !DIExpression()), !dbg !936
  store i32 0, i32* %i, align 4, !dbg !936
  br label %for.cond, !dbg !937

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !938
  %cmp = icmp slt i32 %0, 65, !dbg !940
  br i1 %cmp, label %for.body, label %for.end, !dbg !941

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !942
  %call = call %struct.SEXPREC* @createDDVALSymbol(i32 %1), !dbg !944
  %2 = load i32, i32* %i, align 4, !dbg !945
  %idxprom = sext i32 %2 to i64, !dbg !946
  %arrayidx = getelementptr inbounds [65 x %struct.SEXPREC*], [65 x %struct.SEXPREC*]* @DDVALSymbols, i64 0, i64 %idxprom, !dbg !946
  store %struct.SEXPREC* %call, %struct.SEXPREC** %arrayidx, align 8, !dbg !947
  br label %for.inc, !dbg !948

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !949
  %inc = add nsw i32 %3, 1, !dbg !949
  store i32 %inc, i32* %i, align 4, !dbg !949
  br label %for.cond, !dbg !950, !llvm.loop !951

for.end:                                          ; preds = %for.cond
  ret void, !dbg !953
}

attributes #0 = { "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noinline nounwind optnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "darwin-stkchk-strong-link" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "probe-stack"="___chkstk_darwin" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn }
attributes #7 = { allocsize(0,1) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!94, !95, !96, !97, !98}
!llvm.dbg.cu = !{!2}
!llvm.ident = !{!99}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "R_FunTab", scope: !2, file: !3, line: 83, type: !69, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Apple clang version 11.0.0 (clang-1100.0.33.17)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !50, globals: !58, nameTableKind: GNU)
!3 = !DIFile(filename: "../../../src/main/names.c", directory: "/Users/duncan/R-4.1/build3/src/main")
!4 = !{!5, !30}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 326, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../src/include/Defn.h", directory: "/Users/duncan/R-4.1/build3/src/main")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29}
!9 = !DIEnumerator(name: "PP_INVALID", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "PP_ASSIGN", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "PP_ASSIGN2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PP_BINARY", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "PP_BINARY2", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "PP_BREAK", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "PP_CURLY", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "PP_FOR", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "PP_FUNCALL", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "PP_FUNCTION", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "PP_IF", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "PP_NEXT", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "PP_PAREN", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "PP_RETURN", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "PP_SUBASS", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "PP_SUBSET", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "PP_WHILE", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "PP_UNARY", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "PP_DOLLAR", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "PP_FOREIGN", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "PP_REPEAT", value: 20, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 350, baseType: !7, size: 32, elements: !31)
!31 = !{!32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49}
!32 = !DIEnumerator(name: "PREC_FN", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "PREC_EQ", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "PREC_LEFT", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "PREC_RIGHT", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "PREC_TILDE", value: 4, isUnsigned: true)
!37 = !DIEnumerator(name: "PREC_OR", value: 5, isUnsigned: true)
!38 = !DIEnumerator(name: "PREC_AND", value: 6, isUnsigned: true)
!39 = !DIEnumerator(name: "PREC_NOT", value: 7, isUnsigned: true)
!40 = !DIEnumerator(name: "PREC_COMPARE", value: 8, isUnsigned: true)
!41 = !DIEnumerator(name: "PREC_SUM", value: 9, isUnsigned: true)
!42 = !DIEnumerator(name: "PREC_PROD", value: 10, isUnsigned: true)
!43 = !DIEnumerator(name: "PREC_PERCENT", value: 11, isUnsigned: true)
!44 = !DIEnumerator(name: "PREC_COLON", value: 12, isUnsigned: true)
!45 = !DIEnumerator(name: "PREC_SIGN", value: 13, isUnsigned: true)
!46 = !DIEnumerator(name: "PREC_POWER", value: 14, isUnsigned: true)
!47 = !DIEnumerator(name: "PREC_SUBSET", value: 15, isUnsigned: true)
!48 = !DIEnumerator(name: "PREC_DOLLAR", value: 16, isUnsigned: true)
!49 = !DIEnumerator(name: "PREC_NS", value: 17, isUnsigned: true)
!50 = !{!51, !56}
!51 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "SEXP", file: !53, line: 184, baseType: !54)
!53 = !DIFile(filename: "../../../src/include/Rinternals.h", directory: "/Users/duncan/R-4.1/build3/src/main")
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!55 = !DICompositeType(tag: DW_TAG_structure_type, name: "SEXPREC", file: !53, line: 184, flags: DIFlagFwdDecl)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!57 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!58 = !{!0, !59, !64}
!59 = !DIGlobalVariableExpression(var: !60, expr: !DIExpression())
!60 = distinct !DIGlobalVariable(name: "DDVALSymbols", scope: !2, file: !3, line: 1148, type: !61, isLocal: true, isDefinition: true)
!61 = !DICompositeType(tag: DW_TAG_array_type, baseType: !52, size: 4160, elements: !62)
!62 = !{!63}
!63 = !DISubrange(count: 65)
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "Spec_name", scope: !2, file: !3, line: 1015, type: !66, isLocal: true, isDefinition: true)
!66 = !DICompositeType(tag: DW_TAG_array_type, baseType: !56, size: 2560, elements: !67)
!67 = !{!68}
!68 = !DISubrange(count: 40)
!69 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 237120, elements: !92)
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "FUNTAB", file: !6, line: 386, baseType: !71)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 379, size: 320, elements: !72)
!72 = !{!73, !74, !79, !81, !82, !83}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !71, file: !6, line: 380, baseType: !56, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "cfun", scope: !71, file: !6, line: 381, baseType: !75, size: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCODE", file: !6, line: 323, baseType: !76)
!76 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !77, size: 64)
!77 = !DISubroutineType(types: !78)
!78 = !{!52, !52, !52, !52, !52}
!79 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !71, file: !6, line: 382, baseType: !80, size: 32, offset: 128)
!80 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "Rf_eval", scope: !71, file: !6, line: 383, baseType: !80, size: 32, offset: 160)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "arity", scope: !71, file: !6, line: 384, baseType: !80, size: 32, offset: 192)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "gram", scope: !71, file: !6, line: 385, baseType: !84, size: 96, offset: 224)
!84 = !DIDerivedType(tag: DW_TAG_typedef, name: "PPinfo", file: !6, line: 375, baseType: !85)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 371, size: 96, elements: !86)
!86 = !{!87, !89, !91}
!87 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !85, file: !6, line: 372, baseType: !88, size: 32)
!88 = !DIDerivedType(tag: DW_TAG_typedef, name: "PPkind", file: !6, line: 348, baseType: !5)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "precedence", scope: !85, file: !6, line: 373, baseType: !90, size: 32, offset: 32)
!90 = !DIDerivedType(tag: DW_TAG_typedef, name: "PPprec", file: !6, line: 369, baseType: !30)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "rightassoc", scope: !85, file: !6, line: 374, baseType: !7, size: 32, offset: 64)
!92 = !{!93}
!93 = !DISubrange(count: 741)
!94 = !{i32 2, !"SDK Version", [2 x i32] [i32 10, i32 15]}
!95 = !{i32 2, !"Dwarf Version", i32 4}
!96 = !{i32 2, !"Debug Info Version", i32 3}
!97 = !{i32 1, !"wchar_size", i32 4}
!98 = !{i32 7, !"PIC Level", i32 2}
!99 = !{!"Apple clang version 11.0.0 (clang-1100.0.33.17)"}
!100 = distinct !DISubprogram(name: "do_internal", scope: !3, file: !3, line: 1334, type: !77, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!101 = !{}
!102 = !DILocalVariable(name: "call", arg: 1, scope: !100, file: !3, line: 1334, type: !52)
!103 = !DILocation(line: 1334, column: 40, scope: !100)
!104 = !DILocalVariable(name: "op", arg: 2, scope: !100, file: !3, line: 1334, type: !52)
!105 = !DILocation(line: 1334, column: 51, scope: !100)
!106 = !DILocalVariable(name: "args", arg: 3, scope: !100, file: !3, line: 1334, type: !52)
!107 = !DILocation(line: 1334, column: 60, scope: !100)
!108 = !DILocalVariable(name: "env", arg: 4, scope: !100, file: !3, line: 1334, type: !52)
!109 = !DILocation(line: 1334, column: 71, scope: !100)
!110 = !DILocalVariable(name: "s", scope: !100, file: !3, line: 1336, type: !52)
!111 = !DILocation(line: 1336, column: 10, scope: !100)
!112 = !DILocalVariable(name: "fun", scope: !100, file: !3, line: 1336, type: !52)
!113 = !DILocation(line: 1336, column: 13, scope: !100)
!114 = !DILocalVariable(name: "ans", scope: !100, file: !3, line: 1336, type: !52)
!115 = !DILocation(line: 1336, column: 18, scope: !100)
!116 = !DILocalVariable(name: "save", scope: !100, file: !3, line: 1337, type: !80)
!117 = !DILocation(line: 1337, column: 9, scope: !100)
!118 = !DILocation(line: 1337, column: 16, scope: !100)
!119 = !DILocalVariable(name: "flag", scope: !100, file: !3, line: 1338, type: !80)
!120 = !DILocation(line: 1338, column: 9, scope: !100)
!121 = !DILocalVariable(name: "vmax", scope: !100, file: !3, line: 1339, type: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!124 = !DILocation(line: 1339, column: 17, scope: !100)
!125 = !DILocation(line: 1339, column: 24, scope: !100)
!126 = !DILocation(line: 1341, column: 5, scope: !100)
!127 = !DILocation(line: 1342, column: 13, scope: !100)
!128 = !DILocation(line: 1342, column: 9, scope: !100)
!129 = !DILocation(line: 1342, column: 7, scope: !100)
!130 = !DILocation(line: 1343, column: 21, scope: !131)
!131 = distinct !DILexicalBlock(scope: !100, file: !3, line: 1343, column: 9)
!132 = !DILocation(line: 1343, column: 10, scope: !131)
!133 = !DILocation(line: 1343, column: 9, scope: !100)
!134 = !DILocation(line: 1344, column: 12, scope: !131)
!135 = !DILocation(line: 1344, column: 18, scope: !131)
!136 = !DILocation(line: 1344, column: 2, scope: !131)
!137 = !DILocation(line: 1345, column: 15, scope: !100)
!138 = !DILocation(line: 1345, column: 11, scope: !100)
!139 = !DILocation(line: 1345, column: 9, scope: !100)
!140 = !DILocation(line: 1346, column: 19, scope: !141)
!141 = distinct !DILexicalBlock(scope: !100, file: !3, line: 1346, column: 9)
!142 = !DILocation(line: 1346, column: 10, scope: !141)
!143 = !DILocation(line: 1346, column: 9, scope: !100)
!144 = !DILocation(line: 1347, column: 12, scope: !141)
!145 = !DILocation(line: 1347, column: 18, scope: !141)
!146 = !DILocation(line: 1347, column: 2, scope: !141)
!147 = !DILocation(line: 1348, column: 18, scope: !148)
!148 = distinct !DILexicalBlock(scope: !100, file: !3, line: 1348, column: 9)
!149 = !DILocation(line: 1348, column: 9, scope: !148)
!150 = !DILocation(line: 1348, column: 26, scope: !148)
!151 = !DILocation(line: 1348, column: 23, scope: !148)
!152 = !DILocation(line: 1348, column: 9, scope: !100)
!153 = !DILocation(line: 1349, column: 12, scope: !148)
!154 = !DILocation(line: 1349, column: 18, scope: !148)
!155 = !DILocation(line: 1350, column: 5, scope: !148)
!156 = !DILocation(line: 1349, column: 2, scope: !148)
!157 = !DILocation(line: 1381, column: 16, scope: !100)
!158 = !DILocation(line: 1381, column: 12, scope: !100)
!159 = !DILocation(line: 1381, column: 10, scope: !100)
!160 = !DILocation(line: 1382, column: 25, scope: !161)
!161 = distinct !DILexicalBlock(scope: !100, file: !3, line: 1382, column: 9)
!162 = !DILocation(line: 1382, column: 16, scope: !161)
!163 = !DILocation(line: 1382, column: 9, scope: !161)
!164 = !DILocation(line: 1382, column: 31, scope: !161)
!165 = !DILocation(line: 1382, column: 9, scope: !100)
!166 = !DILocation(line: 1383, column: 18, scope: !161)
!167 = !DILocation(line: 1383, column: 24, scope: !161)
!168 = !DILocation(line: 1383, column: 29, scope: !161)
!169 = !DILocation(line: 1383, column: 9, scope: !161)
!170 = !DILocation(line: 1383, column: 7, scope: !161)
!171 = !DILocation(line: 1383, column: 2, scope: !161)
!172 = !DILocation(line: 1384, column: 5, scope: !100)
!173 = !DILocation(line: 1385, column: 12, scope: !100)
!174 = !DILocation(line: 1385, column: 10, scope: !100)
!175 = !DILocation(line: 1386, column: 17, scope: !100)
!176 = !DILocation(line: 1386, column: 22, scope: !100)
!177 = !DILocation(line: 1386, column: 15, scope: !100)
!178 = !DILocation(line: 1387, column: 11, scope: !100)
!179 = !DILocation(line: 1387, column: 35, scope: !100)
!180 = !DILocation(line: 1387, column: 47, scope: !100)
!181 = !DILocation(line: 1387, column: 38, scope: !100)
!182 = !DILocation(line: 1387, column: 53, scope: !100)
!183 = !DILocation(line: 1387, column: 59, scope: !100)
!184 = !DILocation(line: 1387, column: 9, scope: !100)
!185 = !DILocation(line: 1390, column: 9, scope: !186)
!186 = distinct !DILexicalBlock(scope: !100, file: !3, line: 1390, column: 9)
!187 = !DILocation(line: 1390, column: 14, scope: !186)
!188 = !DILocation(line: 1390, column: 9, scope: !100)
!189 = !DILocation(line: 1390, column: 31, scope: !186)
!190 = !DILocation(line: 1390, column: 36, scope: !186)
!191 = !DILocation(line: 1390, column: 29, scope: !186)
!192 = !DILocation(line: 1390, column: 19, scope: !186)
!193 = !DILocation(line: 1401, column: 5, scope: !100)
!194 = !DILocation(line: 1402, column: 34, scope: !100)
!195 = !DILocation(line: 1402, column: 25, scope: !100)
!196 = !DILocation(line: 1402, column: 40, scope: !100)
!197 = !DILocation(line: 1402, column: 5, scope: !100)
!198 = !DILocation(line: 1403, column: 13, scope: !100)
!199 = !DILocation(line: 1403, column: 5, scope: !100)
!200 = !DILocation(line: 1404, column: 13, scope: !100)
!201 = !DILocation(line: 1404, column: 5, scope: !100)
!202 = distinct !DISubprogram(name: "do_primitive", scope: !3, file: !3, line: 1041, type: !77, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!203 = !DILocalVariable(name: "call", arg: 1, scope: !202, file: !3, line: 1041, type: !52)
!204 = !DILocation(line: 1041, column: 41, scope: !202)
!205 = !DILocalVariable(name: "op", arg: 2, scope: !202, file: !3, line: 1041, type: !52)
!206 = !DILocation(line: 1041, column: 52, scope: !202)
!207 = !DILocalVariable(name: "args", arg: 3, scope: !202, file: !3, line: 1041, type: !52)
!208 = !DILocation(line: 1041, column: 61, scope: !202)
!209 = !DILocalVariable(name: "env", arg: 4, scope: !202, file: !3, line: 1041, type: !52)
!210 = !DILocation(line: 1041, column: 72, scope: !202)
!211 = !DILocalVariable(name: "name", scope: !202, file: !3, line: 1043, type: !52)
!212 = !DILocation(line: 1043, column: 10, scope: !202)
!213 = !DILocalVariable(name: "prim", scope: !202, file: !3, line: 1043, type: !52)
!214 = !DILocation(line: 1043, column: 16, scope: !202)
!215 = !DILocation(line: 1044, column: 5, scope: !202)
!216 = !DILocation(line: 1045, column: 16, scope: !202)
!217 = !DILocation(line: 1045, column: 12, scope: !202)
!218 = !DILocation(line: 1045, column: 10, scope: !202)
!219 = !DILocation(line: 1046, column: 19, scope: !220)
!220 = distinct !DILexicalBlock(scope: !202, file: !3, line: 1046, column: 9)
!221 = !DILocation(line: 1046, column: 10, scope: !220)
!222 = !DILocation(line: 1046, column: 25, scope: !220)
!223 = !DILocation(line: 1046, column: 35, scope: !220)
!224 = !DILocation(line: 1046, column: 28, scope: !220)
!225 = !DILocation(line: 1046, column: 41, scope: !220)
!226 = !DILocation(line: 1046, column: 46, scope: !220)
!227 = !DILocation(line: 1047, column: 13, scope: !220)
!228 = !DILocation(line: 1047, column: 2, scope: !220)
!229 = !DILocation(line: 1047, column: 25, scope: !220)
!230 = !DILocation(line: 1047, column: 22, scope: !220)
!231 = !DILocation(line: 1046, column: 9, scope: !202)
!232 = !DILocation(line: 1048, column: 12, scope: !220)
!233 = !DILocation(line: 1048, column: 18, scope: !220)
!234 = !DILocation(line: 1048, column: 2, scope: !220)
!235 = !DILocation(line: 1049, column: 24, scope: !202)
!236 = !DILocation(line: 1049, column: 12, scope: !202)
!237 = !DILocation(line: 1049, column: 10, scope: !202)
!238 = !DILocation(line: 1050, column: 9, scope: !239)
!239 = distinct !DILexicalBlock(scope: !202, file: !3, line: 1050, column: 9)
!240 = !DILocation(line: 1050, column: 17, scope: !239)
!241 = !DILocation(line: 1050, column: 14, scope: !239)
!242 = !DILocation(line: 1050, column: 9, scope: !202)
!243 = !DILocation(line: 1051, column: 12, scope: !239)
!244 = !DILocation(line: 1051, column: 18, scope: !239)
!245 = !DILocation(line: 1051, column: 2, scope: !239)
!246 = !DILocation(line: 1052, column: 12, scope: !202)
!247 = !DILocation(line: 1052, column: 5, scope: !202)
!248 = distinct !DISubprogram(name: "do_tilde", scope: !3, file: !3, line: 1410, type: !77, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!249 = !DILocalVariable(name: "call", arg: 1, scope: !248, file: !3, line: 1410, type: !52)
!250 = !DILocation(line: 1410, column: 37, scope: !248)
!251 = !DILocalVariable(name: "op", arg: 2, scope: !248, file: !3, line: 1410, type: !52)
!252 = !DILocation(line: 1410, column: 48, scope: !248)
!253 = !DILocalVariable(name: "args", arg: 3, scope: !248, file: !3, line: 1410, type: !52)
!254 = !DILocation(line: 1410, column: 57, scope: !248)
!255 = !DILocalVariable(name: "rho", arg: 4, scope: !248, file: !3, line: 1410, type: !52)
!256 = !DILocation(line: 1410, column: 68, scope: !248)
!257 = !DILocation(line: 1412, column: 18, scope: !258)
!258 = distinct !DILexicalBlock(scope: !248, file: !3, line: 1412, column: 9)
!259 = !DILocation(line: 1412, column: 9, scope: !258)
!260 = !DILocation(line: 1412, column: 9, scope: !248)
!261 = !DILocation(line: 1413, column: 19, scope: !258)
!262 = !DILocation(line: 1413, column: 9, scope: !258)
!263 = !DILocation(line: 1413, column: 2, scope: !258)
!264 = !DILocalVariable(name: "klass", scope: !265, file: !3, line: 1415, type: !52)
!265 = distinct !DILexicalBlock(scope: !258, file: !3, line: 1414, column: 10)
!266 = !DILocation(line: 1415, column: 7, scope: !265)
!267 = !DILocation(line: 1416, column: 2, scope: !265)
!268 = !DILocation(line: 1417, column: 2, scope: !265)
!269 = !DILocation(line: 1418, column: 12, scope: !265)
!270 = !DILocation(line: 1418, column: 18, scope: !265)
!271 = !DILocation(line: 1418, column: 33, scope: !265)
!272 = !DILocation(line: 1418, column: 2, scope: !265)
!273 = !DILocation(line: 1419, column: 12, scope: !265)
!274 = !DILocation(line: 1419, column: 18, scope: !265)
!275 = !DILocation(line: 1419, column: 34, scope: !265)
!276 = !DILocation(line: 1419, column: 2, scope: !265)
!277 = !DILocation(line: 1420, column: 2, scope: !265)
!278 = !DILocation(line: 1421, column: 9, scope: !265)
!279 = !DILocation(line: 1421, column: 2, scope: !265)
!280 = !DILocation(line: 1423, column: 1, scope: !248)
!281 = distinct !DISubprogram(name: "R_Primitive", scope: !3, file: !3, line: 1029, type: !282, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!282 = !DISubroutineType(types: !283)
!283 = !{!52, !284}
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !57)
!286 = !DILocalVariable(name: "primname", arg: 1, scope: !281, file: !3, line: 1029, type: !284)
!287 = !DILocation(line: 1029, column: 47, scope: !281)
!288 = !DILocalVariable(name: "i", scope: !289, file: !3, line: 1031, type: !80)
!289 = distinct !DILexicalBlock(scope: !281, file: !3, line: 1031, column: 5)
!290 = !DILocation(line: 1031, column: 14, scope: !289)
!291 = !DILocation(line: 1031, column: 10, scope: !289)
!292 = !DILocation(line: 1031, column: 30, scope: !293)
!293 = distinct !DILexicalBlock(scope: !289, file: !3, line: 1031, column: 5)
!294 = !DILocation(line: 1031, column: 21, scope: !293)
!295 = !DILocation(line: 1031, column: 33, scope: !293)
!296 = !DILocation(line: 1031, column: 5, scope: !289)
!297 = !DILocation(line: 1032, column: 13, scope: !298)
!298 = distinct !DILexicalBlock(scope: !293, file: !3, line: 1032, column: 6)
!299 = !DILocation(line: 1032, column: 32, scope: !298)
!300 = !DILocation(line: 1032, column: 23, scope: !298)
!301 = !DILocation(line: 1032, column: 35, scope: !298)
!302 = !DILocation(line: 1032, column: 6, scope: !298)
!303 = !DILocation(line: 1032, column: 41, scope: !298)
!304 = !DILocation(line: 1032, column: 6, scope: !293)
!305 = !DILocation(line: 1033, column: 20, scope: !306)
!306 = distinct !DILexicalBlock(scope: !307, file: !3, line: 1033, column: 10)
!307 = distinct !DILexicalBlock(scope: !298, file: !3, line: 1032, column: 47)
!308 = !DILocation(line: 1033, column: 11, scope: !306)
!309 = !DILocation(line: 1033, column: 23, scope: !306)
!310 = !DILocation(line: 1033, column: 28, scope: !306)
!311 = !DILocation(line: 1033, column: 35, scope: !306)
!312 = !DILocation(line: 1033, column: 10, scope: !307)
!313 = !DILocation(line: 1034, column: 10, scope: !306)
!314 = !DILocation(line: 1034, column: 3, scope: !306)
!315 = !DILocation(line: 1036, column: 20, scope: !306)
!316 = !DILocation(line: 1036, column: 32, scope: !306)
!317 = !DILocation(line: 1036, column: 23, scope: !306)
!318 = !DILocation(line: 1036, column: 35, scope: !306)
!319 = !DILocation(line: 1036, column: 40, scope: !306)
!320 = !DILocation(line: 1036, column: 10, scope: !306)
!321 = !DILocation(line: 1036, column: 3, scope: !306)
!322 = !DILocation(line: 1032, column: 44, scope: !298)
!323 = !DILocation(line: 1031, column: 40, scope: !293)
!324 = !DILocation(line: 1031, column: 5, scope: !293)
!325 = distinct !{!325, !296, !326}
!326 = !DILocation(line: 1037, column: 2, scope: !289)
!327 = !DILocation(line: 1038, column: 12, scope: !281)
!328 = !DILocation(line: 1038, column: 5, scope: !281)
!329 = !DILocation(line: 1039, column: 1, scope: !281)
!330 = distinct !DISubprogram(name: "Rf_StrToInternal", scope: !3, file: !3, line: 1056, type: !331, scopeLine: 1057, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!331 = !DISubroutineType(types: !332)
!332 = !{!80, !284}
!333 = !DILocalVariable(name: "s", arg: 1, scope: !330, file: !3, line: 1056, type: !284)
!334 = !DILocation(line: 1056, column: 31, scope: !330)
!335 = !DILocalVariable(name: "i", scope: !330, file: !3, line: 1058, type: !80)
!336 = !DILocation(line: 1058, column: 9, scope: !330)
!337 = !DILocation(line: 1059, column: 12, scope: !338)
!338 = distinct !DILexicalBlock(scope: !330, file: !3, line: 1059, column: 5)
!339 = !DILocation(line: 1059, column: 10, scope: !338)
!340 = !DILocation(line: 1059, column: 26, scope: !341)
!341 = distinct !DILexicalBlock(scope: !338, file: !3, line: 1059, column: 5)
!342 = !DILocation(line: 1059, column: 17, scope: !341)
!343 = !DILocation(line: 1059, column: 29, scope: !341)
!344 = !DILocation(line: 1059, column: 5, scope: !338)
!345 = !DILocation(line: 1060, column: 13, scope: !346)
!346 = distinct !DILexicalBlock(scope: !341, file: !3, line: 1060, column: 6)
!347 = !DILocation(line: 1060, column: 25, scope: !346)
!348 = !DILocation(line: 1060, column: 16, scope: !346)
!349 = !DILocation(line: 1060, column: 28, scope: !346)
!350 = !DILocation(line: 1060, column: 6, scope: !346)
!351 = !DILocation(line: 1060, column: 34, scope: !346)
!352 = !DILocation(line: 1060, column: 6, scope: !341)
!353 = !DILocation(line: 1060, column: 47, scope: !346)
!354 = !DILocation(line: 1060, column: 40, scope: !346)
!355 = !DILocation(line: 1060, column: 37, scope: !346)
!356 = !DILocation(line: 1059, column: 36, scope: !341)
!357 = !DILocation(line: 1059, column: 5, scope: !341)
!358 = distinct !{!358, !344, !359}
!359 = !DILocation(line: 1060, column: 47, scope: !338)
!360 = !DILocation(line: 1061, column: 12, scope: !330)
!361 = !DILocation(line: 1061, column: 5, scope: !330)
!362 = !DILocation(line: 1062, column: 1, scope: !330)
!363 = distinct !DISubprogram(name: "Rf_installDDVAL", scope: !3, file: !3, line: 1162, type: !364, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!364 = !DISubroutineType(types: !365)
!365 = !{!52, !80}
!366 = !DILocalVariable(name: "n", arg: 1, scope: !363, file: !3, line: 1162, type: !80)
!367 = !DILocation(line: 1162, column: 40, scope: !363)
!368 = !DILocation(line: 1163, column: 9, scope: !369)
!369 = distinct !DILexicalBlock(scope: !363, file: !3, line: 1163, column: 9)
!370 = !DILocation(line: 1163, column: 11, scope: !369)
!371 = !DILocation(line: 1163, column: 9, scope: !363)
!372 = !DILocation(line: 1164, column: 22, scope: !369)
!373 = !DILocation(line: 1164, column: 9, scope: !369)
!374 = !DILocation(line: 1164, column: 2, scope: !369)
!375 = !DILocation(line: 1166, column: 30, scope: !363)
!376 = !DILocation(line: 1166, column: 12, scope: !363)
!377 = !DILocation(line: 1166, column: 5, scope: !363)
!378 = !DILocation(line: 1167, column: 1, scope: !363)
!379 = distinct !DISubprogram(name: "createDDVALSymbol", scope: !3, file: !3, line: 1150, type: !364, scopeLine: 1150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !101)
!380 = !DILocalVariable(name: "n", arg: 1, scope: !379, file: !3, line: 1150, type: !80)
!381 = !DILocation(line: 1150, column: 35, scope: !379)
!382 = !DILocalVariable(name: "buf", scope: !379, file: !3, line: 1151, type: !383)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 120, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 15)
!386 = !DILocation(line: 1151, column: 10, scope: !379)
!387 = !DILocation(line: 1152, column: 5, scope: !379)
!388 = !DILocation(line: 1153, column: 20, scope: !379)
!389 = !DILocation(line: 1153, column: 12, scope: !379)
!390 = !DILocation(line: 1153, column: 5, scope: !379)
!391 = distinct !DISubprogram(name: "Rf_InitNames", scope: !3, file: !3, line: 1182, type: !392, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!392 = !DISubroutineType(types: !393)
!393 = !{null}
!394 = !DILocation(line: 1185, column: 36, scope: !395)
!395 = distinct !DILexicalBlock(scope: !391, file: !3, line: 1185, column: 9)
!396 = !DILocation(line: 1185, column: 27, scope: !395)
!397 = !DILocation(line: 1185, column: 25, scope: !395)
!398 = !DILocation(line: 1185, column: 9, scope: !391)
!399 = !DILocation(line: 1186, column: 2, scope: !395)
!400 = !DILocation(line: 1189, column: 34, scope: !391)
!401 = !DILocation(line: 1189, column: 22, scope: !391)
!402 = !DILocation(line: 1189, column: 20, scope: !391)
!403 = !DILocation(line: 1190, column: 32, scope: !391)
!404 = !DILocation(line: 1190, column: 20, scope: !391)
!405 = !DILocation(line: 1190, column: 18, scope: !391)
!406 = !DILocation(line: 1191, column: 37, scope: !391)
!407 = !DILocation(line: 1191, column: 25, scope: !391)
!408 = !DILocation(line: 1191, column: 23, scope: !391)
!409 = !DILocation(line: 1192, column: 34, scope: !391)
!410 = !DILocation(line: 1192, column: 22, scope: !391)
!411 = !DILocation(line: 1192, column: 20, scope: !391)
!412 = !DILocation(line: 1193, column: 39, scope: !391)
!413 = !DILocation(line: 1193, column: 27, scope: !391)
!414 = !DILocation(line: 1193, column: 25, scope: !391)
!415 = !DILocation(line: 1199, column: 17, scope: !391)
!416 = !DILocation(line: 1199, column: 15, scope: !391)
!417 = !DILocation(line: 1200, column: 5, scope: !391)
!418 = !DILocation(line: 1201, column: 16, scope: !391)
!419 = !DILocation(line: 1201, column: 5, scope: !391)
!420 = !DILocation(line: 1202, column: 25, scope: !391)
!421 = !DILocation(line: 1202, column: 23, scope: !391)
!422 = !DILocation(line: 1204, column: 21, scope: !391)
!423 = !DILocation(line: 1204, column: 19, scope: !391)
!424 = !DILocation(line: 1205, column: 40, scope: !391)
!425 = !DILocation(line: 1205, column: 27, scope: !391)
!426 = !DILocation(line: 1205, column: 25, scope: !391)
!427 = !DILocation(line: 1206, column: 22, scope: !391)
!428 = !DILocation(line: 1206, column: 5, scope: !391)
!429 = !DILocalVariable(name: "i", scope: !430, file: !3, line: 1209, type: !80)
!430 = distinct !DILexicalBlock(scope: !391, file: !3, line: 1209, column: 5)
!431 = !DILocation(line: 1209, column: 14, scope: !430)
!432 = !DILocation(line: 1209, column: 10, scope: !430)
!433 = !DILocation(line: 1209, column: 21, scope: !434)
!434 = distinct !DILexicalBlock(scope: !430, file: !3, line: 1209, column: 5)
!435 = !DILocation(line: 1209, column: 23, scope: !434)
!436 = !DILocation(line: 1209, column: 5, scope: !430)
!437 = !DILocation(line: 1209, column: 56, scope: !434)
!438 = !DILocation(line: 1209, column: 37, scope: !434)
!439 = !DILocation(line: 1209, column: 51, scope: !434)
!440 = !DILocation(line: 1209, column: 54, scope: !434)
!441 = !DILocation(line: 1209, column: 33, scope: !434)
!442 = !DILocation(line: 1209, column: 5, scope: !434)
!443 = distinct !{!443, !436, !444}
!444 = !DILocation(line: 1209, column: 56, scope: !430)
!445 = !DILocation(line: 1213, column: 5, scope: !391)
!446 = !DILocalVariable(name: "i", scope: !447, file: !3, line: 1216, type: !80)
!447 = distinct !DILexicalBlock(scope: !391, file: !3, line: 1216, column: 5)
!448 = !DILocation(line: 1216, column: 14, scope: !447)
!449 = !DILocation(line: 1216, column: 10, scope: !447)
!450 = !DILocation(line: 1216, column: 30, scope: !451)
!451 = distinct !DILexicalBlock(scope: !447, file: !3, line: 1216, column: 5)
!452 = !DILocation(line: 1216, column: 21, scope: !451)
!453 = !DILocation(line: 1216, column: 33, scope: !451)
!454 = !DILocation(line: 1216, column: 5, scope: !447)
!455 = !DILocation(line: 1216, column: 58, scope: !451)
!456 = !DILocation(line: 1216, column: 44, scope: !451)
!457 = !DILocation(line: 1216, column: 40, scope: !451)
!458 = !DILocation(line: 1216, column: 5, scope: !451)
!459 = distinct !{!459, !454, !460}
!460 = !DILocation(line: 1216, column: 59, scope: !447)
!461 = !DILocalVariable(name: "i", scope: !462, file: !3, line: 1219, type: !80)
!462 = distinct !DILexicalBlock(scope: !391, file: !3, line: 1219, column: 5)
!463 = !DILocation(line: 1219, column: 14, scope: !462)
!464 = !DILocation(line: 1219, column: 10, scope: !462)
!465 = !DILocation(line: 1219, column: 31, scope: !466)
!466 = distinct !DILexicalBlock(scope: !462, file: !3, line: 1219, column: 5)
!467 = !DILocation(line: 1219, column: 21, scope: !466)
!468 = !DILocation(line: 1219, column: 5, scope: !462)
!469 = !DILocation(line: 1220, column: 39, scope: !466)
!470 = !DILocation(line: 1220, column: 29, scope: !466)
!471 = !DILocation(line: 1220, column: 21, scope: !466)
!472 = !DILocation(line: 1220, column: 2, scope: !466)
!473 = !DILocation(line: 1219, column: 36, scope: !466)
!474 = !DILocation(line: 1219, column: 5, scope: !466)
!475 = distinct !{!475, !468, !476}
!476 = !DILocation(line: 1220, column: 42, scope: !462)
!477 = !DILocation(line: 1222, column: 5, scope: !391)
!478 = !DILocation(line: 1223, column: 5, scope: !391)
!479 = !DILocation(line: 1224, column: 5, scope: !391)
!480 = !DILocation(line: 1225, column: 5, scope: !391)
!481 = !DILocation(line: 1226, column: 1, scope: !391)
!482 = distinct !DISubprogram(name: "mkSymMarker", scope: !3, file: !3, line: 1170, type: !483, scopeLine: 1171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !101)
!483 = !DISubroutineType(types: !484)
!484 = !{!52, !52}
!485 = !DILocalVariable(name: "pname", arg: 1, scope: !482, file: !3, line: 1170, type: !52)
!486 = !DILocation(line: 1170, column: 30, scope: !482)
!487 = !DILocation(line: 1172, column: 5, scope: !482)
!488 = !DILocalVariable(name: "ans", scope: !482, file: !3, line: 1173, type: !52)
!489 = !DILocation(line: 1173, column: 10, scope: !482)
!490 = !DILocation(line: 1173, column: 16, scope: !482)
!491 = !DILocation(line: 1174, column: 18, scope: !482)
!492 = !DILocation(line: 1174, column: 23, scope: !482)
!493 = !DILocation(line: 1174, column: 5, scope: !482)
!494 = !DILocation(line: 1175, column: 16, scope: !482)
!495 = !DILocation(line: 1175, column: 21, scope: !482)
!496 = !DILocation(line: 1175, column: 5, scope: !482)
!497 = !DILocation(line: 1176, column: 19, scope: !482)
!498 = !DILocation(line: 1176, column: 24, scope: !482)
!499 = !DILocation(line: 1176, column: 5, scope: !482)
!500 = !DILocation(line: 1177, column: 5, scope: !482)
!501 = !DILocation(line: 1178, column: 12, scope: !482)
!502 = !DILocation(line: 1178, column: 5, scope: !482)
!503 = distinct !DISubprogram(name: "SymbolShortcuts", scope: !3, file: !3, line: 1075, type: !392, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !101)
!504 = !DILocation(line: 1077, column: 24, scope: !503)
!505 = !DILocation(line: 1077, column: 22, scope: !503)
!506 = !DILocation(line: 1078, column: 23, scope: !503)
!507 = !DILocation(line: 1078, column: 21, scope: !503)
!508 = !DILocation(line: 1079, column: 21, scope: !503)
!509 = !DILocation(line: 1079, column: 19, scope: !503)
!510 = !DILocation(line: 1080, column: 21, scope: !503)
!511 = !DILocation(line: 1080, column: 19, scope: !503)
!512 = !DILocation(line: 1081, column: 22, scope: !503)
!513 = !DILocation(line: 1081, column: 20, scope: !503)
!514 = !DILocation(line: 1082, column: 24, scope: !503)
!515 = !DILocation(line: 1082, column: 22, scope: !503)
!516 = !DILocation(line: 1083, column: 19, scope: !503)
!517 = !DILocation(line: 1083, column: 17, scope: !503)
!518 = !DILocation(line: 1084, column: 22, scope: !503)
!519 = !DILocation(line: 1084, column: 20, scope: !503)
!520 = !DILocation(line: 1085, column: 20, scope: !503)
!521 = !DILocation(line: 1085, column: 18, scope: !503)
!522 = !DILocation(line: 1086, column: 20, scope: !503)
!523 = !DILocation(line: 1086, column: 18, scope: !503)
!524 = !DILocation(line: 1087, column: 20, scope: !503)
!525 = !DILocation(line: 1087, column: 18, scope: !503)
!526 = !DILocation(line: 1096, column: 25, scope: !503)
!527 = !DILocation(line: 1096, column: 23, scope: !503)
!528 = !DILocation(line: 1097, column: 20, scope: !503)
!529 = !DILocation(line: 1097, column: 5, scope: !503)
!530 = !DILocation(line: 1099, column: 22, scope: !503)
!531 = !DILocation(line: 1099, column: 20, scope: !503)
!532 = !DILocation(line: 1100, column: 20, scope: !503)
!533 = !DILocation(line: 1100, column: 18, scope: !503)
!534 = !DILocation(line: 1101, column: 21, scope: !503)
!535 = !DILocation(line: 1101, column: 19, scope: !503)
!536 = !DILocation(line: 1102, column: 21, scope: !503)
!537 = !DILocation(line: 1102, column: 19, scope: !503)
!538 = !DILocation(line: 1103, column: 20, scope: !503)
!539 = !DILocation(line: 1103, column: 18, scope: !503)
!540 = !DILocation(line: 1104, column: 23, scope: !503)
!541 = !DILocation(line: 1104, column: 21, scope: !503)
!542 = !DILocation(line: 1105, column: 24, scope: !503)
!543 = !DILocation(line: 1105, column: 22, scope: !503)
!544 = !DILocation(line: 1106, column: 21, scope: !503)
!545 = !DILocation(line: 1106, column: 19, scope: !503)
!546 = !DILocation(line: 1107, column: 24, scope: !503)
!547 = !DILocation(line: 1107, column: 22, scope: !503)
!548 = !DILocation(line: 1108, column: 21, scope: !503)
!549 = !DILocation(line: 1108, column: 19, scope: !503)
!550 = !DILocation(line: 1109, column: 24, scope: !503)
!551 = !DILocation(line: 1109, column: 22, scope: !503)
!552 = !DILocation(line: 1110, column: 22, scope: !503)
!553 = !DILocation(line: 1110, column: 20, scope: !503)
!554 = !DILocation(line: 1111, column: 19, scope: !503)
!555 = !DILocation(line: 1111, column: 17, scope: !503)
!556 = !DILocation(line: 1113, column: 23, scope: !503)
!557 = !DILocation(line: 1113, column: 21, scope: !503)
!558 = !DILocation(line: 1114, column: 22, scope: !503)
!559 = !DILocation(line: 1114, column: 20, scope: !503)
!560 = !DILocation(line: 1115, column: 21, scope: !503)
!561 = !DILocation(line: 1115, column: 19, scope: !503)
!562 = !DILocation(line: 1116, column: 25, scope: !503)
!563 = !DILocation(line: 1116, column: 23, scope: !503)
!564 = !DILocation(line: 1117, column: 23, scope: !503)
!565 = !DILocation(line: 1117, column: 21, scope: !503)
!566 = !DILocation(line: 1118, column: 22, scope: !503)
!567 = !DILocation(line: 1118, column: 20, scope: !503)
!568 = !DILocation(line: 1119, column: 27, scope: !503)
!569 = !DILocation(line: 1119, column: 25, scope: !503)
!570 = !DILocation(line: 1120, column: 22, scope: !503)
!571 = !DILocation(line: 1120, column: 20, scope: !503)
!572 = !DILocation(line: 1121, column: 24, scope: !503)
!573 = !DILocation(line: 1121, column: 22, scope: !503)
!574 = !DILocation(line: 1122, column: 21, scope: !503)
!575 = !DILocation(line: 1122, column: 19, scope: !503)
!576 = !DILocation(line: 1123, column: 27, scope: !503)
!577 = !DILocation(line: 1123, column: 25, scope: !503)
!578 = !DILocation(line: 1124, column: 27, scope: !503)
!579 = !DILocation(line: 1124, column: 25, scope: !503)
!580 = !DILocation(line: 1125, column: 22, scope: !503)
!581 = !DILocation(line: 1125, column: 20, scope: !503)
!582 = !DILocation(line: 1126, column: 23, scope: !503)
!583 = !DILocation(line: 1126, column: 21, scope: !503)
!584 = !DILocation(line: 1128, column: 20, scope: !503)
!585 = !DILocation(line: 1128, column: 18, scope: !503)
!586 = !DILocation(line: 1127, column: 18, scope: !503)
!587 = !DILocation(line: 1129, column: 20, scope: !503)
!588 = !DILocation(line: 1129, column: 18, scope: !503)
!589 = !DILocation(line: 1130, column: 28, scope: !503)
!590 = !DILocation(line: 1130, column: 26, scope: !503)
!591 = !DILocation(line: 1131, column: 27, scope: !503)
!592 = !DILocation(line: 1131, column: 25, scope: !503)
!593 = !DILocation(line: 1133, column: 21, scope: !503)
!594 = !DILocation(line: 1133, column: 19, scope: !503)
!595 = !DILocation(line: 1134, column: 20, scope: !503)
!596 = !DILocation(line: 1134, column: 18, scope: !503)
!597 = !DILocation(line: 1135, column: 21, scope: !503)
!598 = !DILocation(line: 1135, column: 19, scope: !503)
!599 = !DILocation(line: 1136, column: 21, scope: !503)
!600 = !DILocation(line: 1136, column: 19, scope: !503)
!601 = !DILocation(line: 1137, column: 20, scope: !503)
!602 = !DILocation(line: 1137, column: 18, scope: !503)
!603 = !DILocation(line: 1138, column: 19, scope: !503)
!604 = !DILocation(line: 1138, column: 17, scope: !503)
!605 = !DILocation(line: 1139, column: 19, scope: !503)
!606 = !DILocation(line: 1139, column: 17, scope: !503)
!607 = !DILocation(line: 1140, column: 28, scope: !503)
!608 = !DILocation(line: 1140, column: 26, scope: !503)
!609 = !DILocation(line: 1141, column: 27, scope: !503)
!610 = !DILocation(line: 1141, column: 25, scope: !503)
!611 = !DILocation(line: 1142, column: 25, scope: !503)
!612 = !DILocation(line: 1142, column: 23, scope: !503)
!613 = !DILocation(line: 1143, column: 1, scope: !503)
!614 = distinct !DISubprogram(name: "installFunTab", scope: !3, file: !3, line: 1064, type: !615, scopeLine: 1065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !101)
!615 = !DISubroutineType(types: !616)
!616 = !{null, !80}
!617 = !DILocalVariable(name: "i", arg: 1, scope: !614, file: !3, line: 1064, type: !80)
!618 = !DILocation(line: 1064, column: 31, scope: !614)
!619 = !DILocalVariable(name: "prim", scope: !614, file: !3, line: 1066, type: !52)
!620 = !DILocation(line: 1066, column: 10, scope: !614)
!621 = !DILocation(line: 1068, column: 22, scope: !614)
!622 = !DILocation(line: 1068, column: 34, scope: !614)
!623 = !DILocation(line: 1068, column: 25, scope: !614)
!624 = !DILocation(line: 1068, column: 37, scope: !614)
!625 = !DILocation(line: 1068, column: 42, scope: !614)
!626 = !DILocation(line: 1068, column: 12, scope: !614)
!627 = !DILocation(line: 1068, column: 10, scope: !614)
!628 = !DILocation(line: 1069, column: 19, scope: !629)
!629 = distinct !DILexicalBlock(scope: !614, file: !3, line: 1069, column: 9)
!630 = !DILocation(line: 1069, column: 10, scope: !629)
!631 = !DILocation(line: 1069, column: 22, scope: !629)
!632 = !DILocation(line: 1069, column: 27, scope: !629)
!633 = !DILocation(line: 1069, column: 34, scope: !629)
!634 = !DILocation(line: 1069, column: 9, scope: !614)
!635 = !DILocation(line: 1070, column: 32, scope: !629)
!636 = !DILocation(line: 1070, column: 23, scope: !629)
!637 = !DILocation(line: 1070, column: 35, scope: !629)
!638 = !DILocation(line: 1070, column: 15, scope: !629)
!639 = !DILocation(line: 1070, column: 42, scope: !629)
!640 = !DILocation(line: 1070, column: 2, scope: !629)
!641 = !DILocation(line: 1072, column: 32, scope: !629)
!642 = !DILocation(line: 1072, column: 23, scope: !629)
!643 = !DILocation(line: 1072, column: 35, scope: !629)
!644 = !DILocation(line: 1072, column: 15, scope: !629)
!645 = !DILocation(line: 1072, column: 42, scope: !629)
!646 = !DILocation(line: 1072, column: 2, scope: !629)
!647 = !DILocation(line: 1073, column: 1, scope: !614)
!648 = distinct !DISubprogram(name: "Rf_install", scope: !3, file: !3, line: 1233, type: !282, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!649 = !DILocalVariable(name: "name", arg: 1, scope: !648, file: !3, line: 1233, type: !284)
!650 = !DILocation(line: 1233, column: 26, scope: !648)
!651 = !DILocalVariable(name: "sym", scope: !648, file: !3, line: 1235, type: !52)
!652 = !DILocation(line: 1235, column: 10, scope: !648)
!653 = !DILocalVariable(name: "i", scope: !648, file: !3, line: 1236, type: !80)
!654 = !DILocation(line: 1236, column: 9, scope: !648)
!655 = !DILocalVariable(name: "hashcode", scope: !648, file: !3, line: 1236, type: !80)
!656 = !DILocation(line: 1236, column: 12, scope: !648)
!657 = !DILocation(line: 1238, column: 29, scope: !648)
!658 = !DILocation(line: 1238, column: 16, scope: !648)
!659 = !DILocation(line: 1238, column: 14, scope: !648)
!660 = !DILocation(line: 1239, column: 9, scope: !648)
!661 = !DILocation(line: 1239, column: 18, scope: !648)
!662 = !DILocation(line: 1239, column: 7, scope: !648)
!663 = !DILocation(line: 1241, column: 16, scope: !664)
!664 = distinct !DILexicalBlock(scope: !648, file: !3, line: 1241, column: 5)
!665 = !DILocation(line: 1241, column: 30, scope: !664)
!666 = !DILocation(line: 1241, column: 14, scope: !664)
!667 = !DILocation(line: 1241, column: 10, scope: !664)
!668 = !DILocation(line: 1241, column: 34, scope: !669)
!669 = distinct !DILexicalBlock(scope: !664, file: !3, line: 1241, column: 5)
!670 = !DILocation(line: 1241, column: 41, scope: !669)
!671 = !DILocation(line: 1241, column: 38, scope: !669)
!672 = !DILocation(line: 1241, column: 5, scope: !664)
!673 = !DILocation(line: 1242, column: 13, scope: !674)
!674 = distinct !DILexicalBlock(scope: !669, file: !3, line: 1242, column: 6)
!675 = !DILocation(line: 1242, column: 19, scope: !674)
!676 = !DILocation(line: 1242, column: 6, scope: !674)
!677 = !DILocation(line: 1242, column: 46, scope: !674)
!678 = !DILocation(line: 1242, column: 6, scope: !669)
!679 = !DILocation(line: 1242, column: 64, scope: !674)
!680 = !DILocation(line: 1242, column: 60, scope: !674)
!681 = !DILocation(line: 1242, column: 52, scope: !674)
!682 = !DILocation(line: 1242, column: 49, scope: !674)
!683 = !DILocation(line: 1241, column: 63, scope: !669)
!684 = !DILocation(line: 1241, column: 59, scope: !669)
!685 = !DILocation(line: 1241, column: 57, scope: !669)
!686 = !DILocation(line: 1241, column: 5, scope: !669)
!687 = distinct !{!687, !672, !688}
!688 = !DILocation(line: 1242, column: 68, scope: !664)
!689 = !DILocation(line: 1244, column: 10, scope: !690)
!690 = distinct !DILexicalBlock(scope: !648, file: !3, line: 1244, column: 9)
!691 = !DILocation(line: 1244, column: 9, scope: !690)
!692 = !DILocation(line: 1244, column: 15, scope: !690)
!693 = !DILocation(line: 1244, column: 9, scope: !648)
!694 = !DILocation(line: 1245, column: 8, scope: !690)
!695 = !DILocation(line: 1245, column: 2, scope: !690)
!696 = !DILocation(line: 1246, column: 16, scope: !697)
!697 = distinct !DILexicalBlock(scope: !648, file: !3, line: 1246, column: 9)
!698 = !DILocation(line: 1246, column: 9, scope: !697)
!699 = !DILocation(line: 1246, column: 22, scope: !697)
!700 = !DILocation(line: 1246, column: 9, scope: !648)
!701 = !DILocation(line: 1247, column: 8, scope: !697)
!702 = !DILocation(line: 1247, column: 2, scope: !697)
!703 = !DILocation(line: 1248, column: 27, scope: !648)
!704 = !DILocation(line: 1248, column: 20, scope: !648)
!705 = !DILocation(line: 1248, column: 34, scope: !648)
!706 = !DILocation(line: 1248, column: 11, scope: !648)
!707 = !DILocation(line: 1248, column: 9, scope: !648)
!708 = !DILocation(line: 1249, column: 29, scope: !648)
!709 = !DILocation(line: 1249, column: 19, scope: !648)
!710 = !DILocation(line: 1249, column: 35, scope: !648)
!711 = !DILocation(line: 1249, column: 5, scope: !648)
!712 = !DILocation(line: 1250, column: 27, scope: !648)
!713 = !DILocation(line: 1250, column: 17, scope: !648)
!714 = !DILocation(line: 1250, column: 5, scope: !648)
!715 = !DILocation(line: 1252, column: 24, scope: !648)
!716 = !DILocation(line: 1252, column: 5, scope: !648)
!717 = !DILocation(line: 1252, column: 19, scope: !648)
!718 = !DILocation(line: 1252, column: 22, scope: !648)
!719 = !DILocation(line: 1253, column: 13, scope: !648)
!720 = !DILocation(line: 1253, column: 5, scope: !648)
!721 = !DILocation(line: 1254, column: 1, scope: !648)
!722 = distinct !DISubprogram(name: "Rf_installNoTrChar", scope: !3, file: !3, line: 1260, type: !483, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!723 = !DILocalVariable(name: "charSXP", arg: 1, scope: !722, file: !3, line: 1260, type: !52)
!724 = !DILocation(line: 1260, column: 27, scope: !722)
!725 = !DILocalVariable(name: "sym", scope: !722, file: !3, line: 1262, type: !52)
!726 = !DILocation(line: 1262, column: 10, scope: !722)
!727 = !DILocalVariable(name: "i", scope: !722, file: !3, line: 1263, type: !80)
!728 = !DILocation(line: 1263, column: 9, scope: !722)
!729 = !DILocalVariable(name: "hashcode", scope: !722, file: !3, line: 1263, type: !80)
!730 = !DILocation(line: 1263, column: 12, scope: !722)
!731 = !DILocation(line: 1265, column: 18, scope: !732)
!732 = distinct !DILexicalBlock(scope: !722, file: !3, line: 1265, column: 9)
!733 = !DILocation(line: 1265, column: 10, scope: !732)
!734 = !DILocation(line: 1265, column: 9, scope: !722)
!735 = !DILocation(line: 1266, column: 26, scope: !736)
!736 = distinct !DILexicalBlock(scope: !732, file: !3, line: 1265, column: 29)
!737 = !DILocation(line: 1266, column: 13, scope: !736)
!738 = !DILocation(line: 1266, column: 11, scope: !736)
!739 = !DILocation(line: 1267, column: 16, scope: !736)
!740 = !DILocation(line: 1267, column: 25, scope: !736)
!741 = !DILocation(line: 1267, column: 2, scope: !736)
!742 = !DILocation(line: 1268, column: 14, scope: !736)
!743 = !DILocation(line: 1268, column: 2, scope: !736)
!744 = !DILocation(line: 1269, column: 5, scope: !736)
!745 = !DILocation(line: 1270, column: 23, scope: !746)
!746 = distinct !DILexicalBlock(scope: !732, file: !3, line: 1269, column: 12)
!747 = !DILocation(line: 1270, column: 13, scope: !746)
!748 = !DILocation(line: 1270, column: 11, scope: !746)
!749 = !DILocation(line: 1272, column: 9, scope: !722)
!750 = !DILocation(line: 1272, column: 18, scope: !722)
!751 = !DILocation(line: 1272, column: 7, scope: !722)
!752 = !DILocation(line: 1274, column: 16, scope: !753)
!753 = distinct !DILexicalBlock(scope: !722, file: !3, line: 1274, column: 5)
!754 = !DILocation(line: 1274, column: 30, scope: !753)
!755 = !DILocation(line: 1274, column: 14, scope: !753)
!756 = !DILocation(line: 1274, column: 10, scope: !753)
!757 = !DILocation(line: 1274, column: 34, scope: !758)
!758 = distinct !DILexicalBlock(scope: !753, file: !3, line: 1274, column: 5)
!759 = !DILocation(line: 1274, column: 41, scope: !758)
!760 = !DILocation(line: 1274, column: 38, scope: !758)
!761 = !DILocation(line: 1274, column: 5, scope: !753)
!762 = !DILocation(line: 1275, column: 13, scope: !763)
!763 = distinct !DILexicalBlock(scope: !758, file: !3, line: 1275, column: 6)
!764 = !DILocation(line: 1275, column: 28, scope: !763)
!765 = !DILocation(line: 1275, column: 6, scope: !763)
!766 = !DILocation(line: 1275, column: 55, scope: !763)
!767 = !DILocation(line: 1275, column: 6, scope: !758)
!768 = !DILocation(line: 1275, column: 73, scope: !763)
!769 = !DILocation(line: 1275, column: 69, scope: !763)
!770 = !DILocation(line: 1275, column: 61, scope: !763)
!771 = !DILocation(line: 1275, column: 58, scope: !763)
!772 = !DILocation(line: 1274, column: 63, scope: !758)
!773 = !DILocation(line: 1274, column: 59, scope: !758)
!774 = !DILocation(line: 1274, column: 57, scope: !758)
!775 = !DILocation(line: 1274, column: 5, scope: !758)
!776 = distinct !{!776, !761, !777}
!777 = !DILocation(line: 1275, column: 77, scope: !753)
!778 = !DILocalVariable(name: "len", scope: !722, file: !3, line: 1277, type: !80)
!779 = !DILocation(line: 1277, column: 9, scope: !722)
!780 = !DILocation(line: 1277, column: 22, scope: !722)
!781 = !DILocation(line: 1277, column: 15, scope: !722)
!782 = !DILocation(line: 1278, column: 9, scope: !783)
!783 = distinct !DILexicalBlock(scope: !722, file: !3, line: 1278, column: 9)
!784 = !DILocation(line: 1278, column: 13, scope: !783)
!785 = !DILocation(line: 1278, column: 9, scope: !722)
!786 = !DILocation(line: 1279, column: 8, scope: !783)
!787 = !DILocation(line: 1279, column: 2, scope: !783)
!788 = !DILocation(line: 1280, column: 9, scope: !789)
!789 = distinct !DILexicalBlock(scope: !722, file: !3, line: 1280, column: 9)
!790 = !DILocation(line: 1280, column: 13, scope: !789)
!791 = !DILocation(line: 1280, column: 9, scope: !722)
!792 = !DILocation(line: 1281, column: 8, scope: !789)
!793 = !DILocation(line: 1281, column: 2, scope: !789)
!794 = !DILocation(line: 1282, column: 18, scope: !795)
!795 = distinct !DILexicalBlock(scope: !722, file: !3, line: 1282, column: 9)
!796 = !DILocation(line: 1282, column: 9, scope: !795)
!797 = !DILocation(line: 1282, column: 27, scope: !795)
!798 = !DILocation(line: 1282, column: 39, scope: !795)
!799 = !DILocation(line: 1282, column: 31, scope: !795)
!800 = !DILocation(line: 1282, column: 48, scope: !795)
!801 = !DILocation(line: 1282, column: 51, scope: !795)
!802 = !DILocation(line: 1282, column: 63, scope: !795)
!803 = !DILocation(line: 1283, column: 17, scope: !795)
!804 = !DILocation(line: 1283, column: 7, scope: !795)
!805 = !DILocation(line: 1283, column: 26, scope: !795)
!806 = !DILocation(line: 1283, column: 29, scope: !795)
!807 = !DILocation(line: 1282, column: 9, scope: !722)
!808 = !DILocation(line: 1284, column: 17, scope: !795)
!809 = !DILocation(line: 1284, column: 26, scope: !795)
!810 = !DILocation(line: 1284, column: 8, scope: !795)
!811 = !DILocation(line: 1284, column: 6, scope: !795)
!812 = !DILocation(line: 1284, column: 2, scope: !795)
!813 = !DILocation(line: 1289, column: 2, scope: !814)
!814 = distinct !DILexicalBlock(scope: !795, file: !3, line: 1285, column: 10)
!815 = !DILocation(line: 1290, column: 24, scope: !814)
!816 = !DILocation(line: 1290, column: 17, scope: !814)
!817 = !DILocation(line: 1290, column: 40, scope: !814)
!818 = !DILocation(line: 1290, column: 8, scope: !814)
!819 = !DILocation(line: 1290, column: 6, scope: !814)
!820 = !DILocation(line: 1291, column: 26, scope: !814)
!821 = !DILocation(line: 1291, column: 16, scope: !814)
!822 = !DILocation(line: 1291, column: 32, scope: !814)
!823 = !DILocation(line: 1291, column: 2, scope: !814)
!824 = !DILocation(line: 1292, column: 24, scope: !814)
!825 = !DILocation(line: 1292, column: 14, scope: !814)
!826 = !DILocation(line: 1292, column: 2, scope: !814)
!827 = !DILocation(line: 1293, column: 2, scope: !814)
!828 = !DILocation(line: 1296, column: 24, scope: !722)
!829 = !DILocation(line: 1296, column: 5, scope: !722)
!830 = !DILocation(line: 1296, column: 19, scope: !722)
!831 = !DILocation(line: 1296, column: 22, scope: !722)
!832 = !DILocation(line: 1297, column: 13, scope: !722)
!833 = !DILocation(line: 1297, column: 5, scope: !722)
!834 = !DILocation(line: 1298, column: 1, scope: !722)
!835 = distinct !DISubprogram(name: "Rf_installS3Signature", scope: !3, file: !3, line: 1302, type: !836, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!836 = !DISubroutineType(types: !837)
!837 = !{!52, !284, !284}
!838 = !DILocalVariable(name: "className", arg: 1, scope: !835, file: !3, line: 1302, type: !284)
!839 = !DILocation(line: 1302, column: 37, scope: !835)
!840 = !DILocalVariable(name: "methodName", arg: 2, scope: !835, file: !3, line: 1302, type: !284)
!841 = !DILocation(line: 1302, column: 60, scope: !835)
!842 = !DILocalVariable(name: "src", scope: !835, file: !3, line: 1304, type: !284)
!843 = !DILocation(line: 1304, column: 17, scope: !835)
!844 = !DILocalVariable(name: "signature", scope: !835, file: !3, line: 1305, type: !845)
!845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !57, size: 4096, elements: !846)
!846 = !{!847}
!847 = !DISubrange(count: 512)
!848 = !DILocation(line: 1305, column: 10, scope: !835)
!849 = !DILocalVariable(name: "i", scope: !835, file: !3, line: 1307, type: !80)
!850 = !DILocation(line: 1307, column: 9, scope: !835)
!851 = !DILocation(line: 1308, column: 15, scope: !852)
!852 = distinct !DILexicalBlock(scope: !835, file: !3, line: 1308, column: 5)
!853 = !DILocation(line: 1308, column: 13, scope: !852)
!854 = !DILocation(line: 1308, column: 9, scope: !852)
!855 = !DILocation(line: 1308, column: 27, scope: !856)
!856 = distinct !DILexicalBlock(scope: !852, file: !3, line: 1308, column: 5)
!857 = !DILocation(line: 1308, column: 26, scope: !856)
!858 = !DILocation(line: 1308, column: 5, scope: !852)
!859 = !DILocation(line: 1309, column: 6, scope: !860)
!860 = distinct !DILexicalBlock(scope: !861, file: !3, line: 1309, column: 6)
!861 = distinct !DILexicalBlock(scope: !856, file: !3, line: 1308, column: 39)
!862 = !DILocation(line: 1309, column: 8, scope: !860)
!863 = !DILocation(line: 1309, column: 6, scope: !861)
!864 = !DILocation(line: 1310, column: 12, scope: !860)
!865 = !DILocation(line: 1310, column: 46, scope: !860)
!866 = !DILocation(line: 1310, column: 6, scope: !860)
!867 = !DILocation(line: 1311, column: 20, scope: !861)
!868 = !DILocation(line: 1311, column: 19, scope: !861)
!869 = !DILocation(line: 1311, column: 13, scope: !861)
!870 = !DILocation(line: 1311, column: 2, scope: !861)
!871 = !DILocation(line: 1311, column: 17, scope: !861)
!872 = !DILocation(line: 1312, column: 5, scope: !861)
!873 = !DILocation(line: 1308, column: 35, scope: !856)
!874 = !DILocation(line: 1308, column: 5, scope: !856)
!875 = distinct !{!875, !858, !876}
!876 = !DILocation(line: 1312, column: 5, scope: !852)
!877 = !DILocation(line: 1314, column: 9, scope: !878)
!878 = distinct !DILexicalBlock(scope: !835, file: !3, line: 1314, column: 9)
!879 = !DILocation(line: 1314, column: 11, scope: !878)
!880 = !DILocation(line: 1314, column: 9, scope: !835)
!881 = !DILocation(line: 1315, column: 8, scope: !878)
!882 = !DILocation(line: 1315, column: 42, scope: !878)
!883 = !DILocation(line: 1315, column: 2, scope: !878)
!884 = !DILocation(line: 1316, column: 16, scope: !835)
!885 = !DILocation(line: 1316, column: 5, scope: !835)
!886 = !DILocation(line: 1316, column: 20, scope: !835)
!887 = !DILocation(line: 1318, column: 15, scope: !888)
!888 = distinct !DILexicalBlock(scope: !835, file: !3, line: 1318, column: 5)
!889 = !DILocation(line: 1318, column: 13, scope: !888)
!890 = !DILocation(line: 1318, column: 9, scope: !888)
!891 = !DILocation(line: 1318, column: 28, scope: !892)
!892 = distinct !DILexicalBlock(scope: !888, file: !3, line: 1318, column: 5)
!893 = !DILocation(line: 1318, column: 27, scope: !892)
!894 = !DILocation(line: 1318, column: 5, scope: !888)
!895 = !DILocation(line: 1319, column: 6, scope: !896)
!896 = distinct !DILexicalBlock(scope: !897, file: !3, line: 1319, column: 6)
!897 = distinct !DILexicalBlock(scope: !892, file: !3, line: 1318, column: 40)
!898 = !DILocation(line: 1319, column: 8, scope: !896)
!899 = !DILocation(line: 1319, column: 6, scope: !897)
!900 = !DILocation(line: 1320, column: 12, scope: !896)
!901 = !DILocation(line: 1320, column: 46, scope: !896)
!902 = !DILocation(line: 1320, column: 6, scope: !896)
!903 = !DILocation(line: 1321, column: 20, scope: !897)
!904 = !DILocation(line: 1321, column: 19, scope: !897)
!905 = !DILocation(line: 1321, column: 13, scope: !897)
!906 = !DILocation(line: 1321, column: 2, scope: !897)
!907 = !DILocation(line: 1321, column: 17, scope: !897)
!908 = !DILocation(line: 1322, column: 5, scope: !897)
!909 = !DILocation(line: 1318, column: 36, scope: !892)
!910 = !DILocation(line: 1318, column: 5, scope: !892)
!911 = distinct !{!911, !894, !912}
!912 = !DILocation(line: 1322, column: 5, scope: !888)
!913 = !DILocation(line: 1324, column: 9, scope: !914)
!914 = distinct !DILexicalBlock(scope: !835, file: !3, line: 1324, column: 9)
!915 = !DILocation(line: 1324, column: 11, scope: !914)
!916 = !DILocation(line: 1324, column: 9, scope: !835)
!917 = !DILocation(line: 1325, column: 8, scope: !914)
!918 = !DILocation(line: 1325, column: 42, scope: !914)
!919 = !DILocation(line: 1325, column: 2, scope: !914)
!920 = !DILocation(line: 1326, column: 15, scope: !835)
!921 = !DILocation(line: 1326, column: 5, scope: !835)
!922 = !DILocation(line: 1326, column: 18, scope: !835)
!923 = !DILocation(line: 1328, column: 20, scope: !835)
!924 = !DILocation(line: 1328, column: 12, scope: !835)
!925 = !DILocation(line: 1328, column: 5, scope: !835)
!926 = distinct !DISubprogram(name: "getPRIMNAME", scope: !3, file: !3, line: 1426, type: !927, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !101)
!927 = !DISubroutineType(types: !928)
!928 = !{!284, !52}
!929 = !DILocalVariable(name: "object", arg: 1, scope: !926, file: !3, line: 1426, type: !52)
!930 = !DILocation(line: 1426, column: 30, scope: !926)
!931 = !DILocation(line: 1428, column: 12, scope: !926)
!932 = !DILocation(line: 1428, column: 5, scope: !926)
!933 = distinct !DISubprogram(name: "initializeDDVALSymbols", scope: !3, file: !3, line: 1156, type: !392, scopeLine: 1156, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !101)
!934 = !DILocalVariable(name: "i", scope: !935, file: !3, line: 1157, type: !80)
!935 = distinct !DILexicalBlock(scope: !933, file: !3, line: 1157, column: 5)
!936 = !DILocation(line: 1157, column: 13, scope: !935)
!937 = !DILocation(line: 1157, column: 9, scope: !935)
!938 = !DILocation(line: 1157, column: 20, scope: !939)
!939 = distinct !DILexicalBlock(scope: !935, file: !3, line: 1157, column: 5)
!940 = !DILocation(line: 1157, column: 22, scope: !939)
!941 = !DILocation(line: 1157, column: 5, scope: !935)
!942 = !DILocation(line: 1158, column: 38, scope: !943)
!943 = distinct !DILexicalBlock(scope: !939, file: !3, line: 1157, column: 46)
!944 = !DILocation(line: 1158, column: 20, scope: !943)
!945 = !DILocation(line: 1158, column: 15, scope: !943)
!946 = !DILocation(line: 1158, column: 2, scope: !943)
!947 = !DILocation(line: 1158, column: 18, scope: !943)
!948 = !DILocation(line: 1159, column: 5, scope: !943)
!949 = !DILocation(line: 1157, column: 42, scope: !939)
!950 = !DILocation(line: 1157, column: 5, scope: !939)
!951 = distinct !{!951, !941, !952}
!952 = !DILocation(line: 1159, column: 5, scope: !935)
!953 = !DILocation(line: 1160, column: 1, scope: !933)
