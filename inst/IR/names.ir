; ModuleID = '/Users/duncan/Rtrunk/buildO2/../src/main/names.c'
source_filename = "/Users/duncan/Rtrunk/buildO2/../src/main/names.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx13.0.0"

%struct.FUNTAB = type { ptr, ptr, i32, i32, i32, %struct.PPinfo }
%struct.PPinfo = type { i32, i32, i32 }
%struct.R_PrintData = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, i32, ptr, ptr }
%struct.SEXPREC = type { %struct.sxpinfo_struct, ptr, ptr, ptr, %union.anon }
%struct.sxpinfo_struct = type { i64 }
%union.anon = type { %struct.symsxp_struct }
%struct.symsxp_struct = type { ptr, ptr, ptr }
%union.SEXPREC_ALIGN = type { %struct.VECTOR_SEXPREC }
%struct.VECTOR_SEXPREC = type { %struct.sxpinfo_struct, ptr, ptr, ptr, %struct.vecsxp_struct }
%struct.vecsxp_struct = type { i64, i64 }
%struct.listsxp_struct = type { ptr, ptr, ptr }
%struct.primsxp_struct = type { i32 }

@.str = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"while\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"for\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"repeat\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"break\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"next\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"return\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"function\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"<-\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"<<-\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c".subset\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c".subset2\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"[[\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"$\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"[<-\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"[[<-\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"$<-\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"switch\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"browser\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c".primTrace\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c".primUntrace\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c".Internal\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c".Primitive\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"call\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"quote\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"substitute\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"missing\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"nargs\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"on.exit\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"forceAndCall\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"stop\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"warning\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"gettext\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ngettext\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"bindtextdomain\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c".addCondHands\00", align 1
@.str.41 = private unnamed_addr constant [14 x i8] c".addGlobHands\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c".resetCondHands\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c".signalCondition\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c".dfltStop\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c".dfltWarn\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c".addRestart\00", align 1
@.str.47 = private unnamed_addr constant [12 x i8] c".getRestart\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c".invokeRestart\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c".addTryHandlers\00", align 1
@.str.50 = private unnamed_addr constant [14 x i8] c"geterrmessage\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"seterrmessage\00", align 1
@.str.52 = private unnamed_addr constant [22 x i8] c"printDeferredWarnings\00", align 1
@.str.53 = private unnamed_addr constant [20 x i8] c"interruptsSuspended\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"as.function.default\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"undebug\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"isdebugged\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"debugonce\00", align 1
@.str.59 = private unnamed_addr constant [7 x i8] c"Recall\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"delayedAssign\00", align 1
@.str.61 = private unnamed_addr constant [9 x i8] c"makeLazy\00", align 1
@.str.62 = private unnamed_addr constant [10 x i8] c"identical\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"C_tryCatchHelper\00", align 1
@.str.64 = private unnamed_addr constant [18 x i8] c"getNamespaceValue\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.66 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.68 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.69 = private unnamed_addr constant [2 x i8] c"^\00", align 1
@.str.70 = private unnamed_addr constant [3 x i8] c"%%\00", align 1
@.str.71 = private unnamed_addr constant [4 x i8] c"%/%\00", align 1
@.str.72 = private unnamed_addr constant [4 x i8] c"%*%\00", align 1
@.str.73 = private unnamed_addr constant [3 x i8] c"==\00", align 1
@.str.74 = private unnamed_addr constant [3 x i8] c"!=\00", align 1
@.str.75 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.76 = private unnamed_addr constant [3 x i8] c"<=\00", align 1
@.str.77 = private unnamed_addr constant [3 x i8] c">=\00", align 1
@.str.78 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.79 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.80 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.81 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.82 = private unnamed_addr constant [3 x i8] c"&&\00", align 1
@.str.83 = private unnamed_addr constant [3 x i8] c"||\00", align 1
@.str.84 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.85 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"::\00", align 1
@.str.87 = private unnamed_addr constant [4 x i8] c":::\00", align 1
@.str.88 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.89 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"...elt\00", align 1
@.str.91 = private unnamed_addr constant [10 x i8] c"...length\00", align 1
@.str.92 = private unnamed_addr constant [9 x i8] c"...names\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.94 = private unnamed_addr constant [9 x i8] c"length<-\00", align 1
@.str.95 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c"oldClass\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"oldClass<-\00", align 1
@.str.98 = private unnamed_addr constant [6 x i8] c"class\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c".cache_class\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c".class2\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"class<-\00", align 1
@.str.102 = private unnamed_addr constant [8 x i8] c"unclass\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"names\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"names<-\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c"dimnames\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"dimnames<-\00", align 1
@.str.107 = private unnamed_addr constant [4 x i8] c"dim\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"dim<-\00", align 1
@.str.109 = private unnamed_addr constant [11 x i8] c"attributes\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"attributes<-\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"attr\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"attr<-\00", align 1
@.str.113 = private unnamed_addr constant [4 x i8] c"@<-\00", align 1
@.str.114 = private unnamed_addr constant [9 x i8] c"levels<-\00", align 1
@.str.115 = private unnamed_addr constant [7 x i8] c"vector\00", align 1
@.str.116 = private unnamed_addr constant [8 x i8] c"complex\00", align 1
@.str.117 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.118 = private unnamed_addr constant [6 x i8] c"array\00", align 1
@.str.119 = private unnamed_addr constant [5 x i8] c"diag\00", align 1
@.str.120 = private unnamed_addr constant [10 x i8] c"backsolve\00", align 1
@.str.121 = private unnamed_addr constant [8 x i8] c"max.col\00", align 1
@.str.122 = private unnamed_addr constant [4 x i8] c"row\00", align 1
@.str.123 = private unnamed_addr constant [4 x i8] c"col\00", align 1
@.str.124 = private unnamed_addr constant [7 x i8] c"unlist\00", align 1
@.str.125 = private unnamed_addr constant [6 x i8] c"cbind\00", align 1
@.str.126 = private unnamed_addr constant [6 x i8] c"rbind\00", align 1
@.str.127 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@.str.128 = private unnamed_addr constant [10 x i8] c"all.names\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.130 = private unnamed_addr constant [10 x i8] c"comment<-\00", align 1
@.str.131 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@.str.132 = private unnamed_addr constant [5 x i8] c"get0\00", align 1
@.str.133 = private unnamed_addr constant [5 x i8] c"mget\00", align 1
@.str.134 = private unnamed_addr constant [7 x i8] c"exists\00", align 1
@.str.135 = private unnamed_addr constant [7 x i8] c"assign\00", align 1
@.str.136 = private unnamed_addr constant [9 x i8] c"list2env\00", align 1
@.str.137 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str.138 = private unnamed_addr constant [11 x i8] c"duplicated\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"anyDuplicated\00", align 1
@.str.141 = private unnamed_addr constant [6 x i8] c"anyNA\00", align 1
@.str.142 = private unnamed_addr constant [6 x i8] c"which\00", align 1
@.str.143 = private unnamed_addr constant [10 x i8] c"which.min\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"pmin\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"pmax\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"which.max\00", align 1
@.str.147 = private unnamed_addr constant [6 x i8] c"match\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"pmatch\00", align 1
@.str.149 = private unnamed_addr constant [10 x i8] c"charmatch\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"match.call\00", align 1
@.str.151 = private unnamed_addr constant [10 x i8] c"crossprod\00", align 1
@.str.152 = private unnamed_addr constant [11 x i8] c"tcrossprod\00", align 1
@.str.153 = private unnamed_addr constant [8 x i8] c"lengths\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"sequence\00", align 1
@.str.155 = private unnamed_addr constant [6 x i8] c"vhash\00", align 1
@.str.156 = private unnamed_addr constant [7 x i8] c"attach\00", align 1
@.str.157 = private unnamed_addr constant [7 x i8] c"detach\00", align 1
@.str.158 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.159 = private unnamed_addr constant [12 x i8] c"setFileTime\00", align 1
@.str.160 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.161 = private unnamed_addr constant [7 x i8] c"signif\00", align 1
@.str.162 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.163 = private unnamed_addr constant [6 x i8] c"log10\00", align 1
@.str.164 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.165 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.166 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.167 = private unnamed_addr constant [8 x i8] c"ceiling\00", align 1
@.str.168 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.169 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.170 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.171 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.172 = private unnamed_addr constant [6 x i8] c"expm1\00", align 1
@.str.173 = private unnamed_addr constant [6 x i8] c"log1p\00", align 1
@.str.174 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.175 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.176 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.177 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.178 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.179 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.180 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.181 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.182 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.183 = private unnamed_addr constant [6 x i8] c"acosh\00", align 1
@.str.184 = private unnamed_addr constant [6 x i8] c"asinh\00", align 1
@.str.185 = private unnamed_addr constant [6 x i8] c"atanh\00", align 1
@.str.186 = private unnamed_addr constant [7 x i8] c"lgamma\00", align 1
@.str.187 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.188 = private unnamed_addr constant [8 x i8] c"digamma\00", align 1
@.str.189 = private unnamed_addr constant [9 x i8] c"trigamma\00", align 1
@.str.190 = private unnamed_addr constant [6 x i8] c"cospi\00", align 1
@.str.191 = private unnamed_addr constant [6 x i8] c"sinpi\00", align 1
@.str.192 = private unnamed_addr constant [6 x i8] c"tanpi\00", align 1
@.str.193 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.194 = private unnamed_addr constant [6 x i8] c"lbeta\00", align 1
@.str.195 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str.196 = private unnamed_addr constant [8 x i8] c"lchoose\00", align 1
@.str.197 = private unnamed_addr constant [7 x i8] c"choose\00", align 1
@.str.198 = private unnamed_addr constant [7 x i8] c"dchisq\00", align 1
@.str.199 = private unnamed_addr constant [7 x i8] c"pchisq\00", align 1
@.str.200 = private unnamed_addr constant [7 x i8] c"qchisq\00", align 1
@.str.201 = private unnamed_addr constant [5 x i8] c"dexp\00", align 1
@.str.202 = private unnamed_addr constant [5 x i8] c"pexp\00", align 1
@.str.203 = private unnamed_addr constant [5 x i8] c"qexp\00", align 1
@.str.204 = private unnamed_addr constant [6 x i8] c"dgeom\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"pgeom\00", align 1
@.str.206 = private unnamed_addr constant [6 x i8] c"qgeom\00", align 1
@.str.207 = private unnamed_addr constant [6 x i8] c"dpois\00", align 1
@.str.208 = private unnamed_addr constant [6 x i8] c"ppois\00", align 1
@.str.209 = private unnamed_addr constant [6 x i8] c"qpois\00", align 1
@.str.210 = private unnamed_addr constant [3 x i8] c"dt\00", align 1
@.str.211 = private unnamed_addr constant [3 x i8] c"pt\00", align 1
@.str.212 = private unnamed_addr constant [3 x i8] c"qt\00", align 1
@.str.213 = private unnamed_addr constant [10 x i8] c"dsignrank\00", align 1
@.str.214 = private unnamed_addr constant [10 x i8] c"psignrank\00", align 1
@.str.215 = private unnamed_addr constant [10 x i8] c"qsignrank\00", align 1
@.str.216 = private unnamed_addr constant [8 x i8] c"besselJ\00", align 1
@.str.217 = private unnamed_addr constant [8 x i8] c"besselY\00", align 1
@.str.218 = private unnamed_addr constant [9 x i8] c"psigamma\00", align 1
@.str.219 = private unnamed_addr constant [3 x i8] c"Re\00", align 1
@.str.220 = private unnamed_addr constant [3 x i8] c"Im\00", align 1
@.str.221 = private unnamed_addr constant [4 x i8] c"Mod\00", align 1
@.str.222 = private unnamed_addr constant [4 x i8] c"Arg\00", align 1
@.str.223 = private unnamed_addr constant [5 x i8] c"Conj\00", align 1
@.str.224 = private unnamed_addr constant [6 x i8] c"dbeta\00", align 1
@.str.225 = private unnamed_addr constant [6 x i8] c"pbeta\00", align 1
@.str.226 = private unnamed_addr constant [6 x i8] c"qbeta\00", align 1
@.str.227 = private unnamed_addr constant [7 x i8] c"dbinom\00", align 1
@.str.228 = private unnamed_addr constant [7 x i8] c"pbinom\00", align 1
@.str.229 = private unnamed_addr constant [7 x i8] c"qbinom\00", align 1
@.str.230 = private unnamed_addr constant [8 x i8] c"dcauchy\00", align 1
@.str.231 = private unnamed_addr constant [8 x i8] c"pcauchy\00", align 1
@.str.232 = private unnamed_addr constant [8 x i8] c"qcauchy\00", align 1
@.str.233 = private unnamed_addr constant [3 x i8] c"df\00", align 1
@.str.234 = private unnamed_addr constant [3 x i8] c"pf\00", align 1
@.str.235 = private unnamed_addr constant [3 x i8] c"qf\00", align 1
@.str.236 = private unnamed_addr constant [7 x i8] c"dgamma\00", align 1
@.str.237 = private unnamed_addr constant [7 x i8] c"pgamma\00", align 1
@.str.238 = private unnamed_addr constant [7 x i8] c"qgamma\00", align 1
@.str.239 = private unnamed_addr constant [7 x i8] c"dlnorm\00", align 1
@.str.240 = private unnamed_addr constant [7 x i8] c"plnorm\00", align 1
@.str.241 = private unnamed_addr constant [7 x i8] c"qlnorm\00", align 1
@.str.242 = private unnamed_addr constant [7 x i8] c"dlogis\00", align 1
@.str.243 = private unnamed_addr constant [7 x i8] c"plogis\00", align 1
@.str.244 = private unnamed_addr constant [7 x i8] c"qlogis\00", align 1
@.str.245 = private unnamed_addr constant [8 x i8] c"dnbinom\00", align 1
@.str.246 = private unnamed_addr constant [8 x i8] c"pnbinom\00", align 1
@.str.247 = private unnamed_addr constant [8 x i8] c"qnbinom\00", align 1
@.str.248 = private unnamed_addr constant [6 x i8] c"dnorm\00", align 1
@.str.249 = private unnamed_addr constant [6 x i8] c"pnorm\00", align 1
@.str.250 = private unnamed_addr constant [6 x i8] c"qnorm\00", align 1
@.str.251 = private unnamed_addr constant [6 x i8] c"dunif\00", align 1
@.str.252 = private unnamed_addr constant [6 x i8] c"punif\00", align 1
@.str.253 = private unnamed_addr constant [6 x i8] c"qunif\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"dweibull\00", align 1
@.str.255 = private unnamed_addr constant [9 x i8] c"pweibull\00", align 1
@.str.256 = private unnamed_addr constant [9 x i8] c"qweibull\00", align 1
@.str.257 = private unnamed_addr constant [8 x i8] c"dnchisq\00", align 1
@.str.258 = private unnamed_addr constant [8 x i8] c"pnchisq\00", align 1
@.str.259 = private unnamed_addr constant [8 x i8] c"qnchisq\00", align 1
@.str.260 = private unnamed_addr constant [4 x i8] c"dnt\00", align 1
@.str.261 = private unnamed_addr constant [4 x i8] c"pnt\00", align 1
@.str.262 = private unnamed_addr constant [4 x i8] c"qnt\00", align 1
@.str.263 = private unnamed_addr constant [8 x i8] c"dwilcox\00", align 1
@.str.264 = private unnamed_addr constant [8 x i8] c"pwilcox\00", align 1
@.str.265 = private unnamed_addr constant [8 x i8] c"qwilcox\00", align 1
@.str.266 = private unnamed_addr constant [8 x i8] c"besselI\00", align 1
@.str.267 = private unnamed_addr constant [8 x i8] c"besselK\00", align 1
@.str.268 = private unnamed_addr constant [11 x i8] c"dnbinom_mu\00", align 1
@.str.269 = private unnamed_addr constant [11 x i8] c"pnbinom_mu\00", align 1
@.str.270 = private unnamed_addr constant [11 x i8] c"qnbinom_mu\00", align 1
@.str.271 = private unnamed_addr constant [7 x i8] c"dhyper\00", align 1
@.str.272 = private unnamed_addr constant [7 x i8] c"phyper\00", align 1
@.str.273 = private unnamed_addr constant [7 x i8] c"qhyper\00", align 1
@.str.274 = private unnamed_addr constant [7 x i8] c"dnbeta\00", align 1
@.str.275 = private unnamed_addr constant [7 x i8] c"pnbeta\00", align 1
@.str.276 = private unnamed_addr constant [7 x i8] c"qnbeta\00", align 1
@.str.277 = private unnamed_addr constant [4 x i8] c"dnf\00", align 1
@.str.278 = private unnamed_addr constant [4 x i8] c"pnf\00", align 1
@.str.279 = private unnamed_addr constant [4 x i8] c"qnf\00", align 1
@.str.280 = private unnamed_addr constant [7 x i8] c"dtukey\00", align 1
@.str.281 = private unnamed_addr constant [7 x i8] c"ptukey\00", align 1
@.str.282 = private unnamed_addr constant [7 x i8] c"qtukey\00", align 1
@.str.283 = private unnamed_addr constant [7 x i8] c"rchisq\00", align 1
@.str.284 = private unnamed_addr constant [5 x i8] c"rexp\00", align 1
@.str.285 = private unnamed_addr constant [6 x i8] c"rgeom\00", align 1
@.str.286 = private unnamed_addr constant [6 x i8] c"rpois\00", align 1
@.str.287 = private unnamed_addr constant [3 x i8] c"rt\00", align 1
@.str.288 = private unnamed_addr constant [10 x i8] c"rsignrank\00", align 1
@.str.289 = private unnamed_addr constant [6 x i8] c"rbeta\00", align 1
@.str.290 = private unnamed_addr constant [7 x i8] c"rbinom\00", align 1
@.str.291 = private unnamed_addr constant [8 x i8] c"rcauchy\00", align 1
@.str.292 = private unnamed_addr constant [3 x i8] c"rf\00", align 1
@.str.293 = private unnamed_addr constant [7 x i8] c"rgamma\00", align 1
@.str.294 = private unnamed_addr constant [7 x i8] c"rlnorm\00", align 1
@.str.295 = private unnamed_addr constant [7 x i8] c"rlogis\00", align 1
@.str.296 = private unnamed_addr constant [8 x i8] c"rnbinom\00", align 1
@.str.297 = private unnamed_addr constant [11 x i8] c"rnbinom_mu\00", align 1
@.str.298 = private unnamed_addr constant [8 x i8] c"rnchisq\00", align 1
@.str.299 = private unnamed_addr constant [6 x i8] c"rnorm\00", align 1
@.str.300 = private unnamed_addr constant [6 x i8] c"runif\00", align 1
@.str.301 = private unnamed_addr constant [9 x i8] c"rweibull\00", align 1
@.str.302 = private unnamed_addr constant [8 x i8] c"rwilcox\00", align 1
@.str.303 = private unnamed_addr constant [7 x i8] c"rhyper\00", align 1
@.str.304 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.305 = private unnamed_addr constant [8 x i8] c"sample2\00", align 1
@.str.306 = private unnamed_addr constant [8 x i8] c"RNGkind\00", align 1
@.str.307 = private unnamed_addr constant [9 x i8] c"set.seed\00", align 1
@.str.308 = private unnamed_addr constant [4 x i8] c"sum\00", align 1
@.str.309 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.310 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.311 = private unnamed_addr constant [5 x i8] c"prod\00", align 1
@.str.312 = private unnamed_addr constant [5 x i8] c"mean\00", align 1
@.str.313 = private unnamed_addr constant [6 x i8] c"range\00", align 1
@.str.314 = private unnamed_addr constant [7 x i8] c"cumsum\00", align 1
@.str.315 = private unnamed_addr constant [8 x i8] c"cumprod\00", align 1
@.str.316 = private unnamed_addr constant [7 x i8] c"cummax\00", align 1
@.str.317 = private unnamed_addr constant [7 x i8] c"cummin\00", align 1
@.str.318 = private unnamed_addr constant [13 x i8] c"as.character\00", align 1
@.str.319 = private unnamed_addr constant [11 x i8] c"as.integer\00", align 1
@.str.320 = private unnamed_addr constant [10 x i8] c"as.double\00", align 1
@.str.321 = private unnamed_addr constant [11 x i8] c"as.numeric\00", align 1
@.str.322 = private unnamed_addr constant [11 x i8] c"as.complex\00", align 1
@.str.323 = private unnamed_addr constant [11 x i8] c"as.logical\00", align 1
@.str.324 = private unnamed_addr constant [7 x i8] c"as.raw\00", align 1
@.str.325 = private unnamed_addr constant [8 x i8] c"as.call\00", align 1
@.str.326 = private unnamed_addr constant [15 x i8] c"as.environment\00", align 1
@.str.327 = private unnamed_addr constant [15 x i8] c"storage.mode<-\00", align 1
@.str.328 = private unnamed_addr constant [18 x i8] c"asCharacterFactor\00", align 1
@.str.329 = private unnamed_addr constant [10 x i8] c"as.vector\00", align 1
@.str.330 = private unnamed_addr constant [6 x i8] c"paste\00", align 1
@.str.331 = private unnamed_addr constant [7 x i8] c"paste0\00", align 1
@.str.332 = private unnamed_addr constant [10 x i8] c"file.path\00", align 1
@.str.333 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.334 = private unnamed_addr constant [12 x i8] c"format.info\00", align 1
@.str.335 = private unnamed_addr constant [4 x i8] c"cat\00", align 1
@.str.336 = private unnamed_addr constant [8 x i8] c"do.call\00", align 1
@.str.337 = private unnamed_addr constant [9 x i8] c"str2lang\00", align 1
@.str.338 = private unnamed_addr constant [15 x i8] c"str2expression\00", align 1
@.str.339 = private unnamed_addr constant [6 x i8] c"nchar\00", align 1
@.str.340 = private unnamed_addr constant [7 x i8] c"nzchar\00", align 1
@.str.341 = private unnamed_addr constant [7 x i8] c"substr\00", align 1
@.str.342 = private unnamed_addr constant [11 x i8] c"startsWith\00", align 1
@.str.343 = private unnamed_addr constant [9 x i8] c"endsWith\00", align 1
@.str.344 = private unnamed_addr constant [9 x i8] c"substr<-\00", align 1
@.str.345 = private unnamed_addr constant [9 x i8] c"strsplit\00", align 1
@.str.346 = private unnamed_addr constant [11 x i8] c"abbreviate\00", align 1
@.str.347 = private unnamed_addr constant [11 x i8] c"make.names\00", align 1
@.str.348 = private unnamed_addr constant [12 x i8] c"pcre_config\00", align 1
@.str.349 = private unnamed_addr constant [5 x i8] c"grep\00", align 1
@.str.350 = private unnamed_addr constant [6 x i8] c"grepl\00", align 1
@.str.351 = private unnamed_addr constant [8 x i8] c"grepRaw\00", align 1
@.str.352 = private unnamed_addr constant [4 x i8] c"sub\00", align 1
@.str.353 = private unnamed_addr constant [5 x i8] c"gsub\00", align 1
@.str.354 = private unnamed_addr constant [8 x i8] c"regexpr\00", align 1
@.str.355 = private unnamed_addr constant [9 x i8] c"gregexpr\00", align 1
@.str.356 = private unnamed_addr constant [8 x i8] c"regexec\00", align 1
@.str.357 = private unnamed_addr constant [6 x i8] c"agrep\00", align 1
@.str.358 = private unnamed_addr constant [7 x i8] c"agrepl\00", align 1
@.str.359 = private unnamed_addr constant [6 x i8] c"adist\00", align 1
@.str.360 = private unnamed_addr constant [9 x i8] c"aregexec\00", align 1
@.str.361 = private unnamed_addr constant [8 x i8] c"tolower\00", align 1
@.str.362 = private unnamed_addr constant [8 x i8] c"toupper\00", align 1
@.str.363 = private unnamed_addr constant [7 x i8] c"chartr\00", align 1
@.str.364 = private unnamed_addr constant [8 x i8] c"sprintf\00", align 1
@.str.365 = private unnamed_addr constant [12 x i8] c"make.unique\00", align 1
@.str.366 = private unnamed_addr constant [10 x i8] c"charToRaw\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"rawToChar\00", align 1
@.str.368 = private unnamed_addr constant [9 x i8] c"rawShift\00", align 1
@.str.369 = private unnamed_addr constant [10 x i8] c"intToBits\00", align 1
@.str.370 = private unnamed_addr constant [10 x i8] c"numToBits\00", align 1
@.str.371 = private unnamed_addr constant [10 x i8] c"numToInts\00", align 1
@.str.372 = private unnamed_addr constant [10 x i8] c"rawToBits\00", align 1
@.str.373 = private unnamed_addr constant [9 x i8] c"packBits\00", align 1
@.str.374 = private unnamed_addr constant [10 x i8] c"utf8ToInt\00", align 1
@.str.375 = private unnamed_addr constant [10 x i8] c"intToUtf8\00", align 1
@.str.376 = private unnamed_addr constant [10 x i8] c"validUTF8\00", align 1
@.str.377 = private unnamed_addr constant [9 x i8] c"validEnc\00", align 1
@.str.378 = private unnamed_addr constant [13 x i8] c"encodeString\00", align 1
@.str.379 = private unnamed_addr constant [6 x i8] c"iconv\00", align 1
@.str.380 = private unnamed_addr constant [8 x i8] c"strtrim\00", align 1
@.str.381 = private unnamed_addr constant [7 x i8] c"strtoi\00", align 1
@.str.382 = private unnamed_addr constant [7 x i8] c"strrep\00", align 1
@.str.383 = private unnamed_addr constant [8 x i8] c"is.null\00", align 1
@.str.384 = private unnamed_addr constant [11 x i8] c"is.logical\00", align 1
@.str.385 = private unnamed_addr constant [11 x i8] c"is.integer\00", align 1
@.str.386 = private unnamed_addr constant [10 x i8] c"is.double\00", align 1
@.str.387 = private unnamed_addr constant [11 x i8] c"is.complex\00", align 1
@.str.388 = private unnamed_addr constant [13 x i8] c"is.character\00", align 1
@.str.389 = private unnamed_addr constant [10 x i8] c"is.symbol\00", align 1
@.str.390 = private unnamed_addr constant [8 x i8] c"is.name\00", align 1
@.str.391 = private unnamed_addr constant [15 x i8] c"is.environment\00", align 1
@.str.392 = private unnamed_addr constant [8 x i8] c"is.list\00", align 1
@.str.393 = private unnamed_addr constant [12 x i8] c"is.pairlist\00", align 1
@.str.394 = private unnamed_addr constant [14 x i8] c"is.expression\00", align 1
@.str.395 = private unnamed_addr constant [7 x i8] c"is.raw\00", align 1
@.str.396 = private unnamed_addr constant [10 x i8] c"is.object\00", align 1
@.str.397 = private unnamed_addr constant [5 x i8] c"isS4\00", align 1
@.str.398 = private unnamed_addr constant [11 x i8] c"is.numeric\00", align 1
@.str.399 = private unnamed_addr constant [10 x i8] c"is.matrix\00", align 1
@.str.400 = private unnamed_addr constant [9 x i8] c"is.array\00", align 1
@.str.401 = private unnamed_addr constant [10 x i8] c"is.atomic\00", align 1
@.str.402 = private unnamed_addr constant [13 x i8] c"is.recursive\00", align 1
@.str.403 = private unnamed_addr constant [8 x i8] c"is.call\00", align 1
@.str.404 = private unnamed_addr constant [12 x i8] c"is.language\00", align 1
@.str.405 = private unnamed_addr constant [12 x i8] c"is.function\00", align 1
@.str.406 = private unnamed_addr constant [10 x i8] c"is.single\00", align 1
@.str.407 = private unnamed_addr constant [6 x i8] c"is.na\00", align 1
@.str.408 = private unnamed_addr constant [7 x i8] c"is.nan\00", align 1
@.str.409 = private unnamed_addr constant [10 x i8] c"is.finite\00", align 1
@.str.410 = private unnamed_addr constant [12 x i8] c"is.infinite\00", align 1
@.str.411 = private unnamed_addr constant [10 x i8] c"is.vector\00", align 1
@.str.412 = private unnamed_addr constant [10 x i8] c"proc.time\00", align 1
@.str.413 = private unnamed_addr constant [8 x i8] c"gc.time\00", align 1
@.str.414 = private unnamed_addr constant [12 x i8] c"withVisible\00", align 1
@.str.415 = private unnamed_addr constant [11 x i8] c"expression\00", align 1
@.str.416 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.417 = private unnamed_addr constant [10 x i8] c"invisible\00", align 1
@.str.418 = private unnamed_addr constant [4 x i8] c"rep\00", align 1
@.str.419 = private unnamed_addr constant [8 x i8] c"rep.int\00", align 1
@.str.420 = private unnamed_addr constant [8 x i8] c"rep_len\00", align 1
@.str.421 = private unnamed_addr constant [8 x i8] c"seq.int\00", align 1
@.str.422 = private unnamed_addr constant [8 x i8] c"seq_len\00", align 1
@.str.423 = private unnamed_addr constant [10 x i8] c"seq_along\00", align 1
@.str.424 = private unnamed_addr constant [5 x i8] c"list\00", align 1
@.str.425 = private unnamed_addr constant [6 x i8] c"xtfrm\00", align 1
@.str.426 = private unnamed_addr constant [11 x i8] c"enc2native\00", align 1
@.str.427 = private unnamed_addr constant [9 x i8] c"enc2utf8\00", align 1
@.str.428 = private unnamed_addr constant [9 x i8] c"emptyenv\00", align 1
@.str.429 = private unnamed_addr constant [8 x i8] c"baseenv\00", align 1
@.str.430 = private unnamed_addr constant [10 x i8] c"globalenv\00", align 1
@.str.431 = private unnamed_addr constant [14 x i8] c"environment<-\00", align 1
@.str.432 = private unnamed_addr constant [11 x i8] c"pos.to.env\00", align 1
@.str.433 = private unnamed_addr constant [3 x i8] c".C\00", align 1
@.str.434 = private unnamed_addr constant [9 x i8] c".Fortran\00", align 1
@.str.435 = private unnamed_addr constant [10 x i8] c".External\00", align 1
@.str.436 = private unnamed_addr constant [11 x i8] c".External2\00", align 1
@.str.437 = private unnamed_addr constant [6 x i8] c".Call\00", align 1
@.str.438 = private unnamed_addr constant [19 x i8] c".External.graphics\00", align 1
@.str.439 = private unnamed_addr constant [15 x i8] c".Call.graphics\00", align 1
@.str.440 = private unnamed_addr constant [7 x i8] c"eapply\00", align 1
@.str.441 = private unnamed_addr constant [7 x i8] c"lapply\00", align 1
@.str.442 = private unnamed_addr constant [7 x i8] c"vapply\00", align 1
@.str.443 = private unnamed_addr constant [7 x i8] c"mapply\00", align 1
@.str.444 = private unnamed_addr constant [8 x i8] c"Version\00", align 1
@.str.445 = private unnamed_addr constant [8 x i8] c"machine\00", align 1
@.str.446 = private unnamed_addr constant [12 x i8] c"commandArgs\00", align 1
@.str.447 = private unnamed_addr constant [12 x i8] c"internalsID\00", align 1
@.str.448 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@.str.449 = private unnamed_addr constant [6 x i8] c"parse\00", align 1
@.str.450 = private unnamed_addr constant [5 x i8] c"save\00", align 1
@.str.451 = private unnamed_addr constant [11 x i8] c"saveToConn\00", align 1
@.str.452 = private unnamed_addr constant [5 x i8] c"load\00", align 1
@.str.453 = private unnamed_addr constant [14 x i8] c"loadFromConn2\00", align 1
@.str.454 = private unnamed_addr constant [18 x i8] c"loadInfoFromConn2\00", align 1
@.str.455 = private unnamed_addr constant [16 x i8] c"serializeToConn\00", align 1
@.str.456 = private unnamed_addr constant [20 x i8] c"unserializeFromConn\00", align 1
@.str.457 = private unnamed_addr constant [22 x i8] c"serializeInfoFromConn\00", align 1
@.str.458 = private unnamed_addr constant [8 x i8] c"deparse\00", align 1
@.str.459 = private unnamed_addr constant [5 x i8] c"dput\00", align 1
@.str.460 = private unnamed_addr constant [5 x i8] c"dump\00", align 1
@.str.461 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str.462 = private unnamed_addr constant [9 x i8] c"readline\00", align 1
@.str.463 = private unnamed_addr constant [14 x i8] c"print.default\00", align 1
@.str.464 = private unnamed_addr constant [9 x i8] c"prmatrix\00", align 1
@.str.465 = private unnamed_addr constant [3 x i8] c"gc\00", align 1
@.str.466 = private unnamed_addr constant [7 x i8] c"gcinfo\00", align 1
@.str.467 = private unnamed_addr constant [10 x i8] c"gctorture\00", align 1
@.str.468 = private unnamed_addr constant [11 x i8] c"gctorture2\00", align 1
@.str.469 = private unnamed_addr constant [15 x i8] c"memory.profile\00", align 1
@.str.470 = private unnamed_addr constant [13 x i8] c"mem.maxVSize\00", align 1
@.str.471 = private unnamed_addr constant [13 x i8] c"mem.maxNSize\00", align 1
@.str.472 = private unnamed_addr constant [6 x i8] c"split\00", align 1
@.str.473 = private unnamed_addr constant [10 x i8] c"is.loaded\00", align 1
@.str.474 = private unnamed_addr constant [15 x i8] c"recordGraphics\00", align 1
@.str.475 = private unnamed_addr constant [9 x i8] c"dyn.load\00", align 1
@.str.476 = private unnamed_addr constant [11 x i8] c"dyn.unload\00", align 1
@.str.477 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.478 = private unnamed_addr constant [7 x i8] c"typeof\00", align 1
@.str.479 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str.480 = private unnamed_addr constant [12 x i8] c"returnValue\00", align 1
@.str.481 = private unnamed_addr constant [11 x i8] c"sys.parent\00", align 1
@.str.482 = private unnamed_addr constant [9 x i8] c"sys.call\00", align 1
@.str.483 = private unnamed_addr constant [10 x i8] c"sys.frame\00", align 1
@.str.484 = private unnamed_addr constant [11 x i8] c"sys.nframe\00", align 1
@.str.485 = private unnamed_addr constant [10 x i8] c"sys.calls\00", align 1
@.str.486 = private unnamed_addr constant [11 x i8] c"sys.frames\00", align 1
@.str.487 = private unnamed_addr constant [12 x i8] c"sys.on.exit\00", align 1
@.str.488 = private unnamed_addr constant [12 x i8] c"sys.parents\00", align 1
@.str.489 = private unnamed_addr constant [13 x i8] c"sys.function\00", align 1
@.str.490 = private unnamed_addr constant [10 x i8] c"traceback\00", align 1
@.str.491 = private unnamed_addr constant [12 x i8] c"browserText\00", align 1
@.str.492 = private unnamed_addr constant [17 x i8] c"browserCondition\00", align 1
@.str.493 = private unnamed_addr constant [16 x i8] c"browserSetDebug\00", align 1
@.str.494 = private unnamed_addr constant [13 x i8] c"parent.frame\00", align 1
@.str.495 = private unnamed_addr constant [5 x i8] c"sort\00", align 1
@.str.496 = private unnamed_addr constant [12 x i8] c"is.unsorted\00", align 1
@.str.497 = private unnamed_addr constant [13 x i8] c"sorted_fpass\00", align 1
@.str.498 = private unnamed_addr constant [6 x i8] c"psort\00", align 1
@.str.499 = private unnamed_addr constant [6 x i8] c"qsort\00", align 1
@.str.500 = private unnamed_addr constant [10 x i8] c"radixsort\00", align 1
@.str.501 = private unnamed_addr constant [6 x i8] c"order\00", align 1
@.str.502 = private unnamed_addr constant [5 x i8] c"rank\00", align 1
@.str.503 = private unnamed_addr constant [5 x i8] c"scan\00", align 1
@.str.504 = private unnamed_addr constant [10 x i8] c"t.default\00", align 1
@.str.505 = private unnamed_addr constant [6 x i8] c"aperm\00", align 1
@.str.506 = private unnamed_addr constant [9 x i8] c"builtins\00", align 1
@.str.507 = private unnamed_addr constant [5 x i8] c"args\00", align 1
@.str.508 = private unnamed_addr constant [8 x i8] c"formals\00", align 1
@.str.509 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.510 = private unnamed_addr constant [9 x i8] c"bodyCode\00", align 1
@.str.511 = private unnamed_addr constant [12 x i8] c"environment\00", align 1
@.str.512 = private unnamed_addr constant [16 x i8] c"environmentName\00", align 1
@.str.513 = private unnamed_addr constant [9 x i8] c"env2list\00", align 1
@.str.514 = private unnamed_addr constant [14 x i8] c"reg.finalizer\00", align 1
@.str.515 = private unnamed_addr constant [8 x i8] c"options\00", align 1
@.str.516 = private unnamed_addr constant [10 x i8] c"getOption\00", align 1
@.str.517 = private unnamed_addr constant [5 x i8] c"sink\00", align 1
@.str.518 = private unnamed_addr constant [12 x i8] c"sink.number\00", align 1
@.str.519 = private unnamed_addr constant [7 x i8] c"rapply\00", align 1
@.str.520 = private unnamed_addr constant [13 x i8] c"islistfactor\00", align 1
@.str.521 = private unnamed_addr constant [8 x i8] c"colSums\00", align 1
@.str.522 = private unnamed_addr constant [9 x i8] c"colMeans\00", align 1
@.str.523 = private unnamed_addr constant [8 x i8] c"rowSums\00", align 1
@.str.524 = private unnamed_addr constant [9 x i8] c"rowMeans\00", align 1
@.str.525 = private unnamed_addr constant [9 x i8] c"tracemem\00", align 1
@.str.526 = private unnamed_addr constant [11 x i8] c"retracemem\00", align 1
@.str.527 = private unnamed_addr constant [11 x i8] c"untracemem\00", align 1
@.str.528 = private unnamed_addr constant [8 x i8] c"inspect\00", align 1
@.str.529 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.530 = private unnamed_addr constant [6 x i8] c"named\00", align 1
@.str.531 = private unnamed_addr constant [7 x i8] c"refcnt\00", align 1
@.str.532 = private unnamed_addr constant [6 x i8] c"merge\00", align 1
@.str.533 = private unnamed_addr constant [13 x i8] c"capabilities\00", align 1
@.str.534 = private unnamed_addr constant [16 x i8] c"capabilitiesX11\00", align 1
@.str.535 = private unnamed_addr constant [8 x i8] c"new.env\00", align 1
@.str.536 = private unnamed_addr constant [11 x i8] c"parent.env\00", align 1
@.str.537 = private unnamed_addr constant [13 x i8] c"parent.env<-\00", align 1
@.str.538 = private unnamed_addr constant [7 x i8] c"topenv\00", align 1
@.str.539 = private unnamed_addr constant [10 x i8] c"l10n_info\00", align 1
@.str.540 = private unnamed_addr constant [12 x i8] c"Cstack_info\00", align 1
@.str.541 = private unnamed_addr constant [10 x i8] c"mmap_file\00", align 1
@.str.542 = private unnamed_addr constant [12 x i8] c"munmap_file\00", align 1
@.str.543 = private unnamed_addr constant [10 x i8] c"wrap_meta\00", align 1
@.str.544 = private unnamed_addr constant [8 x i8] c"tryWrap\00", align 1
@.str.545 = private unnamed_addr constant [13 x i8] c"altrep_class\00", align 1
@.str.546 = private unnamed_addr constant [10 x i8] c"file.show\00", align 1
@.str.547 = private unnamed_addr constant [12 x i8] c"file.create\00", align 1
@.str.548 = private unnamed_addr constant [12 x i8] c"file.remove\00", align 1
@.str.549 = private unnamed_addr constant [12 x i8] c"file.rename\00", align 1
@.str.550 = private unnamed_addr constant [12 x i8] c"file.append\00", align 1
@.str.551 = private unnamed_addr constant [13 x i8] c"file.symlink\00", align 1
@.str.552 = private unnamed_addr constant [10 x i8] c"file.link\00", align 1
@.str.553 = private unnamed_addr constant [10 x i8] c"file.copy\00", align 1
@.str.554 = private unnamed_addr constant [11 x i8] c"list.files\00", align 1
@.str.555 = private unnamed_addr constant [10 x i8] c"list.dirs\00", align 1
@.str.556 = private unnamed_addr constant [12 x i8] c"file.exists\00", align 1
@.str.557 = private unnamed_addr constant [12 x i8] c"file.choose\00", align 1
@.str.558 = private unnamed_addr constant [10 x i8] c"file.info\00", align 1
@.str.559 = private unnamed_addr constant [12 x i8] c"file.access\00", align 1
@.str.560 = private unnamed_addr constant [11 x i8] c"dir.exists\00", align 1
@.str.561 = private unnamed_addr constant [11 x i8] c"dir.create\00", align 1
@.str.562 = private unnamed_addr constant [9 x i8] c"tempfile\00", align 1
@.str.563 = private unnamed_addr constant [8 x i8] c"tempdir\00", align 1
@.str.564 = private unnamed_addr constant [7 x i8] c"R.home\00", align 1
@.str.565 = private unnamed_addr constant [5 x i8] c"date\00", align 1
@.str.566 = private unnamed_addr constant [11 x i8] c"Sys.getenv\00", align 1
@.str.567 = private unnamed_addr constant [11 x i8] c"Sys.setenv\00", align 1
@.str.568 = private unnamed_addr constant [13 x i8] c"Sys.unsetenv\00", align 1
@.str.569 = private unnamed_addr constant [6 x i8] c"getwd\00", align 1
@.str.570 = private unnamed_addr constant [6 x i8] c"setwd\00", align 1
@.str.571 = private unnamed_addr constant [9 x i8] c"basename\00", align 1
@.str.572 = private unnamed_addr constant [8 x i8] c"dirname\00", align 1
@.str.573 = private unnamed_addr constant [10 x i8] c"Sys.chmod\00", align 1
@.str.574 = private unnamed_addr constant [10 x i8] c"Sys.umask\00", align 1
@.str.575 = private unnamed_addr constant [13 x i8] c"Sys.readlink\00", align 1
@.str.576 = private unnamed_addr constant [9 x i8] c"Sys.info\00", align 1
@.str.577 = private unnamed_addr constant [10 x i8] c"Sys.sleep\00", align 1
@.str.578 = private unnamed_addr constant [14 x i8] c"Sys.getlocale\00", align 1
@.str.579 = private unnamed_addr constant [14 x i8] c"Sys.setlocale\00", align 1
@.str.580 = private unnamed_addr constant [15 x i8] c"Sys.localeconv\00", align 1
@.str.581 = private unnamed_addr constant [12 x i8] c"path.expand\00", align 1
@.str.582 = private unnamed_addr constant [11 x i8] c"Sys.getpid\00", align 1
@.str.583 = private unnamed_addr constant [14 x i8] c"normalizePath\00", align 1
@.str.584 = private unnamed_addr constant [9 x i8] c"Sys.glob\00", align 1
@.str.585 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@.str.586 = private unnamed_addr constant [9 x i8] c"polyroot\00", align 1
@.str.587 = private unnamed_addr constant [9 x i8] c"inherits\00", align 1
@.str.588 = private unnamed_addr constant [10 x i8] c"UseMethod\00", align 1
@.str.589 = private unnamed_addr constant [11 x i8] c"NextMethod\00", align 1
@.str.590 = private unnamed_addr constant [16 x i8] c"standardGeneric\00", align 1
@.str.591 = private unnamed_addr constant [9 x i8] c"Sys.time\00", align 1
@.str.592 = private unnamed_addr constant [11 x i8] c"as.POSIXct\00", align 1
@.str.593 = private unnamed_addr constant [11 x i8] c"as.POSIXlt\00", align 1
@.str.594 = private unnamed_addr constant [15 x i8] c"format.POSIXlt\00", align 1
@.str.595 = private unnamed_addr constant [9 x i8] c"strptime\00", align 1
@.str.596 = private unnamed_addr constant [13 x i8] c"Date2POSIXlt\00", align 1
@.str.597 = private unnamed_addr constant [13 x i8] c"POSIXlt2Date\00", align 1
@.str.598 = private unnamed_addr constant [15 x i8] c"balancePOSIXlt\00", align 1
@.str.599 = private unnamed_addr constant [15 x i8] c"unCfillPOSIXlt\00", align 1
@.str.600 = private unnamed_addr constant [22 x i8] c"compareNumericVersion\00", align 1
@.str.601 = private unnamed_addr constant [7 x i8] c"mkCode\00", align 1
@.str.602 = private unnamed_addr constant [8 x i8] c"bcClose\00", align 1
@.str.603 = private unnamed_addr constant [20 x i8] c"is.builtin.internal\00", align 1
@.str.604 = private unnamed_addr constant [12 x i8] c"disassemble\00", align 1
@.str.605 = private unnamed_addr constant [10 x i8] c"bcVersion\00", align 1
@.str.606 = private unnamed_addr constant [15 x i8] c"load.from.file\00", align 1
@.str.607 = private unnamed_addr constant [13 x i8] c"save.to.file\00", align 1
@.str.608 = private unnamed_addr constant [10 x i8] c"growconst\00", align 1
@.str.609 = private unnamed_addr constant [9 x i8] c"putconst\00", align 1
@.str.610 = private unnamed_addr constant [9 x i8] c"getconst\00", align 1
@.str.611 = private unnamed_addr constant [10 x i8] c"enableJIT\00", align 1
@.str.612 = private unnamed_addr constant [12 x i8] c"compilePKGS\00", align 1
@.str.613 = private unnamed_addr constant [18 x i8] c"setNumMathThreads\00", align 1
@.str.614 = private unnamed_addr constant [21 x i8] c"setMaxNumMathThreads\00", align 1
@.str.615 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.616 = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@.str.617 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.618 = private unnamed_addr constant [7 x i8] c"isatty\00", align 1
@.str.619 = private unnamed_addr constant [10 x i8] c"readLines\00", align 1
@.str.620 = private unnamed_addr constant [11 x i8] c"writeLines\00", align 1
@.str.621 = private unnamed_addr constant [8 x i8] c"readBin\00", align 1
@.str.622 = private unnamed_addr constant [9 x i8] c"writeBin\00", align 1
@.str.623 = private unnamed_addr constant [9 x i8] c"readChar\00", align 1
@.str.624 = private unnamed_addr constant [10 x i8] c"writeChar\00", align 1
@.str.625 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.626 = private unnamed_addr constant [7 x i8] c"isOpen\00", align 1
@.str.627 = private unnamed_addr constant [13 x i8] c"isIncomplete\00", align 1
@.str.628 = private unnamed_addr constant [11 x i8] c"isSeekable\00", align 1
@.str.629 = private unnamed_addr constant [6 x i8] c"close\00", align 1
@.str.630 = private unnamed_addr constant [6 x i8] c"flush\00", align 1
@.str.631 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.632 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.633 = private unnamed_addr constant [5 x i8] c"pipe\00", align 1
@.str.634 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.635 = private unnamed_addr constant [7 x i8] c"gzfile\00", align 1
@.str.636 = private unnamed_addr constant [7 x i8] c"bzfile\00", align 1
@.str.637 = private unnamed_addr constant [7 x i8] c"xzfile\00", align 1
@.str.638 = private unnamed_addr constant [4 x i8] c"unz\00", align 1
@.str.639 = private unnamed_addr constant [5 x i8] c"seek\00", align 1
@.str.640 = private unnamed_addr constant [9 x i8] c"truncate\00", align 1
@.str.641 = private unnamed_addr constant [9 x i8] c"pushBack\00", align 1
@.str.642 = private unnamed_addr constant [14 x i8] c"clearPushBack\00", align 1
@.str.643 = private unnamed_addr constant [15 x i8] c"pushBackLength\00", align 1
@.str.644 = private unnamed_addr constant [14 x i8] c"rawConnection\00", align 1
@.str.645 = private unnamed_addr constant [19 x i8] c"rawConnectionValue\00", align 1
@.str.646 = private unnamed_addr constant [15 x i8] c"textConnection\00", align 1
@.str.647 = private unnamed_addr constant [20 x i8] c"textConnectionValue\00", align 1
@.str.648 = private unnamed_addr constant [17 x i8] c"socketConnection\00", align 1
@.str.649 = private unnamed_addr constant [13 x i8] c"socketAccept\00", align 1
@.str.650 = private unnamed_addr constant [11 x i8] c"sockSelect\00", align 1
@.str.651 = private unnamed_addr constant [13 x i8] c"serverSocket\00", align 1
@.str.652 = private unnamed_addr constant [14 x i8] c"socketTimeout\00", align 1
@.str.653 = private unnamed_addr constant [14 x i8] c"getConnection\00", align 1
@.str.654 = private unnamed_addr constant [18 x i8] c"getAllConnections\00", align 1
@.str.655 = private unnamed_addr constant [19 x i8] c"summary.connection\00", align 1
@.str.656 = private unnamed_addr constant [6 x i8] c"gzcon\00", align 1
@.str.657 = private unnamed_addr constant [12 x i8] c"memCompress\00", align 1
@.str.658 = private unnamed_addr constant [14 x i8] c"memDecompress\00", align 1
@.str.659 = private unnamed_addr constant [8 x i8] c"readDCF\00", align 1
@.str.660 = private unnamed_addr constant [16 x i8] c"lockEnvironment\00", align 1
@.str.661 = private unnamed_addr constant [20 x i8] c"environmentIsLocked\00", align 1
@.str.662 = private unnamed_addr constant [12 x i8] c"lockBinding\00", align 1
@.str.663 = private unnamed_addr constant [14 x i8] c"unlockBinding\00", align 1
@.str.664 = private unnamed_addr constant [16 x i8] c"bindingIsLocked\00", align 1
@.str.665 = private unnamed_addr constant [18 x i8] c"makeActiveBinding\00", align 1
@.str.666 = private unnamed_addr constant [16 x i8] c"bindingIsActive\00", align 1
@.str.667 = private unnamed_addr constant [22 x i8] c"activeBindingFunction\00", align 1
@.str.668 = private unnamed_addr constant [10 x i8] c"mkUnbound\00", align 1
@.str.669 = private unnamed_addr constant [15 x i8] c"isNamespaceEnv\00", align 1
@.str.670 = private unnamed_addr constant [18 x i8] c"registerNamespace\00", align 1
@.str.671 = private unnamed_addr constant [20 x i8] c"unregisterNamespace\00", align 1
@.str.672 = private unnamed_addr constant [23 x i8] c"getRegisteredNamespace\00", align 1
@.str.673 = private unnamed_addr constant [22 x i8] c"isRegisteredNamespace\00", align 1
@.str.674 = private unnamed_addr constant [21 x i8] c"getNamespaceRegistry\00", align 1
@.str.675 = private unnamed_addr constant [14 x i8] c"importIntoEnv\00", align 1
@.str.676 = private unnamed_addr constant [12 x i8] c"env.profile\00", align 1
@.str.677 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.678 = private unnamed_addr constant [12 x i8] c"setEncoding\00", align 1
@.str.679 = private unnamed_addr constant [13 x i8] c"setTimeLimit\00", align 1
@.str.680 = private unnamed_addr constant [20 x i8] c"setSessionTimeLimit\00", align 1
@.str.681 = private unnamed_addr constant [14 x i8] c"icuSetCollate\00", align 1
@.str.682 = private unnamed_addr constant [14 x i8] c"icuGetCollate\00", align 1
@.str.683 = private unnamed_addr constant [13 x i8] c"readRenviron\00", align 1
@.str.684 = private unnamed_addr constant [14 x i8] c"shortRowNames\00", align 1
@.str.685 = private unnamed_addr constant [11 x i8] c"copyDFattr\00", align 1
@.str.686 = private unnamed_addr constant [22 x i8] c"getRegisteredRoutines\00", align 1
@.str.687 = private unnamed_addr constant [14 x i8] c"getLoadedDLLs\00", align 1
@.str.688 = private unnamed_addr constant [14 x i8] c"getSymbolInfo\00", align 1
@.str.689 = private unnamed_addr constant [21 x i8] c".isMethodsDispatchOn\00", align 1
@.str.690 = private unnamed_addr constant [16 x i8] c"lazyLoadDBfetch\00", align 1
@.str.691 = private unnamed_addr constant [16 x i8] c"lazyLoadDBflush\00", align 1
@.str.692 = private unnamed_addr constant [17 x i8] c"getVarsFromFrame\00", align 1
@.str.693 = private unnamed_addr constant [22 x i8] c"lazyLoadDBinsertValue\00", align 1
@.str.694 = private unnamed_addr constant [8 x i8] c"bincode\00", align 1
@.str.695 = private unnamed_addr constant [9 x i8] c"tabulate\00", align 1
@.str.696 = private unnamed_addr constant [13 x i8] c"findInterval\00", align 1
@.str.697 = private unnamed_addr constant [7 x i8] c"pretty\00", align 1
@.str.698 = private unnamed_addr constant [8 x i8] c"formatC\00", align 1
@.str.699 = private unnamed_addr constant [6 x i8] c"crc64\00", align 1
@.str.700 = private unnamed_addr constant [11 x i8] c"bitwiseAnd\00", align 1
@.str.701 = private unnamed_addr constant [11 x i8] c"bitwiseNot\00", align 1
@.str.702 = private unnamed_addr constant [10 x i8] c"bitwiseOr\00", align 1
@.str.703 = private unnamed_addr constant [11 x i8] c"bitwiseXor\00", align 1
@.str.704 = private unnamed_addr constant [14 x i8] c"bitwiseShiftL\00", align 1
@.str.705 = private unnamed_addr constant [14 x i8] c"bitwiseShiftR\00", align 1
@.str.706 = private unnamed_addr constant [10 x i8] c"serialize\00", align 1
@.str.707 = private unnamed_addr constant [11 x i8] c"serializeb\00", align 1
@.str.708 = private unnamed_addr constant [12 x i8] c"unserialize\00", align 1
@.str.709 = private unnamed_addr constant [14 x i8] c"rowsum_matrix\00", align 1
@.str.710 = private unnamed_addr constant [10 x i8] c"rowsum_df\00", align 1
@.str.711 = private unnamed_addr constant [12 x i8] c"setS4Object\00", align 1
@.str.712 = private unnamed_addr constant [11 x i8] c"traceOnOff\00", align 1
@.str.713 = private unnamed_addr constant [11 x i8] c"debugOnOff\00", align 1
@.str.714 = private unnamed_addr constant [12 x i8] c"La_qr_cmplx\00", align 1
@.str.715 = private unnamed_addr constant [6 x i8] c"La_rs\00", align 1
@.str.716 = private unnamed_addr constant [12 x i8] c"La_rs_cmplx\00", align 1
@.str.717 = private unnamed_addr constant [6 x i8] c"La_rg\00", align 1
@.str.718 = private unnamed_addr constant [12 x i8] c"La_rg_cmplx\00", align 1
@.str.719 = private unnamed_addr constant [10 x i8] c"La_dlange\00", align 1
@.str.720 = private unnamed_addr constant [10 x i8] c"La_dgecon\00", align 1
@.str.721 = private unnamed_addr constant [10 x i8] c"La_dtrcon\00", align 1
@.str.722 = private unnamed_addr constant [10 x i8] c"La_zgecon\00", align 1
@.str.723 = private unnamed_addr constant [10 x i8] c"La_ztrcon\00", align 1
@.str.724 = private unnamed_addr constant [15 x i8] c"La_solve_cmplx\00", align 1
@.str.725 = private unnamed_addr constant [9 x i8] c"La_solve\00", align 1
@.str.726 = private unnamed_addr constant [6 x i8] c"La_qr\00", align 1
@.str.727 = private unnamed_addr constant [8 x i8] c"La_chol\00", align 1
@.str.728 = private unnamed_addr constant [12 x i8] c"La_chol2inv\00", align 1
@.str.729 = private unnamed_addr constant [13 x i8] c"qr_coef_real\00", align 1
@.str.730 = private unnamed_addr constant [11 x i8] c"qr_qy_real\00", align 1
@.str.731 = private unnamed_addr constant [12 x i8] c"det_ge_real\00", align 1
@.str.732 = private unnamed_addr constant [14 x i8] c"qr_coef_cmplx\00", align 1
@.str.733 = private unnamed_addr constant [12 x i8] c"qr_qy_cmplx\00", align 1
@.str.734 = private unnamed_addr constant [7 x i8] c"La_svd\00", align 1
@.str.735 = private unnamed_addr constant [13 x i8] c"La_svd_cmplx\00", align 1
@.str.736 = private unnamed_addr constant [11 x i8] c"La_version\00", align 1
@.str.737 = private unnamed_addr constant [11 x i8] c"La_library\00", align 1
@.str.738 = private unnamed_addr constant [13 x i8] c"bcprofcounts\00", align 1
@.str.739 = private unnamed_addr constant [12 x i8] c"bcprofstart\00", align 1
@.str.740 = private unnamed_addr constant [11 x i8] c"bcprofstop\00", align 1
@.str.741 = private unnamed_addr constant [13 x i8] c"eSoftVersion\00", align 1
@.str.742 = private unnamed_addr constant [12 x i8] c"curlVersion\00", align 1
@.str.743 = private unnamed_addr constant [15 x i8] c"curlGetHeaders\00", align 1
@.str.744 = private unnamed_addr constant [13 x i8] c"curlDownload\00", align 1
@R_FunTab = global [748 x %struct.FUNTAB] [%struct.FUNTAB { ptr @.str, ptr @do_if, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 10, i32 0, i32 1 } }, %struct.FUNTAB { ptr @.str.1, ptr @do_while, i32 0, i32 100, i32 2, %struct.PPinfo { i32 16, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.2, ptr @do_for, i32 0, i32 100, i32 3, %struct.PPinfo { i32 7, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.3, ptr @do_repeat, i32 0, i32 100, i32 1, %struct.PPinfo { i32 20, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.4, ptr @do_break, i32 2, i32 0, i32 0, %struct.PPinfo { i32 5, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.5, ptr @do_break, i32 1, i32 0, i32 0, %struct.PPinfo { i32 11, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.6, ptr @do_return, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 13, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.7, ptr @do_function, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 9, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.8, ptr @do_set, i32 1, i32 100, i32 -1, %struct.PPinfo { i32 1, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.9, ptr @do_set, i32 3, i32 100, i32 -1, %struct.PPinfo { i32 1, i32 1, i32 1 } }, %struct.FUNTAB { ptr @.str.10, ptr @do_set, i32 2, i32 100, i32 -1, %struct.PPinfo { i32 2, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.11, ptr @do_begin, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 6, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.12, ptr @do_paren, i32 0, i32 1, i32 1, %struct.PPinfo { i32 12, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.13, ptr @do_subset_dflt, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.14, ptr @do_subset2_dflt, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.15, ptr @do_subset, i32 1, i32 0, i32 -1, %struct.PPinfo { i32 15, i32 15, i32 0 } }, %struct.FUNTAB { ptr @.str.16, ptr @do_subset2, i32 2, i32 0, i32 -1, %struct.PPinfo { i32 15, i32 15, i32 0 } }, %struct.FUNTAB { ptr @.str.17, ptr @do_subset3, i32 3, i32 0, i32 2, %struct.PPinfo { i32 18, i32 16, i32 0 } }, %struct.FUNTAB { ptr @.str.18, ptr @do_AT, i32 0, i32 0, i32 2, %struct.PPinfo { i32 18, i32 16, i32 0 } }, %struct.FUNTAB { ptr @.str.19, ptr @do_subassign, i32 0, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.20, ptr @do_subassign2, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.21, ptr @do_subassign3, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.22, ptr @do_switch, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.23, ptr @do_browser, i32 0, i32 101, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.24, ptr @do_trace, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.25, ptr @do_trace, i32 1, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.26, ptr @do_internal, i32 0, i32 200, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.27, ptr @do_primitive, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.28, ptr @do_call, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.29, ptr @do_quote, i32 0, i32 0, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.30, ptr @do_substitute, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.31, ptr @do_missing, i32 1, i32 0, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.32, ptr @do_nargs, i32 1, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.33, ptr @do_onexit, i32 0, i32 100, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.34, ptr @do_forceAndCall, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.35, ptr @do_stop, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.36, ptr @do_warning, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.37, ptr @do_gettext, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.38, ptr @do_ngettext, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.39, ptr @do_bindtextdomain, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.40, ptr @do_addCondHands, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.41, ptr @do_addGlobHands, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.42, ptr @do_resetCondHands, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.43, ptr @do_signalCondition, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.44, ptr @do_dfltStop, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.45, ptr @do_dfltWarn, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.46, ptr @do_addRestart, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.47, ptr @do_getRestart, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.48, ptr @do_invokeRestart, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.49, ptr @do_addTryHandlers, i32 0, i32 111, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.50, ptr @do_geterrmessage, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.51, ptr @do_seterrmessage, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.52, ptr @do_printDeferredWarnings, i32 0, i32 111, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.53, ptr @do_interruptsSuspended, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.54, ptr @do_asfunction, i32 0, i32 11, i32 2, %struct.PPinfo { i32 9, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.55, ptr @do_debug, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.56, ptr @do_debug, i32 1, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.57, ptr @do_debug, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.58, ptr @do_debug, i32 3, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.59, ptr @do_recall, i32 0, i32 210, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.60, ptr @do_delayed, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.61, ptr @do_makelazy, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.62, ptr @do_identical, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.63, ptr @do_tryCatchHelper, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.64, ptr @do_getNSValue, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.65, ptr @do_arith, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 3, i32 9, i32 0 } }, %struct.FUNTAB { ptr @.str.66, ptr @do_arith, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 3, i32 9, i32 0 } }, %struct.FUNTAB { ptr @.str.67, ptr @do_arith, i32 3, i32 1, i32 2, %struct.PPinfo { i32 3, i32 10, i32 0 } }, %struct.FUNTAB { ptr @.str.68, ptr @do_arith, i32 4, i32 1, i32 2, %struct.PPinfo { i32 4, i32 10, i32 0 } }, %struct.FUNTAB { ptr @.str.69, ptr @do_arith, i32 5, i32 1, i32 2, %struct.PPinfo { i32 4, i32 14, i32 1 } }, %struct.FUNTAB { ptr @.str.70, ptr @do_arith, i32 6, i32 1, i32 2, %struct.PPinfo { i32 4, i32 11, i32 0 } }, %struct.FUNTAB { ptr @.str.71, ptr @do_arith, i32 7, i32 1, i32 2, %struct.PPinfo { i32 4, i32 11, i32 0 } }, %struct.FUNTAB { ptr @.str.72, ptr @do_matprod, i32 0, i32 1, i32 2, %struct.PPinfo { i32 3, i32 11, i32 0 } }, %struct.FUNTAB { ptr @.str.73, ptr @do_relop, i32 1, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.74, ptr @do_relop, i32 2, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.75, ptr @do_relop, i32 3, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.76, ptr @do_relop, i32 4, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.77, ptr @do_relop, i32 5, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.78, ptr @do_relop, i32 6, i32 1, i32 2, %struct.PPinfo { i32 3, i32 8, i32 0 } }, %struct.FUNTAB { ptr @.str.79, ptr @do_logic, i32 1, i32 1, i32 2, %struct.PPinfo { i32 3, i32 6, i32 0 } }, %struct.FUNTAB { ptr @.str.80, ptr @do_logic, i32 2, i32 1, i32 2, %struct.PPinfo { i32 3, i32 5, i32 0 } }, %struct.FUNTAB { ptr @.str.81, ptr @do_logic, i32 3, i32 1, i32 1, %struct.PPinfo { i32 17, i32 7, i32 0 } }, %struct.FUNTAB { ptr @.str.82, ptr @do_logic2, i32 1, i32 0, i32 2, %struct.PPinfo { i32 3, i32 6, i32 0 } }, %struct.FUNTAB { ptr @.str.83, ptr @do_logic2, i32 2, i32 0, i32 2, %struct.PPinfo { i32 3, i32 5, i32 0 } }, %struct.FUNTAB { ptr @.str.84, ptr @do_colon, i32 0, i32 1, i32 2, %struct.PPinfo { i32 4, i32 12, i32 0 } }, %struct.FUNTAB { ptr @.str.85, ptr @do_tilde, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 3, i32 4, i32 0 } }, %struct.FUNTAB { ptr @.str.86, ptr @do_colon2, i32 0, i32 200, i32 2, %struct.PPinfo { i32 4, i32 17, i32 0 } }, %struct.FUNTAB { ptr @.str.87, ptr @do_colon3, i32 0, i32 200, i32 2, %struct.PPinfo { i32 4, i32 17, i32 0 } }, %struct.FUNTAB { ptr @.str.88, ptr @do_logic3, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.89, ptr @do_logic3, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.90, ptr @do_dotsElt, i32 0, i32 201, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.91, ptr @do_dotsLength, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.92, ptr @do_dotsNames, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.93, ptr @do_length, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.94, ptr @do_lengthgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.95, ptr @do_c, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.96, ptr @do_class, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.97, ptr @do_classgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.98, ptr @R_do_data_class, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.99, ptr @R_do_data_class, i32 1, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.100, ptr @R_do_data_class, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.101, ptr @R_do_set_class, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.102, ptr @do_unclass, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.103, ptr @do_names, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.104, ptr @do_namesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.105, ptr @do_dimnames, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.106, ptr @do_dimnamesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.107, ptr @do_dim, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.108, ptr @do_dimgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.109, ptr @do_attributes, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.110, ptr @do_attributesgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.111, ptr @do_attr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.112, ptr @do_attrgets, i32 0, i32 1, i32 3, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.113, ptr @do_attrgets, i32 1, i32 0, i32 3, %struct.PPinfo { i32 14, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.114, ptr @do_levelsgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.115, ptr @do_makevector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.116, ptr @do_complex, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.117, ptr @do_matrix, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.118, ptr @do_array, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.119, ptr @do_diag, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.120, ptr @do_backsolve, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.121, ptr @do_maxcol, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.122, ptr @do_rowscols, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.123, ptr @do_rowscols, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.124, ptr @do_unlist, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.125, ptr @do_bind, i32 1, i32 10, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.126, ptr @do_bind, i32 2, i32 10, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.127, ptr @do_drop, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.128, ptr @do_allnames, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.129, ptr @do_comment, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.130, ptr @do_commentgets, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.131, ptr @do_get, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.132, ptr @do_get, i32 2, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.133, ptr @do_mget, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.134, ptr @do_get, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.135, ptr @do_assign, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.136, ptr @do_list2env, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.137, ptr @do_remove, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.138, ptr @do_duplicated, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.139, ptr @do_duplicated, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.140, ptr @do_duplicated, i32 2, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.141, ptr @do_anyNA, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.142, ptr @do_which, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.143, ptr @do_first_min, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.144, ptr @do_pmin, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.145, ptr @do_pmin, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.146, ptr @do_first_min, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.147, ptr @do_match, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.148, ptr @do_pmatch, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.149, ptr @do_charmatch, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.150, ptr @do_matchcall, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.151, ptr @do_matprod, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.152, ptr @do_matprod, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.153, ptr @do_lengths, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.154, ptr @do_sequence, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.155, ptr @do_vhash, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.156, ptr @do_attach, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.157, ptr @do_detach, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.158, ptr @do_search, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.159, ptr @do_setFileTime, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.160, ptr @do_Math2, i32 10001, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.161, ptr @do_Math2, i32 10004, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.162, ptr @do_log, i32 10003, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.163, ptr @do_log1arg, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.164, ptr @do_log1arg, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.165, ptr @do_abs, i32 6, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.166, ptr @do_math1, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.167, ptr @do_math1, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.168, ptr @do_math1, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.169, ptr @do_math1, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.170, ptr @do_trunc, i32 5, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.171, ptr @do_math1, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.172, ptr @do_math1, i32 11, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.173, ptr @do_math1, i32 12, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.174, ptr @do_math1, i32 20, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.175, ptr @do_math1, i32 21, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.176, ptr @do_math1, i32 22, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.177, ptr @do_math1, i32 23, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.178, ptr @do_math1, i32 24, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.179, ptr @do_math1, i32 25, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.180, ptr @do_math1, i32 30, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.181, ptr @do_math1, i32 31, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.182, ptr @do_math1, i32 32, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.183, ptr @do_math1, i32 33, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.184, ptr @do_math1, i32 34, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.185, ptr @do_math1, i32 35, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.186, ptr @do_math1, i32 40, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.187, ptr @do_math1, i32 41, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.188, ptr @do_math1, i32 42, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.189, ptr @do_math1, i32 43, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.190, ptr @do_math1, i32 47, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.191, ptr @do_math1, i32 48, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.192, ptr @do_math1, i32 49, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.193, ptr @do_math2, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.194, ptr @do_math2, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.195, ptr @do_math2, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.196, ptr @do_math2, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.197, ptr @do_math2, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.198, ptr @do_math2, i32 6, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.199, ptr @do_math2, i32 7, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.200, ptr @do_math2, i32 8, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.201, ptr @do_math2, i32 9, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.202, ptr @do_math2, i32 10, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.203, ptr @do_math2, i32 11, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.204, ptr @do_math2, i32 12, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.205, ptr @do_math2, i32 13, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.206, ptr @do_math2, i32 14, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.207, ptr @do_math2, i32 15, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.208, ptr @do_math2, i32 16, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.209, ptr @do_math2, i32 17, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.210, ptr @do_math2, i32 18, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.211, ptr @do_math2, i32 19, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.212, ptr @do_math2, i32 20, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.213, ptr @do_math2, i32 21, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.214, ptr @do_math2, i32 22, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.215, ptr @do_math2, i32 23, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.216, ptr @do_math2, i32 24, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.217, ptr @do_math2, i32 25, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.218, ptr @do_math2, i32 26, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.219, ptr @do_cmathfuns, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.220, ptr @do_cmathfuns, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.221, ptr @do_cmathfuns, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.222, ptr @do_cmathfuns, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.223, ptr @do_cmathfuns, i32 5, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.224, ptr @do_math3, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.225, ptr @do_math3, i32 2, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.226, ptr @do_math3, i32 3, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.227, ptr @do_math3, i32 4, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.228, ptr @do_math3, i32 5, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.229, ptr @do_math3, i32 6, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.230, ptr @do_math3, i32 7, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.231, ptr @do_math3, i32 8, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.232, ptr @do_math3, i32 9, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.233, ptr @do_math3, i32 10, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.234, ptr @do_math3, i32 11, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.235, ptr @do_math3, i32 12, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.236, ptr @do_math3, i32 13, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.237, ptr @do_math3, i32 14, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.238, ptr @do_math3, i32 15, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.239, ptr @do_math3, i32 16, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.240, ptr @do_math3, i32 17, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.241, ptr @do_math3, i32 18, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.242, ptr @do_math3, i32 19, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.243, ptr @do_math3, i32 20, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.244, ptr @do_math3, i32 21, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.245, ptr @do_math3, i32 22, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.246, ptr @do_math3, i32 23, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.247, ptr @do_math3, i32 24, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.248, ptr @do_math3, i32 25, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.249, ptr @do_math3, i32 26, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.250, ptr @do_math3, i32 27, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.251, ptr @do_math3, i32 28, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.252, ptr @do_math3, i32 29, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.253, ptr @do_math3, i32 30, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.254, ptr @do_math3, i32 31, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.255, ptr @do_math3, i32 32, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.256, ptr @do_math3, i32 33, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.257, ptr @do_math3, i32 34, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.258, ptr @do_math3, i32 35, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.259, ptr @do_math3, i32 36, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.260, ptr @do_math3, i32 37, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.261, ptr @do_math3, i32 38, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.262, ptr @do_math3, i32 39, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.263, ptr @do_math3, i32 40, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.264, ptr @do_math3, i32 41, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.265, ptr @do_math3, i32 42, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.266, ptr @do_math3, i32 43, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.267, ptr @do_math3, i32 44, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.268, ptr @do_math3, i32 45, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.269, ptr @do_math3, i32 46, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.270, ptr @do_math3, i32 47, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.271, ptr @do_math4, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.272, ptr @do_math4, i32 2, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.273, ptr @do_math4, i32 3, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.274, ptr @do_math4, i32 4, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.275, ptr @do_math4, i32 5, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.276, ptr @do_math4, i32 6, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.277, ptr @do_math4, i32 7, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.278, ptr @do_math4, i32 8, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.279, ptr @do_math4, i32 9, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.280, ptr @do_math4, i32 10, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.281, ptr @do_math4, i32 11, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.282, ptr @do_math4, i32 12, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.283, ptr @do_random1, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.284, ptr @do_random1, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.285, ptr @do_random1, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.286, ptr @do_random1, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.287, ptr @do_random1, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.288, ptr @do_random1, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.289, ptr @do_random2, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.290, ptr @do_random2, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.291, ptr @do_random2, i32 2, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.292, ptr @do_random2, i32 3, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.293, ptr @do_random2, i32 4, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.294, ptr @do_random2, i32 5, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.295, ptr @do_random2, i32 6, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.296, ptr @do_random2, i32 7, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.297, ptr @do_random2, i32 13, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.298, ptr @do_random2, i32 12, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.299, ptr @do_random2, i32 8, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.300, ptr @do_random2, i32 9, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.301, ptr @do_random2, i32 10, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.302, ptr @do_random2, i32 11, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.303, ptr @do_random3, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.304, ptr @do_sample, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.305, ptr @do_sample2, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.306, ptr @do_RNGkind, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.307, ptr @do_setseed, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.308, ptr @do_summary, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.309, ptr @do_summary, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.310, ptr @do_summary, i32 3, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.311, ptr @do_summary, i32 4, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.312, ptr @do_summary, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.313, ptr @do_range, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.314, ptr @do_cum, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.315, ptr @do_cum, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.316, ptr @do_cum, i32 3, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.317, ptr @do_cum, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.318, ptr @do_asatomic, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.319, ptr @do_asatomic, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.320, ptr @do_asatomic, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.321, ptr @do_asatomic, i32 2, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.322, ptr @do_asatomic, i32 3, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.323, ptr @do_asatomic, i32 4, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.324, ptr @do_asatomic, i32 5, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.325, ptr @do_ascall, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.326, ptr @do_as_environment, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.327, ptr @do_storage_mode, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.328, ptr @do_asCharacterFactor, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.329, ptr @do_asvector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.330, ptr @do_paste, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.331, ptr @do_paste, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.332, ptr @do_filepath, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.333, ptr @do_format, i32 0, i32 11, i32 9, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.334, ptr @do_formatinfo, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.335, ptr @do_cat, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.336, ptr @do_docall, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.337, ptr @do_str2lang, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.338, ptr @do_str2lang, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.339, ptr @do_nchar, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.340, ptr @do_nzchar, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.341, ptr @do_substr, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.342, ptr @do_startsWith, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.343, ptr @do_startsWith, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.344, ptr @do_substrgets, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.345, ptr @do_strsplit, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.346, ptr @do_abbrev, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.347, ptr @do_makenames, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.348, ptr @do_pcre_config, i32 1, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.349, ptr @do_grep, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.350, ptr @do_grep, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.351, ptr @do_grepraw, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.352, ptr @do_gsub, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.353, ptr @do_gsub, i32 1, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.354, ptr @do_regexpr, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.355, ptr @do_regexpr, i32 1, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.356, ptr @do_regexec, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.357, ptr @do_agrep, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.358, ptr @do_agrep, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.359, ptr @do_adist, i32 1, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.360, ptr @do_aregexec, i32 1, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.361, ptr @do_tolower, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.362, ptr @do_tolower, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.363, ptr @do_chartr, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.364, ptr @do_sprintf, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.365, ptr @do_makeunique, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.366, ptr @do_charToRaw, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.367, ptr @do_rawToChar, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.368, ptr @do_rawShift, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.369, ptr @do_intToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.370, ptr @do_numToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.371, ptr @do_numToInts, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.372, ptr @do_rawToBits, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.373, ptr @do_packBits, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.374, ptr @do_utf8ToInt, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.375, ptr @do_intToUtf8, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.376, ptr @do_validUTF8, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.377, ptr @do_validEnc, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.378, ptr @do_encodeString, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.379, ptr @do_iconv, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.380, ptr @do_strtrim, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.381, ptr @do_strtoi, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.382, ptr @do_strrep, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.383, ptr @do_is, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.384, ptr @do_is, i32 10, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.385, ptr @do_is, i32 13, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.386, ptr @do_is, i32 14, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.387, ptr @do_is, i32 15, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.388, ptr @do_is, i32 16, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.389, ptr @do_is, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.390, ptr @do_is, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.391, ptr @do_is, i32 4, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.392, ptr @do_is, i32 19, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.393, ptr @do_is, i32 2, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.394, ptr @do_is, i32 20, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.395, ptr @do_is, i32 24, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.396, ptr @do_is, i32 50, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.397, ptr @do_is, i32 51, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.398, ptr @do_is, i32 100, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.399, ptr @do_is, i32 101, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.400, ptr @do_is, i32 102, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.401, ptr @do_is, i32 200, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.402, ptr @do_is, i32 201, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.403, ptr @do_is, i32 300, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.404, ptr @do_is, i32 301, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.405, ptr @do_is, i32 302, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.406, ptr @do_is, i32 999, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.407, ptr @do_isna, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.408, ptr @do_isnan, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.409, ptr @do_isfinite, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.410, ptr @do_isinfinite, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.411, ptr @do_isvector, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.412, ptr @do_proctime, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.413, ptr @do_gctime, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.414, ptr @do_withVisible, i32 1, i32 10, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.415, ptr @do_expression, i32 1, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.416, ptr @do_interactive, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.417, ptr @do_invisible, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.418, ptr @do_rep, i32 0, i32 0, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.419, ptr @do_rep_int, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.420, ptr @do_rep_len, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.421, ptr @do_seq, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.422, ptr @do_seq_len, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.423, ptr @do_seq_along, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.424, ptr @do_makelist, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.425, ptr @do_xtfrm, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.426, ptr @do_enc2, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.427, ptr @do_enc2, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.428, ptr @do_emptyenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.429, ptr @do_baseenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.430, ptr @do_globalenv, i32 0, i32 1, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.431, ptr @do_envirgets, i32 0, i32 1, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.432, ptr @do_pos2env, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.433, ptr @do_dotCode, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.434, ptr @do_dotCode, i32 1, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.435, ptr @do_External, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.436, ptr @do_External, i32 1, i32 201, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.437, ptr @do_dotcall, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.438, ptr @do_Externalgr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.439, ptr @do_dotcallgr, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.440, ptr @do_eapply, i32 0, i32 10, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.441, ptr @do_lapply, i32 0, i32 10, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.442, ptr @do_vapply, i32 0, i32 10, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.443, ptr @do_mapply, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.444, ptr @do_version, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.445, ptr @do_machine, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.446, ptr @do_commandArgs, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.447, ptr @do_internalsID, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.448, ptr @do_system, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.449, ptr @do_parse, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.450, ptr @do_save, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.451, ptr @do_saveToConn, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.452, ptr @do_load, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.453, ptr @do_loadFromConn2, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.454, ptr @do_loadFromConn2, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.455, ptr @do_serializeToConn, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.456, ptr @do_unserializeFromConn, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.457, ptr @do_unserializeFromConn, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.458, ptr @do_deparse, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.459, ptr @do_dput, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.460, ptr @do_dump, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.461, ptr @do_quit, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.462, ptr @do_readln, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.463, ptr @do_printdefault, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.464, ptr @do_prmatrix, i32 0, i32 111, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.465, ptr @do_gc, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.466, ptr @do_gcinfo, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.467, ptr @do_gctorture, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.468, ptr @do_gctorture2, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.469, ptr @do_memoryprofile, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.470, ptr @do_maxVSize, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.471, ptr @do_maxNSize, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.472, ptr @do_split, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.473, ptr @do_isloaded, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.474, ptr @do_recordGraphics, i32 0, i32 211, i32 3, %struct.PPinfo { i32 19, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.475, ptr @do_dynload, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.476, ptr @do_dynunload, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.477, ptr @do_ls, i32 1, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.478, ptr @do_typeof, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.479, ptr @do_eval, i32 0, i32 211, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.480, ptr @do_returnValue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.481, ptr @do_sys, i32 1, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.482, ptr @do_sys, i32 2, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.483, ptr @do_sys, i32 3, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.484, ptr @do_sys, i32 4, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.485, ptr @do_sys, i32 5, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.486, ptr @do_sys, i32 6, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.487, ptr @do_sys, i32 7, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.488, ptr @do_sys, i32 8, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.489, ptr @do_sys, i32 9, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.490, ptr @do_traceback, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.491, ptr @do_sysbrowser, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.492, ptr @do_sysbrowser, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.493, ptr @do_sysbrowser, i32 3, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.494, ptr @do_parentframe, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.495, ptr @do_sort, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.496, ptr @do_isunsorted, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.497, ptr @do_sorted_fpass, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.498, ptr @do_psort, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.499, ptr @do_qsort, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.500, ptr @do_radixsort, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.501, ptr @do_order, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.502, ptr @do_rank, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.503, ptr @do_scan, i32 0, i32 11, i32 19, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.504, ptr @do_transpose, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.505, ptr @do_aperm, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.506, ptr @do_builtins, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.507, ptr @do_args, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.508, ptr @do_formals, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.509, ptr @do_body, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.510, ptr @do_bodyCode, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.511, ptr @do_envir, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.512, ptr @do_envirName, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.513, ptr @do_env2list, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.514, ptr @do_regFinaliz, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.515, ptr @do_options, i32 0, i32 211, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.516, ptr @do_getOption, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.517, ptr @do_sink, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.518, ptr @do_sinknumber, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.519, ptr @do_rapply, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.520, ptr @do_islistfactor, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.521, ptr @do_colsum, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.522, ptr @do_colsum, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.523, ptr @do_colsum, i32 2, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.524, ptr @do_colsum, i32 3, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.525, ptr @do_tracemem, i32 0, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.526, ptr @do_retracemem, i32 0, i32 201, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.527, ptr @do_untracemem, i32 0, i32 101, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.528, ptr @do_inspect, i32 0, i32 111, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.529, ptr @do_address, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.530, ptr @do_named, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.531, ptr @do_refcnt, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.532, ptr @do_merge, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.533, ptr @do_capabilities, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.534, ptr @do_capabilitiesX11, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.535, ptr @do_newenv, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.536, ptr @do_parentenv, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.537, ptr @do_parentenvgets, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 2, i32 1 } }, %struct.FUNTAB { ptr @.str.538, ptr @do_topenv, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.539, ptr @do_l10n_info, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.540, ptr @do_Cstack_info, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.541, ptr @do_mmap_file, i32 0, i32 11, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.542, ptr @do_munmap_file, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.543, ptr @do_wrap_meta, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.544, ptr @do_tryWrap, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.545, ptr @do_altrep_class, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.546, ptr @do_fileshow, i32 0, i32 111, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.547, ptr @do_filecreate, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.548, ptr @do_fileremove, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.549, ptr @do_filerename, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.550, ptr @do_fileappend, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.551, ptr @do_filesymlink, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.552, ptr @do_filelink, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.553, ptr @do_filecopy, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.554, ptr @do_listfiles, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.555, ptr @do_listdirs, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.556, ptr @do_fileexists, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.557, ptr @do_filechoose, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.558, ptr @do_fileinfo, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.559, ptr @do_fileaccess, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.560, ptr @do_direxists, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.561, ptr @do_dircreate, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.562, ptr @do_tempfile, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.563, ptr @do_tempdir, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.564, ptr @do_Rhome, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.565, ptr @do_date, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.566, ptr @do_getenv, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.567, ptr @do_setenv, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.568, ptr @do_unsetenv, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.569, ptr @do_getwd, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.570, ptr @do_setwd, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.571, ptr @do_basename, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.572, ptr @do_dirname, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.573, ptr @do_syschmod, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.574, ptr @do_sysumask, i32 0, i32 211, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.575, ptr @do_readlink, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.576, ptr @do_sysinfo, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.577, ptr @do_syssleep, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.578, ptr @do_getlocale, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.579, ptr @do_setlocale, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.580, ptr @do_localeconv, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.581, ptr @do_pathexpand, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.582, ptr @do_sysgetpid, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.583, ptr @do_normalizepath, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.584, ptr @do_glob, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.585, ptr @do_unlink, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.586, ptr @do_polyroot, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.587, ptr @do_inherits, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.588, ptr @do_usemethod, i32 0, i32 200, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.589, ptr @do_nextmethod, i32 0, i32 210, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.590, ptr @do_standardGeneric, i32 0, i32 201, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.591, ptr @do_systime, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.592, ptr @do_asPOSIXct, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.593, ptr @do_asPOSIXlt, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.594, ptr @do_formatPOSIXlt, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.595, ptr @do_strptime, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.596, ptr @do_D2POSIXlt, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.597, ptr @do_POSIXlt2D, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.598, ptr @do_balancePOSIXlt, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.599, ptr @do_balancePOSIXlt, i32 1, i32 1, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.600, ptr @do_compareNumericVersion, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.601, ptr @do_mkcode, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.602, ptr @do_bcclose, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.603, ptr @do_is_builtin_internal, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.604, ptr @do_disassemble, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.605, ptr @do_bcversion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.606, ptr @do_loadfile, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.607, ptr @do_savefile, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.608, ptr @do_growconst, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.609, ptr @do_putconst, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.610, ptr @do_getconst, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.611, ptr @do_enablejit, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.612, ptr @do_compilepkgs, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.613, ptr @do_setnumthreads, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.614, ptr @do_setmaxnumthreads, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.615, ptr @do_stdin, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.616, ptr @do_stdout, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.617, ptr @do_stderr, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.618, ptr @do_isatty, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.619, ptr @do_readLines, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.620, ptr @do_writelines, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.621, ptr @do_readbin, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.622, ptr @do_writebin, i32 0, i32 211, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.623, ptr @do_readchar, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.624, ptr @do_writechar, i32 0, i32 211, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.625, ptr @do_open, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.626, ptr @do_isopen, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.627, ptr @do_isincomplete, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.628, ptr @do_isseekable, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.629, ptr @do_close, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.630, ptr @do_flush, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.631, ptr @do_url, i32 1, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.632, ptr @do_url, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.633, ptr @do_pipe, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.634, ptr @do_fifo, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.635, ptr @do_gzfile, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.636, ptr @do_gzfile, i32 1, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.637, ptr @do_gzfile, i32 2, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.638, ptr @do_unz, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.639, ptr @do_seek, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.640, ptr @do_truncate, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.641, ptr @do_pushback, i32 0, i32 111, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.642, ptr @do_clearpushback, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.643, ptr @do_pushbacklength, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.644, ptr @do_rawconnection, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.645, ptr @do_rawconvalue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.646, ptr @do_textconnection, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.647, ptr @do_textconvalue, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.648, ptr @do_sockconn, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.649, ptr @do_sockconn, i32 1, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.650, ptr @do_sockselect, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.651, ptr @do_serversocket, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.652, ptr @do_socktimeout, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.653, ptr @do_getconnection, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.654, ptr @do_getallconnections, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.655, ptr @do_sumconnection, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.656, ptr @do_gzcon, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.657, ptr @do_memCompress, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.658, ptr @do_memDecompress, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.659, ptr @do_readDCF, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.660, ptr @do_lockEnv, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.661, ptr @do_envIsLocked, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.662, ptr @do_lockBnd, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.663, ptr @do_lockBnd, i32 1, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.664, ptr @do_bndIsLocked, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.665, ptr @do_mkActiveBnd, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.666, ptr @do_bndIsActive, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.667, ptr @do_activeBndFun, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.668, ptr @do_mkUnbound, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.669, ptr @do_isNSEnv, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.670, ptr @do_regNS, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.671, ptr @do_unregNS, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.672, ptr @do_getRegNS, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.673, ptr @do_getRegNS, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.674, ptr @do_getNSRegistry, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.675, ptr @do_importIntoEnv, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.676, ptr @do_envprofile, i32 0, i32 211, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.677, ptr @do_encoding, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.678, ptr @do_setencoding, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.679, ptr @do_setTimeLimit, i32 0, i32 111, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.680, ptr @do_setSessionTimeLimit, i32 0, i32 111, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.681, ptr @do_ICUset, i32 0, i32 111, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.682, ptr @do_ICUget, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.683, ptr @do_readEnviron, i32 0, i32 111, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.684, ptr @do_shortRowNames, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.685, ptr @do_copyDFattr, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.686, ptr @do_getRegisteredRoutines, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.687, ptr @do_getDllTable, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.688, ptr @do_getSymbolInfo, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.689, ptr @do_S4on, i32 0, i32 1, i32 -1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.690, ptr @do_lazyLoadDBfetch, i32 0, i32 1, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.691, ptr @do_lazyLoadDBflush, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.692, ptr @do_getVarsFromFrame, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.693, ptr @do_lazyLoadDBinsertValue, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.694, ptr @do_bincode, i32 0, i32 11, i32 4, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.695, ptr @do_tabulate, i32 0, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.696, ptr @do_findinterval, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.697, ptr @do_pretty, i32 0, i32 11, i32 8, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.698, ptr @do_formatC, i32 0, i32 11, i32 7, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.699, ptr @do_crc64, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.700, ptr @do_bitwise, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.701, ptr @do_bitwise, i32 2, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.702, ptr @do_bitwise, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.703, ptr @do_bitwise, i32 4, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.704, ptr @do_bitwise, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.705, ptr @do_bitwise, i32 6, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.706, ptr @do_serialize, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.707, ptr @do_serialize, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.708, ptr @do_serialize, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.709, ptr @do_rowsum, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.710, ptr @do_rowsum, i32 1, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.711, ptr @do_setS4Object, i32 0, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.712, ptr @do_traceOnOff, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.713, ptr @do_traceOnOff, i32 1, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.714, ptr @do_lapack, i32 0, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.715, ptr @do_lapack, i32 1, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.716, ptr @do_lapack, i32 2, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.717, ptr @do_lapack, i32 3, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.718, ptr @do_lapack, i32 41, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.715, ptr @do_lapack, i32 5, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.716, ptr @do_lapack, i32 51, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.719, ptr @do_lapack, i32 6, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.720, ptr @do_lapack, i32 7, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.721, ptr @do_lapack, i32 8, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.722, ptr @do_lapack, i32 9, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.723, ptr @do_lapack, i32 10, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.724, ptr @do_lapack, i32 11, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.725, ptr @do_lapack, i32 100, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.726, ptr @do_lapack, i32 101, i32 11, i32 1, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.727, ptr @do_lapack, i32 200, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.728, ptr @do_lapack, i32 201, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.729, ptr @do_lapack, i32 300, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.730, ptr @do_lapack, i32 301, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.731, ptr @do_lapack, i32 302, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.732, ptr @do_lapack, i32 303, i32 11, i32 2, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.733, ptr @do_lapack, i32 304, i32 11, i32 3, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.734, ptr @do_lapack, i32 400, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.735, ptr @do_lapack, i32 401, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.736, ptr @do_lapack, i32 1000, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.737, ptr @do_lapack, i32 1001, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.738, ptr @do_bcprofcounts, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.739, ptr @do_bcprofstart, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.740, ptr @do_bcprofstop, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.741, ptr @do_eSoftVersion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.742, ptr @do_curlVersion, i32 0, i32 11, i32 0, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.743, ptr @do_curlGetHeaders, i32 0, i32 11, i32 5, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB { ptr @.str.744, ptr @do_curlDownload, i32 0, i32 11, i32 6, %struct.PPinfo { i32 8, i32 0, i32 0 } }, %struct.FUNTAB zeroinitializer], align 8
@R_NilValue = external global ptr, align 8
@.str.745 = private unnamed_addr constant [49 x i8] c"/Users/duncan/Rtrunk/buildO2/../src/main/names.c\00", align 1
@.str.746 = private unnamed_addr constant [25 x i8] c"string argument required\00", align 1
@.str.747 = private unnamed_addr constant [27 x i8] c"no such primitive function\00", align 1
@R_NaInt = external global i32, align 4
@DDVALSymbols = internal global [65 x ptr] zeroinitializer, align 8
@R_SymbolTable = external global ptr, align 8
@.str.748 = private unnamed_addr constant [42 x i8] c"couldn't allocate memory for symbol table\00", align 1
@R_UnboundValue = external global ptr, align 8
@.str.749 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@R_MissingArg = external global ptr, align 8
@.str.750 = private unnamed_addr constant [15 x i8] c"<in-bc-interp>\00", align 1
@R_InBCInterpreter = external global ptr, align 8
@R_RestartToken = external global ptr, align 8
@.str.751 = private unnamed_addr constant [21 x i8] c"<current-expression>\00", align 1
@R_CurrentExpression = external global ptr, align 8
@R_NaString = external global ptr, align 8
@.str.752 = private unnamed_addr constant [3 x i8] c"NA\00", align 1
@R_print = external global %struct.R_PrintData, align 8
@R_BlankString = external global ptr, align 8
@R_BlankScalarString = external global ptr, align 8
@Spec_name = internal global [47 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.3, ptr @.str.2, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.12, ptr @.str.11, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.84, ptr @.str.86, ptr @.str.87, ptr @.str.798, ptr @.str.799, ptr @.str.85, ptr @.str.18, ptr @.str.800, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.78, ptr @.str.76, ptr @.str.77, ptr @.str.79, ptr @.str.80, ptr @.str.82, ptr @.str.83, ptr @.str.81, ptr @.str.8, ptr @.str.10, ptr @.str.9, ptr @.str.17, ptr @.str.15, ptr @.str.16, ptr @.str.21, ptr @.str.19, ptr @.str.20, ptr null], align 8
@.str.753 = private unnamed_addr constant [41 x i8] c"attempt to use zero-length variable name\00", align 1
@.str.754 = private unnamed_addr constant [39 x i8] c"variable names are limited to %d bytes\00", align 1
@.str.755 = private unnamed_addr constant [28 x i8] c"can't set ALTREP truelength\00", align 1
@utf8locale = external global i32, align 4
@latin1locale = external global i32, align 4
@.str.756 = private unnamed_addr constant [28 x i8] c"class name too long in '%s'\00", align 1
@R_PPStackTop = external global i32, align 4
@.str.757 = private unnamed_addr constant [29 x i8] c"invalid .Internal() argument\00", align 1
@.str.758 = private unnamed_addr constant [36 x i8] c"there is no .Internal function '%s'\00", align 1
@R_Visible = external global i32, align 4
@.str.759 = private unnamed_addr constant [8 x i8] c"formula\00", align 1
@R_ClassSymbol = external global ptr, align 8
@R_DotEnvSymbol = external global ptr, align 8
@.str.760 = private unnamed_addr constant [5 x i8] c"..%d\00", align 1
@R_Bracket2Symbol = external global ptr, align 8
@R_BracketSymbol = external global ptr, align 8
@R_BraceSymbol = external global ptr, align 8
@.str.761 = private unnamed_addr constant [8 x i8] c".Device\00", align 1
@R_DeviceSymbol = external global ptr, align 8
@R_DimNamesSymbol = external global ptr, align 8
@R_DimSymbol = external global ptr, align 8
@R_DollarSymbol = external global ptr, align 8
@R_AtsignSymbol = external global ptr, align 8
@.str.762 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@R_DotsSymbol = external global ptr, align 8
@R_DropSymbol = external global ptr, align 8
@R_EvalSymbol = external global ptr, align 8
@.str.763 = private unnamed_addr constant [12 x i8] c".Last.value\00", align 1
@R_LastvalueSymbol = external global ptr, align 8
@.str.764 = private unnamed_addr constant [7 x i8] c"levels\00", align 1
@R_LevelsSymbol = external global ptr, align 8
@.str.765 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@R_ModeSymbol = external global ptr, align 8
@.str.766 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@R_NameSymbol = external global ptr, align 8
@R_NamesSymbol = external global ptr, align 8
@.str.767 = private unnamed_addr constant [6 x i8] c"na.rm\00", align 1
@R_NaRmSymbol = external global ptr, align 8
@.str.768 = private unnamed_addr constant [8 x i8] c"package\00", align 1
@R_PackageSymbol = external global ptr, align 8
@.str.769 = private unnamed_addr constant [9 x i8] c"previous\00", align 1
@R_PreviousSymbol = external global ptr, align 8
@R_QuoteSymbol = external global ptr, align 8
@.str.770 = private unnamed_addr constant [10 x i8] c"row.names\00", align 1
@R_RowNamesSymbol = external global ptr, align 8
@.str.771 = private unnamed_addr constant [13 x i8] c".Random.seed\00", align 1
@R_SeedsSymbol = external global ptr, align 8
@.str.772 = private unnamed_addr constant [10 x i8] c"sort.list\00", align 1
@R_SortListSymbol = external global ptr, align 8
@.str.773 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@R_SourceSymbol = external global ptr, align 8
@.str.774 = private unnamed_addr constant [4 x i8] c"tsp\00", align 1
@R_TspSymbol = external global ptr, align 8
@R_CommentSymbol = external global ptr, align 8
@.str.775 = private unnamed_addr constant [13 x i8] c".Environment\00", align 1
@.str.776 = private unnamed_addr constant [6 x i8] c"exact\00", align 1
@R_ExactSymbol = external global ptr, align 8
@.str.777 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@R_RecursiveSymbol = external global ptr, align 8
@.str.778 = private unnamed_addr constant [8 x i8] c"srcfile\00", align 1
@R_SrcfileSymbol = external global ptr, align 8
@.str.779 = private unnamed_addr constant [7 x i8] c"srcref\00", align 1
@R_SrcrefSymbol = external global ptr, align 8
@.str.780 = private unnamed_addr constant [12 x i8] c"wholeSrcref\00", align 1
@R_WholeSrcrefSymbol = external global ptr, align 8
@.str.781 = private unnamed_addr constant [6 x i8] c"*tmp*\00", align 1
@R_TmpvalSymbol = external global ptr, align 8
@.str.782 = private unnamed_addr constant [10 x i8] c"use.names\00", align 1
@R_UseNamesSymbol = external global ptr, align 8
@R_ColonSymbol = external global ptr, align 8
@R_DoubleColonSymbol = external global ptr, align 8
@R_TripleColonSymbol = external global ptr, align 8
@.str.783 = private unnamed_addr constant [8 x i8] c"conn_id\00", align 1
@R_ConnIdSymbol = external global ptr, align 8
@.str.784 = private unnamed_addr constant [9 x i8] c".Devices\00", align 1
@R_DevicesSymbol = external global ptr, align 8
@.str.785 = private unnamed_addr constant [5 x i8] c"base\00", align 1
@R_BaseSymbol = external global ptr, align 8
@R_baseSymbol = external global ptr, align 8
@.str.786 = private unnamed_addr constant [5 x i8] c"spec\00", align 1
@R_SpecSymbol = external global ptr, align 8
@.str.787 = private unnamed_addr constant [16 x i8] c".__NAMESPACE__.\00", align 1
@R_NamespaceEnvSymbol = external global ptr, align 8
@R_AsCharacterSymbol = external global ptr, align 8
@R_FunctionSymbol = external global ptr, align 8
@.str.788 = private unnamed_addr constant [9 x i8] c".Generic\00", align 1
@R_dot_Generic = external global ptr, align 8
@.str.789 = private unnamed_addr constant [8 x i8] c".Method\00", align 1
@R_dot_Method = external global ptr, align 8
@.str.790 = private unnamed_addr constant [9 x i8] c".Methods\00", align 1
@R_dot_Methods = external global ptr, align 8
@.str.791 = private unnamed_addr constant [9 x i8] c".defined\00", align 1
@R_dot_defined = external global ptr, align 8
@.str.792 = private unnamed_addr constant [8 x i8] c".target\00", align 1
@R_dot_target = external global ptr, align 8
@.str.793 = private unnamed_addr constant [7 x i8] c".Group\00", align 1
@R_dot_Group = external global ptr, align 8
@.str.794 = private unnamed_addr constant [7 x i8] c".Class\00", align 1
@R_dot_Class = external global ptr, align 8
@.str.795 = private unnamed_addr constant [16 x i8] c".GenericCallEnv\00", align 1
@R_dot_GenericCallEnv = external global ptr, align 8
@.str.796 = private unnamed_addr constant [15 x i8] c".GenericDefEnv\00", align 1
@R_dot_GenericDefEnv = external global ptr, align 8
@.str.797 = private unnamed_addr constant [13 x i8] c".packageName\00", align 1
@R_dot_packageName = external global ptr, align 8
@.str.798 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.799 = private unnamed_addr constant [3 x i8] c"|>\00", align 1
@.str.800 = private unnamed_addr constant [3 x i8] c"=>\00", align 1

declare ptr @do_if(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_while(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_for(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_repeat(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noreturn
declare ptr @do_break(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: noreturn
declare ptr @do_return(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @do_function(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_set(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_begin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_paren(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subset_dflt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subset2_dflt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subset(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subset2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subset3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_AT(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subassign(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subassign2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_subassign3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_switch(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_browser(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_trace(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @do_internal(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #2 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  %11 = alloca ptr, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store ptr %3, ptr %8, align 8
  %15 = load i32, ptr @R_PPStackTop, align 4
  store i32 %15, ptr %12, align 4
  %16 = call ptr @vmaxget()
  store ptr %16, ptr %14, align 8
  %17 = load ptr, ptr %6, align 8
  %18 = load ptr, ptr %7, align 8
  %19 = load ptr, ptr %5, align 8
  call void @Rf_checkArityCall(ptr noundef %17, ptr noundef %18, ptr noundef %19)
  %20 = load ptr, ptr %7, align 8
  %21 = call ptr @CAR(ptr noundef %20)
  store ptr %21, ptr %9, align 8
  %22 = load ptr, ptr %9, align 8
  %23 = call i32 @Rf_isPairList(ptr noundef %22)
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %4
  %26 = load ptr, ptr %5, align 8
  %27 = call ptr @libintl_gettext(ptr noundef @.str.757)
  call void (ptr, ptr, ...) @Rf_errorcall(ptr noundef %26, ptr noundef %27) #6
  unreachable

28:                                               ; preds = %4
  %29 = load ptr, ptr %9, align 8
  %30 = call ptr @CAR(ptr noundef %29)
  store ptr %30, ptr %10, align 8
  %31 = load ptr, ptr %10, align 8
  %32 = getelementptr inbounds %struct.SEXPREC, ptr %31, i32 0, i32 0
  %33 = load i64, ptr %32, align 8
  %34 = and i64 %33, 31
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %40, label %37

37:                                               ; preds = %28
  %38 = load ptr, ptr %5, align 8
  %39 = call ptr @libintl_gettext(ptr noundef @.str.757)
  call void (ptr, ptr, ...) @Rf_errorcall(ptr noundef %38, ptr noundef %39) #6
  unreachable

40:                                               ; preds = %28
  %41 = load ptr, ptr %10, align 8
  %42 = getelementptr inbounds %struct.SEXPREC, ptr %41, i32 0, i32 4
  %43 = getelementptr inbounds %struct.symsxp_struct, ptr %42, i32 0, i32 2
  %44 = load ptr, ptr %43, align 8
  %45 = load ptr, ptr @R_NilValue, align 8
  %46 = icmp eq ptr %44, %45
  br i1 %46, label %47, label %55

47:                                               ; preds = %40
  %48 = load ptr, ptr %5, align 8
  %49 = call ptr @libintl_gettext(ptr noundef @.str.758)
  %50 = load ptr, ptr %10, align 8
  %51 = getelementptr inbounds %struct.SEXPREC, ptr %50, i32 0, i32 4
  %52 = getelementptr inbounds %struct.symsxp_struct, ptr %51, i32 0, i32 0
  %53 = load ptr, ptr %52, align 8
  %54 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %53, i64 1
  call void (ptr, ptr, ...) @Rf_errorcall(ptr noundef %48, ptr noundef %49, ptr noundef %54) #6
  unreachable

55:                                               ; preds = %40
  %56 = load ptr, ptr %9, align 8
  %57 = getelementptr inbounds %struct.SEXPREC, ptr %56, i32 0, i32 4
  %58 = getelementptr inbounds %struct.listsxp_struct, ptr %57, i32 0, i32 1
  %59 = load ptr, ptr %58, align 8
  store ptr %59, ptr %7, align 8
  %60 = load ptr, ptr %10, align 8
  %61 = getelementptr inbounds %struct.SEXPREC, ptr %60, i32 0, i32 4
  %62 = getelementptr inbounds %struct.symsxp_struct, ptr %61, i32 0, i32 2
  %63 = load ptr, ptr %62, align 8
  %64 = getelementptr inbounds %struct.SEXPREC, ptr %63, i32 0, i32 0
  %65 = load i64, ptr %64, align 8
  %66 = and i64 %65, 31
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %67, 8
  br i1 %68, label %69, label %74

69:                                               ; preds = %55
  %70 = load ptr, ptr %7, align 8
  %71 = load ptr, ptr %8, align 8
  %72 = load ptr, ptr %5, align 8
  %73 = call ptr @Rf_evalList(ptr noundef %70, ptr noundef %71, ptr noundef %72, i32 noundef 0)
  store ptr %73, ptr %7, align 8
  br label %74

74:                                               ; preds = %69, %55
  %75 = load ptr, ptr %7, align 8
  %76 = call ptr @Rf_protect(ptr noundef %75)
  %77 = load ptr, ptr %10, align 8
  %78 = getelementptr inbounds %struct.SEXPREC, ptr %77, i32 0, i32 4
  %79 = getelementptr inbounds %struct.symsxp_struct, ptr %78, i32 0, i32 2
  %80 = load ptr, ptr %79, align 8
  %81 = getelementptr inbounds %struct.SEXPREC, ptr %80, i32 0, i32 4
  %82 = getelementptr inbounds %struct.primsxp_struct, ptr %81, i32 0, i32 0
  %83 = load i32, ptr %82, align 8
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %84
  %86 = getelementptr inbounds %struct.FUNTAB, ptr %85, i32 0, i32 3
  %87 = load i32, ptr %86, align 4
  %88 = sdiv i32 %87, 100
  %89 = srem i32 %88, 10
  store i32 %89, ptr %13, align 4
  %90 = load i32, ptr %13, align 4
  %91 = icmp ne i32 %90, 1
  %92 = zext i1 %91 to i32
  store i32 %92, ptr @R_Visible, align 4
  %93 = load ptr, ptr %10, align 8
  %94 = getelementptr inbounds %struct.SEXPREC, ptr %93, i32 0, i32 4
  %95 = getelementptr inbounds %struct.symsxp_struct, ptr %94, i32 0, i32 2
  %96 = load ptr, ptr %95, align 8
  %97 = getelementptr inbounds %struct.SEXPREC, ptr %96, i32 0, i32 4
  %98 = getelementptr inbounds %struct.primsxp_struct, ptr %97, i32 0, i32 0
  %99 = load i32, ptr %98, align 8
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %100
  %102 = getelementptr inbounds %struct.FUNTAB, ptr %101, i32 0, i32 1
  %103 = load ptr, ptr %102, align 8
  %104 = load ptr, ptr %9, align 8
  %105 = load ptr, ptr %10, align 8
  %106 = getelementptr inbounds %struct.SEXPREC, ptr %105, i32 0, i32 4
  %107 = getelementptr inbounds %struct.symsxp_struct, ptr %106, i32 0, i32 2
  %108 = load ptr, ptr %107, align 8
  %109 = load ptr, ptr %7, align 8
  %110 = load ptr, ptr %8, align 8
  %111 = call ptr %103(ptr noundef %104, ptr noundef %108, ptr noundef %109, ptr noundef %110)
  store ptr %111, ptr %11, align 8
  %112 = load i32, ptr %13, align 4
  %113 = icmp slt i32 %112, 2
  br i1 %113, label %114, label %118

114:                                              ; preds = %74
  %115 = load i32, ptr %13, align 4
  %116 = icmp ne i32 %115, 1
  %117 = zext i1 %116 to i32
  store i32 %117, ptr @R_Visible, align 4
  br label %118

118:                                              ; preds = %114, %74
  call void @Rf_unprotect(i32 noundef 1)
  %119 = load ptr, ptr %10, align 8
  %120 = getelementptr inbounds %struct.SEXPREC, ptr %119, i32 0, i32 4
  %121 = getelementptr inbounds %struct.symsxp_struct, ptr %120, i32 0, i32 2
  %122 = load ptr, ptr %121, align 8
  %123 = load i32, ptr %12, align 4
  call void @Rf_check_stack_balance(ptr noundef %122, i32 noundef %123)
  %124 = load ptr, ptr %14, align 8
  call void @vmaxset(ptr noundef %124)
  %125 = load ptr, ptr %11, align 8
  ret ptr %125
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @do_primitive(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #2 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %5, align 8
  store ptr %1, ptr %6, align 8
  store ptr %2, ptr %7, align 8
  store ptr %3, ptr %8, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = load ptr, ptr %7, align 8
  %13 = load ptr, ptr %5, align 8
  call void @Rf_checkArityCall(ptr noundef %11, ptr noundef %12, ptr noundef %13)
  %14 = load ptr, ptr %7, align 8
  %15 = call ptr @CAR(ptr noundef %14)
  store ptr %15, ptr %9, align 8
  %16 = load ptr, ptr %9, align 8
  %17 = getelementptr inbounds %struct.SEXPREC, ptr %16, i32 0, i32 0
  %18 = load i64, ptr %17, align 8
  %19 = and i64 %18, 31
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 16
  br i1 %21, label %22, label %31

22:                                               ; preds = %4
  %23 = load ptr, ptr %9, align 8
  %24 = call i32 @LENGTH_EX(ptr noundef %23, ptr noundef @.str.745, i32 noundef 1060)
  %25 = icmp ne i32 %24, 1
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = load ptr, ptr %9, align 8
  %28 = call ptr @STRING_ELT(ptr noundef %27, i64 noundef 0)
  %29 = load ptr, ptr @R_NilValue, align 8
  %30 = icmp eq ptr %28, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %26, %22, %4
  %32 = load ptr, ptr %5, align 8
  %33 = call ptr @libintl_gettext(ptr noundef @.str.746)
  call void (ptr, ptr, ...) @Rf_errorcall(ptr noundef %32, ptr noundef %33) #6
  unreachable

34:                                               ; preds = %26
  %35 = load ptr, ptr %9, align 8
  %36 = call ptr @STRING_ELT(ptr noundef %35, i64 noundef 0)
  %37 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %36, i64 1
  %38 = call ptr @R_Primitive(ptr noundef %37)
  store ptr %38, ptr %10, align 8
  %39 = load ptr, ptr %10, align 8
  %40 = load ptr, ptr @R_NilValue, align 8
  %41 = icmp eq ptr %39, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %34
  %43 = load ptr, ptr %5, align 8
  %44 = call ptr @libintl_gettext(ptr noundef @.str.747)
  call void (ptr, ptr, ...) @Rf_errorcall(ptr noundef %43, ptr noundef %44) #6
  unreachable

45:                                               ; preds = %34
  %46 = load ptr, ptr %10, align 8
  ret ptr %46
}

declare ptr @do_call(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_quote(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_substitute(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_missing(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_nargs(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_onexit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_forceAndCall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noreturn
declare ptr @do_stop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @do_warning(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gettext(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_ngettext(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bindtextdomain(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_addCondHands(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_addGlobHands(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_resetCondHands(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_signalCondition(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noreturn
declare ptr @do_dfltStop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @do_dfltWarn(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_addRestart(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getRestart(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noreturn
declare ptr @do_invokeRestart(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @do_addTryHandlers(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_geterrmessage(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_seterrmessage(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_printDeferredWarnings(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_interruptsSuspended(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asfunction(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_debug(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_recall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_delayed(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_makelazy(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_identical(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tryCatchHelper(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getNSValue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_arith(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_matprod(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_relop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_logic(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_logic2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_colon(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @do_tilde(ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef %3) #2 {
  %5 = alloca ptr, align 8
  %6 = alloca ptr, align 8
  %7 = alloca ptr, align 8
  %8 = alloca ptr, align 8
  %9 = alloca ptr, align 8
  %10 = alloca ptr, align 8
  store ptr %0, ptr %6, align 8
  store ptr %1, ptr %7, align 8
  store ptr %2, ptr %8, align 8
  store ptr %3, ptr %9, align 8
  %11 = load ptr, ptr %6, align 8
  %12 = getelementptr inbounds %struct.SEXPREC, ptr %11, i32 0, i32 0
  %13 = load i64, ptr %12, align 8
  %14 = lshr i64 %13, 6
  %15 = and i64 %14, 1
  %16 = trunc i64 %15 to i32
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = load ptr, ptr %6, align 8
  %20 = call ptr @Rf_duplicate(ptr noundef %19)
  store ptr %20, ptr %5, align 8
  br label %36

21:                                               ; preds = %4
  %22 = load ptr, ptr %6, align 8
  %23 = call ptr @Rf_duplicate(ptr noundef %22)
  store ptr %23, ptr %6, align 8
  %24 = call ptr @Rf_protect(ptr noundef %23)
  %25 = call ptr @Rf_mkString(ptr noundef @.str.759)
  store ptr %25, ptr %10, align 8
  %26 = call ptr @Rf_protect(ptr noundef %25)
  %27 = load ptr, ptr %6, align 8
  %28 = load ptr, ptr @R_ClassSymbol, align 8
  %29 = load ptr, ptr %10, align 8
  %30 = call ptr @Rf_setAttrib(ptr noundef %27, ptr noundef %28, ptr noundef %29)
  %31 = load ptr, ptr %6, align 8
  %32 = load ptr, ptr @R_DotEnvSymbol, align 8
  %33 = load ptr, ptr %9, align 8
  %34 = call ptr @Rf_setAttrib(ptr noundef %31, ptr noundef %32, ptr noundef %33)
  call void @Rf_unprotect(i32 noundef 2)
  %35 = load ptr, ptr %6, align 8
  store ptr %35, ptr %5, align 8
  br label %36

36:                                               ; preds = %21, %18
  %37 = load ptr, ptr %5, align 8
  ret ptr %37
}

declare ptr @do_colon2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_colon3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_logic3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotsElt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotsLength(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotsNames(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_length(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lengthgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_c(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_class(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_classgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @R_do_data_class(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @R_do_set_class(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unclass(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_names(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_namesgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dimnames(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dimnamesgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dim(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dimgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_attributes(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_attributesgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_attr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_attrgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_levelsgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_makevector(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_complex(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_matrix(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_array(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_diag(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_backsolve(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_maxcol(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rowscols(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unlist(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bind(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_drop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_allnames(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_comment(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_commentgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_get(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mget(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_assign(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_list2env(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_remove(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_duplicated(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_anyNA(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_which(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_first_min(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pmin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_match(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pmatch(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_charmatch(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_matchcall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lengths(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sequence(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_vhash(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_attach(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_detach(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_search(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setFileTime(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_Math2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_log(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_log1arg(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_abs(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_math1(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_trunc(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_math2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_cmathfuns(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_math3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_math4(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_random1(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_random2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_random3(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sample(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sample2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_RNGkind(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setseed(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_summary(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_range(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_cum(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asatomic(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_ascall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_as_environment(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_storage_mode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asCharacterFactor(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asvector(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_paste(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filepath(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_format(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_formatinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_cat(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_docall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_str2lang(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_nchar(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_nzchar(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_substr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_startsWith(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_substrgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_strsplit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_abbrev(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_makenames(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pcre_config(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_grep(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_grepraw(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gsub(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_regexpr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_regexec(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_agrep(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_adist(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_aregexec(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tolower(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_chartr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sprintf(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_makeunique(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_charToRaw(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rawToChar(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rawShift(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_intToBits(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_numToBits(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_numToInts(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rawToBits(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_packBits(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_utf8ToInt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_intToUtf8(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_validUTF8(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_validEnc(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_encodeString(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_iconv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_strtrim(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_strtoi(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_strrep(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_is(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isna(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isnan(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isfinite(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isinfinite(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isvector(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_proctime(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gctime(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_withVisible(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_expression(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_interactive(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_invisible(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rep(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rep_int(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rep_len(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_seq(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_seq_len(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_seq_along(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_makelist(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_xtfrm(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_enc2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_emptyenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_baseenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_globalenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_envirgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pos2env(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotCode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_External(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotcall(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_Externalgr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dotcallgr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_eapply(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lapply(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_vapply(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mapply(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_version(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_machine(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_commandArgs(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_internalsID(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_system(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_parse(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_save(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_saveToConn(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_load(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_loadFromConn2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_serializeToConn(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unserializeFromConn(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_deparse(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dput(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dump(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_quit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readln(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_printdefault(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_prmatrix(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gc(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gcinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gctorture(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gctorture2(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_memoryprofile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_maxVSize(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_maxNSize(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_split(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isloaded(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_recordGraphics(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dynload(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dynunload(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_ls(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_typeof(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_eval(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_returnValue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sys(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_traceback(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sysbrowser(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_parentframe(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sort(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isunsorted(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sorted_fpass(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_psort(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_qsort(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_radixsort(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_order(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rank(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_scan(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_transpose(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_aperm(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_builtins(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_args(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_formals(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_body(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bodyCode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_envir(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_envirName(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_env2list(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_regFinaliz(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_options(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getOption(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sinknumber(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rapply(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_islistfactor(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_colsum(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tracemem(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_retracemem(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_untracemem(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_inspect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_address(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_named(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_refcnt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_merge(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_capabilities(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_capabilitiesX11(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_newenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_parentenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_parentenvgets(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_topenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_l10n_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_Cstack_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mmap_file(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_munmap_file(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_wrap_meta(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tryWrap(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_altrep_class(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileshow(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filecreate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileremove(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filerename(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileappend(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filesymlink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filelink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filecopy(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_listfiles(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_listdirs(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileexists(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_filechoose(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fileaccess(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_direxists(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dircreate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tempfile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tempdir(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_Rhome(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_date(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unsetenv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getwd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setwd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_basename(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_dirname(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_syschmod(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sysumask(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readlink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sysinfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_syssleep(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getlocale(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setlocale(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_localeconv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pathexpand(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sysgetpid(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_normalizepath(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_glob(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unlink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_polyroot(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_inherits(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noreturn
declare ptr @do_usemethod(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #1

declare ptr @do_nextmethod(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_standardGeneric(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_systime(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asPOSIXct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_asPOSIXlt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_formatPOSIXlt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_strptime(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_D2POSIXlt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_POSIXlt2D(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_balancePOSIXlt(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_compareNumericVersion(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mkcode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bcclose(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_is_builtin_internal(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_disassemble(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bcversion(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_loadfile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_savefile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_growconst(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_putconst(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getconst(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_enablejit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_compilepkgs(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setnumthreads(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setmaxnumthreads(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_stdin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_stdout(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_stderr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isatty(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readLines(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_writelines(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readbin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_writebin(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readchar(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_writechar(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_open(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isopen(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isincomplete(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isseekable(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_close(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_flush(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_url(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pipe(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_fifo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gzfile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unz(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_seek(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_truncate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pushback(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_clearpushback(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pushbacklength(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rawconnection(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rawconvalue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_textconnection(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_textconvalue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sockconn(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sockselect(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_serversocket(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_socktimeout(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getconnection(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getallconnections(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_sumconnection(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_gzcon(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_memCompress(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_memDecompress(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readDCF(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lockEnv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_envIsLocked(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lockBnd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bndIsLocked(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mkActiveBnd(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bndIsActive(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_activeBndFun(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_mkUnbound(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_isNSEnv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_regNS(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_unregNS(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getRegNS(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getNSRegistry(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_importIntoEnv(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_envprofile(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_encoding(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setencoding(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setTimeLimit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setSessionTimeLimit(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_ICUset(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_ICUget(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_readEnviron(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_shortRowNames(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_copyDFattr(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getRegisteredRoutines(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getDllTable(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getSymbolInfo(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_S4on(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lazyLoadDBfetch(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lazyLoadDBflush(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_getVarsFromFrame(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lazyLoadDBinsertValue(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bincode(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_tabulate(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_findinterval(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_pretty(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_formatC(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_crc64(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bitwise(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_serialize(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_rowsum(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_setS4Object(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_traceOnOff(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_lapack(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bcprofcounts(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bcprofstart(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_bcprofstop(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_eSoftVersion(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_curlVersion(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_curlGetHeaders(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @do_curlDownload(ptr noundef, ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @R_Primitive(ptr noundef %0) #2 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 0, ptr %4, align 4
  br label %5

5:                                                ; preds = %42, %1
  %6 = load i32, ptr %4, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %7
  %9 = getelementptr inbounds %struct.FUNTAB, ptr %8, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %45

12:                                               ; preds = %5
  %13 = load ptr, ptr %3, align 8
  %14 = load i32, ptr %4, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %15
  %17 = getelementptr inbounds %struct.FUNTAB, ptr %16, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 @strcmp(ptr noundef %13, ptr noundef %18)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %41

21:                                               ; preds = %12
  %22 = load i32, ptr %4, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %23
  %25 = getelementptr inbounds %struct.FUNTAB, ptr %24, i32 0, i32 3
  %26 = load i32, ptr %25, align 4
  %27 = srem i32 %26, 100
  %28 = sdiv i32 %27, 10
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %21
  %31 = load ptr, ptr @R_NilValue, align 8
  store ptr %31, ptr %2, align 8
  br label %47

32:                                               ; preds = %21
  %33 = load i32, ptr %4, align 4
  %34 = load i32, ptr %4, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %35
  %37 = getelementptr inbounds %struct.FUNTAB, ptr %36, i32 0, i32 3
  %38 = load i32, ptr %37, align 4
  %39 = srem i32 %38, 10
  %40 = call ptr @mkPRIMSXP(i32 noundef %33, i32 noundef %39)
  store ptr %40, ptr %2, align 8
  br label %47

41:                                               ; preds = %12
  br label %42

42:                                               ; preds = %41
  %43 = load i32, ptr %4, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, ptr %4, align 4
  br label %5, !llvm.loop !5

45:                                               ; preds = %5
  %46 = load ptr, ptr @R_NilValue, align 8
  store ptr %46, ptr %2, align 8
  br label %47

47:                                               ; preds = %45, %32, %30
  %48 = load ptr, ptr %2, align 8
  ret ptr %48
}

declare i32 @strcmp(ptr noundef, ptr noundef) #0

declare ptr @mkPRIMSXP(i32 noundef, i32 noundef) #0

declare void @Rf_checkArityCall(ptr noundef, ptr noundef, ptr noundef) #0

declare ptr @CAR(ptr noundef) #0

declare i32 @LENGTH_EX(ptr noundef, ptr noundef, i32 noundef) #0

declare ptr @STRING_ELT(ptr noundef, i64 noundef) #0

; Function Attrs: noreturn
declare void @Rf_errorcall(ptr noundef, ptr noundef, ...) #1

declare ptr @libintl_gettext(ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define i32 @Rf_StrToInternal(ptr noundef %0) #2 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store i32 0, ptr %4, align 4
  br label %5

5:                                                ; preds = %24, %1
  %6 = load i32, ptr %4, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %7
  %9 = getelementptr inbounds %struct.FUNTAB, ptr %8, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  %11 = icmp ne ptr %10, null
  br i1 %11, label %12, label %27

12:                                               ; preds = %5
  %13 = load ptr, ptr %3, align 8
  %14 = load i32, ptr %4, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %15
  %17 = getelementptr inbounds %struct.FUNTAB, ptr %16, i32 0, i32 0
  %18 = load ptr, ptr %17, align 8
  %19 = call i32 @strcmp(ptr noundef %13, ptr noundef %18)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %12
  %22 = load i32, ptr %4, align 4
  store i32 %22, ptr %2, align 4
  br label %29

23:                                               ; preds = %12
  br label %24

24:                                               ; preds = %23
  %25 = load i32, ptr %4, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, ptr %4, align 4
  br label %5, !llvm.loop !7

27:                                               ; preds = %5
  %28 = load i32, ptr @R_NaInt, align 4
  store i32 %28, ptr %2, align 4
  br label %29

29:                                               ; preds = %27, %21
  %30 = load i32, ptr %2, align 4
  ret i32 %30
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @Rf_installDDVAL(i32 noundef %0) #2 {
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  store i32 %0, ptr %3, align 4
  %4 = load i32, ptr %3, align 4
  %5 = icmp slt i32 %4, 65
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load i32, ptr %3, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds [65 x ptr], ptr @DDVALSymbols, i64 0, i64 %8
  %10 = load ptr, ptr %9, align 8
  store ptr %10, ptr %2, align 8
  br label %14

11:                                               ; preds = %1
  %12 = load i32, ptr %3, align 4
  %13 = call ptr @createDDVALSymbol(i32 noundef %12)
  store ptr %13, ptr %2, align 8
  br label %14

14:                                               ; preds = %11, %6
  %15 = load ptr, ptr %2, align 8
  ret ptr %15
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define internal ptr @createDDVALSymbol(i32 noundef %0) #2 {
  %2 = alloca i32, align 4
  %3 = alloca [15 x i8], align 1
  store i32 %0, ptr %2, align 4
  %4 = getelementptr inbounds [15 x i8], ptr %3, i64 0, i64 0
  %5 = load i32, ptr %2, align 4
  %6 = call i32 (ptr, i64, i32, i64, ptr, ...) @__snprintf_chk(ptr noundef %4, i64 noundef 15, i32 noundef 0, i64 noundef 15, ptr noundef @.str.760, i32 noundef %5)
  %7 = getelementptr inbounds [15 x i8], ptr %3, i64 0, i64 0
  %8 = call ptr @Rf_install(ptr noundef %7)
  ret ptr %8
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define void @Rf_InitNames() #2 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call ptr @calloc(i64 noundef 49157, i64 noundef 8) #7
  store ptr %4, ptr @R_SymbolTable, align 8
  %5 = icmp ne ptr %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %0
  call void @R_Suicide(ptr noundef @.str.748) #6
  unreachable

7:                                                ; preds = %0
  %8 = load ptr, ptr @R_NilValue, align 8
  %9 = call ptr @mkSymMarker(ptr noundef %8)
  store ptr %9, ptr @R_UnboundValue, align 8
  %10 = call ptr @Rf_mkChar(ptr noundef @.str.749)
  %11 = call ptr @mkSymMarker(ptr noundef %10)
  store ptr %11, ptr @R_MissingArg, align 8
  %12 = call ptr @Rf_mkChar(ptr noundef @.str.750)
  %13 = call ptr @mkSymMarker(ptr noundef %12)
  store ptr %13, ptr @R_InBCInterpreter, align 8
  %14 = call ptr @Rf_mkChar(ptr noundef @.str.749)
  %15 = call ptr @mkSymMarker(ptr noundef %14)
  store ptr %15, ptr @R_RestartToken, align 8
  %16 = call ptr @Rf_mkChar(ptr noundef @.str.751)
  %17 = call ptr @mkSymMarker(ptr noundef %16)
  store ptr %17, ptr @R_CurrentExpression, align 8
  %18 = call ptr @Rf_allocCharsxp(i32 noundef 2)
  store ptr %18, ptr @R_NaString, align 8
  %19 = load ptr, ptr @R_NaString, align 8
  %20 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %19, i64 1
  %21 = load ptr, ptr @R_NaString, align 8
  %22 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %21, i64 1
  %23 = call i64 @llvm.objectsize.i64.p0(ptr %22, i1 false, i1 true, i1 false)
  %24 = call ptr @__strcpy_chk(ptr noundef %20, ptr noundef @.str.752, i64 noundef %23) #8
  %25 = load ptr, ptr @R_NaString, align 8
  %26 = getelementptr inbounds %struct.SEXPREC, ptr %25, i32 0, i32 0
  %27 = load i64, ptr %26, align 8
  %28 = lshr i64 %27, 8
  %29 = and i64 %28, 65535
  %30 = trunc i64 %29 to i32
  %31 = or i32 %30, 32
  %32 = zext i32 %31 to i64
  %33 = load i64, ptr %26, align 8
  %34 = and i64 %32, 65535
  %35 = shl i64 %34, 8
  %36 = and i64 %33, -16776961
  %37 = or i64 %36, %35
  store i64 %37, ptr %26, align 8
  %38 = trunc i64 %34 to i32
  %39 = load ptr, ptr @R_NaString, align 8
  store ptr %39, ptr getelementptr inbounds (%struct.R_PrintData, ptr @R_print, i32 0, i32 9), align 8
  %40 = call ptr @Rf_mkChar(ptr noundef @.str.749)
  store ptr %40, ptr @R_BlankString, align 8
  %41 = load ptr, ptr @R_BlankString, align 8
  %42 = call ptr @Rf_ScalarString(ptr noundef %41)
  store ptr %42, ptr @R_BlankScalarString, align 8
  %43 = load ptr, ptr @R_BlankScalarString, align 8
  %44 = getelementptr inbounds %struct.SEXPREC, ptr %43, i32 0, i32 0
  %45 = load i64, ptr %44, align 8
  %46 = and i64 %45, -281470681743361
  %47 = or i64 %46, 281470681743360
  store i64 %47, ptr %44, align 8
  store i32 0, ptr %1, align 4
  br label %48

48:                                               ; preds = %57, %7
  %49 = load i32, ptr %1, align 4
  %50 = icmp slt i32 %49, 49157
  br i1 %50, label %51, label %60

51:                                               ; preds = %48
  %52 = load ptr, ptr @R_NilValue, align 8
  %53 = load ptr, ptr @R_SymbolTable, align 8
  %54 = load i32, ptr %1, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds ptr, ptr %53, i64 %55
  store ptr %52, ptr %56, align 8
  br label %57

57:                                               ; preds = %51
  %58 = load i32, ptr %1, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, ptr %1, align 4
  br label %48, !llvm.loop !8

60:                                               ; preds = %48
  call void @SymbolShortcuts()
  store i32 0, ptr %2, align 4
  br label %61

61:                                               ; preds = %70, %60
  %62 = load i32, ptr %2, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %63
  %65 = getelementptr inbounds %struct.FUNTAB, ptr %64, i32 0, i32 0
  %66 = load ptr, ptr %65, align 8
  %67 = icmp ne ptr %66, null
  br i1 %67, label %68, label %73

68:                                               ; preds = %61
  %69 = load i32, ptr %2, align 4
  call void @installFunTab(i32 noundef %69)
  br label %70

70:                                               ; preds = %68
  %71 = load i32, ptr %2, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, ptr %2, align 4
  br label %61, !llvm.loop !9

73:                                               ; preds = %61
  store i32 0, ptr %3, align 4
  br label %74

74:                                               ; preds = %99, %73
  %75 = load i32, ptr %3, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [47 x ptr], ptr @Spec_name, i64 0, i64 %76
  %78 = load ptr, ptr %77, align 8
  %79 = icmp ne ptr %78, null
  br i1 %79, label %80, label %102

80:                                               ; preds = %74
  %81 = load i32, ptr %3, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [47 x ptr], ptr @Spec_name, i64 0, i64 %82
  %84 = load ptr, ptr %83, align 8
  %85 = call ptr @Rf_install(ptr noundef %84)
  %86 = getelementptr inbounds %struct.SEXPREC, ptr %85, i32 0, i32 0
  %87 = load i64, ptr %86, align 8
  %88 = lshr i64 %87, 8
  %89 = and i64 %88, 65535
  %90 = trunc i64 %89 to i32
  %91 = or i32 %90, 4096
  %92 = zext i32 %91 to i64
  %93 = load i64, ptr %86, align 8
  %94 = and i64 %92, 65535
  %95 = shl i64 %94, 8
  %96 = and i64 %93, -16776961
  %97 = or i64 %96, %95
  store i64 %97, ptr %86, align 8
  %98 = trunc i64 %94 to i32
  br label %99

99:                                               ; preds = %80
  %100 = load i32, ptr %3, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, ptr %3, align 4
  br label %74, !llvm.loop !10

102:                                              ; preds = %74
  call void @R_initAssignSymbols()
  call void @initializeDDVALSymbols()
  call void @R_initialize_bcode()
  call void @R_init_altrep()
  ret void
}

; Function Attrs: allocsize(0,1)
declare ptr @calloc(i64 noundef, i64 noundef) #3

; Function Attrs: noreturn
declare void @R_Suicide(ptr noundef) #1

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define internal ptr @mkSymMarker(ptr noundef %0) #2 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %4 = load ptr, ptr %2, align 8
  %5 = call ptr @Rf_protect(ptr noundef %4)
  %6 = call ptr @Rf_allocSExp(i32 noundef 1)
  store ptr %6, ptr %3, align 8
  %7 = load ptr, ptr %3, align 8
  %8 = load ptr, ptr %3, align 8
  call void @SET_SYMVALUE(ptr noundef %7, ptr noundef %8)
  %9 = load ptr, ptr %3, align 8
  %10 = load ptr, ptr @R_NilValue, align 8
  call void @SET_ATTRIB(ptr noundef %9, ptr noundef %10)
  %11 = load ptr, ptr %3, align 8
  %12 = load ptr, ptr %2, align 8
  call void @SET_PRINTNAME(ptr noundef %11, ptr noundef %12)
  call void @Rf_unprotect(i32 noundef 1)
  %13 = load ptr, ptr %3, align 8
  ret ptr %13
}

declare ptr @Rf_mkChar(ptr noundef) #0

declare ptr @Rf_allocCharsxp(i32 noundef) #0

; Function Attrs: nounwind
declare ptr @__strcpy_chk(ptr noundef, ptr noundef, i64 noundef) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.objectsize.i64.p0(ptr, i1 immarg, i1 immarg, i1 immarg) #5

declare ptr @Rf_ScalarString(ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define internal void @SymbolShortcuts() #2 {
  %1 = call ptr @Rf_install(ptr noundef @.str.16)
  store ptr %1, ptr @R_Bracket2Symbol, align 8
  %2 = call ptr @Rf_install(ptr noundef @.str.15)
  store ptr %2, ptr @R_BracketSymbol, align 8
  %3 = call ptr @Rf_install(ptr noundef @.str.11)
  store ptr %3, ptr @R_BraceSymbol, align 8
  %4 = call ptr @Rf_install(ptr noundef @.str.98)
  store ptr %4, ptr @R_ClassSymbol, align 8
  %5 = call ptr @Rf_install(ptr noundef @.str.761)
  store ptr %5, ptr @R_DeviceSymbol, align 8
  %6 = call ptr @Rf_install(ptr noundef @.str.105)
  store ptr %6, ptr @R_DimNamesSymbol, align 8
  %7 = call ptr @Rf_install(ptr noundef @.str.107)
  store ptr %7, ptr @R_DimSymbol, align 8
  %8 = call ptr @Rf_install(ptr noundef @.str.17)
  store ptr %8, ptr @R_DollarSymbol, align 8
  %9 = call ptr @Rf_install(ptr noundef @.str.18)
  store ptr %9, ptr @R_AtsignSymbol, align 8
  %10 = call ptr @Rf_install(ptr noundef @.str.762)
  store ptr %10, ptr @R_DotsSymbol, align 8
  %11 = call ptr @Rf_install(ptr noundef @.str.127)
  store ptr %11, ptr @R_DropSymbol, align 8
  %12 = call ptr @Rf_install(ptr noundef @.str.479)
  store ptr %12, ptr @R_EvalSymbol, align 8
  %13 = call ptr @Rf_install(ptr noundef @.str.763)
  store ptr %13, ptr @R_LastvalueSymbol, align 8
  %14 = load ptr, ptr @R_LastvalueSymbol, align 8
  %15 = getelementptr inbounds %struct.SEXPREC, ptr %14, i32 0, i32 0
  %16 = load i64, ptr %15, align 8
  %17 = and i64 %16, -134217729
  %18 = or i64 %17, 134217728
  store i64 %18, ptr %15, align 8
  %19 = call ptr @Rf_install(ptr noundef @.str.764)
  store ptr %19, ptr @R_LevelsSymbol, align 8
  %20 = call ptr @Rf_install(ptr noundef @.str.765)
  store ptr %20, ptr @R_ModeSymbol, align 8
  %21 = call ptr @Rf_install(ptr noundef @.str.766)
  store ptr %21, ptr @R_NameSymbol, align 8
  %22 = call ptr @Rf_install(ptr noundef @.str.103)
  store ptr %22, ptr @R_NamesSymbol, align 8
  %23 = call ptr @Rf_install(ptr noundef @.str.767)
  store ptr %23, ptr @R_NaRmSymbol, align 8
  %24 = call ptr @Rf_install(ptr noundef @.str.768)
  store ptr %24, ptr @R_PackageSymbol, align 8
  %25 = call ptr @Rf_install(ptr noundef @.str.769)
  store ptr %25, ptr @R_PreviousSymbol, align 8
  %26 = call ptr @Rf_install(ptr noundef @.str.29)
  store ptr %26, ptr @R_QuoteSymbol, align 8
  %27 = call ptr @Rf_install(ptr noundef @.str.770)
  store ptr %27, ptr @R_RowNamesSymbol, align 8
  %28 = call ptr @Rf_install(ptr noundef @.str.771)
  store ptr %28, ptr @R_SeedsSymbol, align 8
  %29 = call ptr @Rf_install(ptr noundef @.str.772)
  store ptr %29, ptr @R_SortListSymbol, align 8
  %30 = call ptr @Rf_install(ptr noundef @.str.773)
  store ptr %30, ptr @R_SourceSymbol, align 8
  %31 = call ptr @Rf_install(ptr noundef @.str.774)
  store ptr %31, ptr @R_TspSymbol, align 8
  %32 = call ptr @Rf_install(ptr noundef @.str.129)
  store ptr %32, ptr @R_CommentSymbol, align 8
  %33 = call ptr @Rf_install(ptr noundef @.str.775)
  store ptr %33, ptr @R_DotEnvSymbol, align 8
  %34 = call ptr @Rf_install(ptr noundef @.str.776)
  store ptr %34, ptr @R_ExactSymbol, align 8
  %35 = call ptr @Rf_install(ptr noundef @.str.777)
  store ptr %35, ptr @R_RecursiveSymbol, align 8
  %36 = call ptr @Rf_install(ptr noundef @.str.778)
  store ptr %36, ptr @R_SrcfileSymbol, align 8
  %37 = call ptr @Rf_install(ptr noundef @.str.779)
  store ptr %37, ptr @R_SrcrefSymbol, align 8
  %38 = call ptr @Rf_install(ptr noundef @.str.780)
  store ptr %38, ptr @R_WholeSrcrefSymbol, align 8
  %39 = call ptr @Rf_install(ptr noundef @.str.781)
  store ptr %39, ptr @R_TmpvalSymbol, align 8
  %40 = call ptr @Rf_install(ptr noundef @.str.782)
  store ptr %40, ptr @R_UseNamesSymbol, align 8
  %41 = call ptr @Rf_install(ptr noundef @.str.84)
  store ptr %41, ptr @R_ColonSymbol, align 8
  %42 = call ptr @Rf_install(ptr noundef @.str.86)
  store ptr %42, ptr @R_DoubleColonSymbol, align 8
  %43 = call ptr @Rf_install(ptr noundef @.str.87)
  store ptr %43, ptr @R_TripleColonSymbol, align 8
  %44 = call ptr @Rf_install(ptr noundef @.str.783)
  store ptr %44, ptr @R_ConnIdSymbol, align 8
  %45 = call ptr @Rf_install(ptr noundef @.str.784)
  store ptr %45, ptr @R_DevicesSymbol, align 8
  %46 = call ptr @Rf_install(ptr noundef @.str.785)
  store ptr %46, ptr @R_BaseSymbol, align 8
  store ptr %46, ptr @R_baseSymbol, align 8
  %47 = call ptr @Rf_install(ptr noundef @.str.786)
  store ptr %47, ptr @R_SpecSymbol, align 8
  %48 = call ptr @Rf_install(ptr noundef @.str.787)
  store ptr %48, ptr @R_NamespaceEnvSymbol, align 8
  %49 = call ptr @Rf_install(ptr noundef @.str.318)
  store ptr %49, ptr @R_AsCharacterSymbol, align 8
  %50 = call ptr @Rf_install(ptr noundef @.str.7)
  store ptr %50, ptr @R_FunctionSymbol, align 8
  %51 = call ptr @Rf_install(ptr noundef @.str.788)
  store ptr %51, ptr @R_dot_Generic, align 8
  %52 = call ptr @Rf_install(ptr noundef @.str.789)
  store ptr %52, ptr @R_dot_Method, align 8
  %53 = call ptr @Rf_install(ptr noundef @.str.790)
  store ptr %53, ptr @R_dot_Methods, align 8
  %54 = call ptr @Rf_install(ptr noundef @.str.791)
  store ptr %54, ptr @R_dot_defined, align 8
  %55 = call ptr @Rf_install(ptr noundef @.str.792)
  store ptr %55, ptr @R_dot_target, align 8
  %56 = call ptr @Rf_install(ptr noundef @.str.793)
  store ptr %56, ptr @R_dot_Group, align 8
  %57 = call ptr @Rf_install(ptr noundef @.str.794)
  store ptr %57, ptr @R_dot_Class, align 8
  %58 = call ptr @Rf_install(ptr noundef @.str.795)
  store ptr %58, ptr @R_dot_GenericCallEnv, align 8
  %59 = call ptr @Rf_install(ptr noundef @.str.796)
  store ptr %59, ptr @R_dot_GenericDefEnv, align 8
  %60 = call ptr @Rf_install(ptr noundef @.str.797)
  store ptr %60, ptr @R_dot_packageName, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define internal void @installFunTab(i32 noundef %0) #2 {
  %2 = alloca i32, align 4
  %3 = alloca ptr, align 8
  store i32 %0, ptr %2, align 4
  %4 = load i32, ptr %2, align 4
  %5 = load i32, ptr %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %6
  %8 = getelementptr inbounds %struct.FUNTAB, ptr %7, i32 0, i32 3
  %9 = load i32, ptr %8, align 4
  %10 = srem i32 %9, 10
  %11 = call ptr @mkPRIMSXP(i32 noundef %4, i32 noundef %10)
  store ptr %11, ptr %3, align 8
  %12 = load i32, ptr %2, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %13
  %15 = getelementptr inbounds %struct.FUNTAB, ptr %14, i32 0, i32 3
  %16 = load i32, ptr %15, align 4
  %17 = srem i32 %16, 100
  %18 = sdiv i32 %17, 10
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %1
  %21 = load i32, ptr %2, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %22
  %24 = getelementptr inbounds %struct.FUNTAB, ptr %23, i32 0, i32 0
  %25 = load ptr, ptr %24, align 8
  %26 = call ptr @Rf_install(ptr noundef %25)
  %27 = load ptr, ptr %3, align 8
  call void @SET_INTERNAL(ptr noundef %26, ptr noundef %27)
  br label %36

28:                                               ; preds = %1
  %29 = load i32, ptr %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %30
  %32 = getelementptr inbounds %struct.FUNTAB, ptr %31, i32 0, i32 0
  %33 = load ptr, ptr %32, align 8
  %34 = call ptr @Rf_install(ptr noundef %33)
  %35 = load ptr, ptr %3, align 8
  call void @SET_SYMVALUE(ptr noundef %34, ptr noundef %35)
  br label %36

36:                                               ; preds = %28, %20
  ret void
}

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @Rf_install(ptr noundef %0) #2 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  %9 = load ptr, ptr %3, align 8
  %10 = call i32 @R_Newhashpjw(ptr noundef %9)
  store i32 %10, ptr %6, align 4
  %11 = load i32, ptr %6, align 4
  %12 = srem i32 %11, 49157
  store i32 %12, ptr %5, align 4
  %13 = load ptr, ptr @R_SymbolTable, align 8
  %14 = load i32, ptr %5, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds ptr, ptr %13, i64 %15
  %17 = load ptr, ptr %16, align 8
  store ptr %17, ptr %4, align 8
  br label %18

18:                                               ; preds = %36, %1
  %19 = load ptr, ptr %4, align 8
  %20 = load ptr, ptr @R_NilValue, align 8
  %21 = icmp ne ptr %19, %20
  br i1 %21, label %22, label %41

22:                                               ; preds = %18
  %23 = load ptr, ptr %3, align 8
  %24 = load ptr, ptr %4, align 8
  %25 = call ptr @CAR(ptr noundef %24)
  %26 = getelementptr inbounds %struct.SEXPREC, ptr %25, i32 0, i32 4
  %27 = getelementptr inbounds %struct.symsxp_struct, ptr %26, i32 0, i32 0
  %28 = load ptr, ptr %27, align 8
  %29 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %28, i64 1
  %30 = call i32 @strcmp(ptr noundef %23, ptr noundef %29)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %22
  %33 = load ptr, ptr %4, align 8
  %34 = call ptr @CAR(ptr noundef %33)
  store ptr %34, ptr %2, align 8
  br label %112

35:                                               ; preds = %22
  br label %36

36:                                               ; preds = %35
  %37 = load ptr, ptr %4, align 8
  %38 = getelementptr inbounds %struct.SEXPREC, ptr %37, i32 0, i32 4
  %39 = getelementptr inbounds %struct.listsxp_struct, ptr %38, i32 0, i32 1
  %40 = load ptr, ptr %39, align 8
  store ptr %40, ptr %4, align 8
  br label %18, !llvm.loop !11

41:                                               ; preds = %18
  %42 = load ptr, ptr %3, align 8
  %43 = load i8, ptr %42, align 1
  %44 = sext i8 %43 to i32
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = call ptr @libintl_gettext(ptr noundef @.str.753)
  call void (ptr, ...) @Rf_error(ptr noundef %47) #6
  unreachable

48:                                               ; preds = %41
  %49 = load ptr, ptr %3, align 8
  %50 = call i64 @strlen(ptr noundef %49)
  %51 = icmp ugt i64 %50, 10000
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = call ptr @libintl_gettext(ptr noundef @.str.754)
  call void (ptr, ...) @Rf_error(ptr noundef %53, i32 noundef 10000) #6
  unreachable

54:                                               ; preds = %48
  %55 = load ptr, ptr %3, align 8
  %56 = call ptr @Rf_mkChar(ptr noundef %55)
  %57 = load ptr, ptr @R_UnboundValue, align 8
  %58 = call ptr @Rf_mkSYMSXP(ptr noundef %56, ptr noundef %57)
  store ptr %58, ptr %4, align 8
  br label %59

59:                                               ; preds = %54
  %60 = load ptr, ptr %4, align 8
  %61 = getelementptr inbounds %struct.SEXPREC, ptr %60, i32 0, i32 4
  %62 = getelementptr inbounds %struct.symsxp_struct, ptr %61, i32 0, i32 0
  %63 = load ptr, ptr %62, align 8
  store ptr %63, ptr %7, align 8
  %64 = load i32, ptr %6, align 4
  %65 = sext i32 %64 to i64
  store i64 %65, ptr %8, align 8
  %66 = load ptr, ptr %4, align 8
  %67 = getelementptr inbounds %struct.SEXPREC, ptr %66, i32 0, i32 4
  %68 = getelementptr inbounds %struct.symsxp_struct, ptr %67, i32 0, i32 0
  %69 = load ptr, ptr %68, align 8
  %70 = getelementptr inbounds %struct.SEXPREC, ptr %69, i32 0, i32 0
  %71 = load i64, ptr %70, align 8
  %72 = lshr i64 %71, 7
  %73 = and i64 %72, 1
  %74 = trunc i64 %73 to i32
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %59
  call void (ptr, ...) @Rf_error(ptr noundef @.str.755) #6
  unreachable

77:                                               ; preds = %59
  %78 = load i64, ptr %8, align 8
  %79 = load ptr, ptr %7, align 8
  %80 = getelementptr inbounds %struct.VECTOR_SEXPREC, ptr %79, i32 0, i32 4
  %81 = getelementptr inbounds %struct.vecsxp_struct, ptr %80, i32 0, i32 1
  store i64 %78, ptr %81, align 8
  br label %82

82:                                               ; preds = %77
  %83 = load ptr, ptr %4, align 8
  %84 = getelementptr inbounds %struct.SEXPREC, ptr %83, i32 0, i32 4
  %85 = getelementptr inbounds %struct.symsxp_struct, ptr %84, i32 0, i32 0
  %86 = load ptr, ptr %85, align 8
  %87 = getelementptr inbounds %struct.SEXPREC, ptr %86, i32 0, i32 0
  %88 = load i64, ptr %87, align 8
  %89 = lshr i64 %88, 8
  %90 = and i64 %89, 65535
  %91 = trunc i64 %90 to i32
  %92 = or i32 %91, 1
  %93 = zext i32 %92 to i64
  %94 = load i64, ptr %87, align 8
  %95 = and i64 %93, 65535
  %96 = shl i64 %95, 8
  %97 = and i64 %94, -16776961
  %98 = or i64 %97, %96
  store i64 %98, ptr %87, align 8
  %99 = trunc i64 %95 to i32
  %100 = load ptr, ptr %4, align 8
  %101 = load ptr, ptr @R_SymbolTable, align 8
  %102 = load i32, ptr %5, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds ptr, ptr %101, i64 %103
  %105 = load ptr, ptr %104, align 8
  %106 = call ptr @Rf_cons(ptr noundef %100, ptr noundef %105)
  %107 = load ptr, ptr @R_SymbolTable, align 8
  %108 = load i32, ptr %5, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds ptr, ptr %107, i64 %109
  store ptr %106, ptr %110, align 8
  %111 = load ptr, ptr %4, align 8
  store ptr %111, ptr %2, align 8
  br label %112

112:                                              ; preds = %82, %32
  %113 = load ptr, ptr %2, align 8
  ret ptr %113
}

declare void @R_initAssignSymbols() #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define internal void @initializeDDVALSymbols() #2 {
  %1 = alloca i32, align 4
  store i32 0, ptr %1, align 4
  br label %2

2:                                                ; preds = %11, %0
  %3 = load i32, ptr %1, align 4
  %4 = icmp slt i32 %3, 65
  br i1 %4, label %5, label %14

5:                                                ; preds = %2
  %6 = load i32, ptr %1, align 4
  %7 = call ptr @createDDVALSymbol(i32 noundef %6)
  %8 = load i32, ptr %1, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds [65 x ptr], ptr @DDVALSymbols, i64 0, i64 %9
  store ptr %7, ptr %10, align 8
  br label %11

11:                                               ; preds = %5
  %12 = load i32, ptr %1, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, ptr %1, align 4
  br label %2, !llvm.loop !12

14:                                               ; preds = %2
  ret void
}

declare void @R_initialize_bcode() #0

declare void @R_init_altrep() #0

declare i32 @R_Newhashpjw(ptr noundef) #0

; Function Attrs: noreturn
declare void @Rf_error(ptr noundef, ...) #1

declare i64 @strlen(ptr noundef) #0

declare ptr @Rf_mkSYMSXP(ptr noundef, ptr noundef) #0

declare ptr @Rf_cons(ptr noundef, ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @Rf_installNoTrChar(ptr noundef %0) #2 {
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca ptr, align 8
  %11 = alloca i64, align 8
  store ptr %0, ptr %3, align 8
  %12 = load ptr, ptr %3, align 8
  %13 = getelementptr inbounds %struct.SEXPREC, ptr %12, i32 0, i32 0
  %14 = load i64, ptr %13, align 8
  %15 = lshr i64 %14, 8
  %16 = and i64 %15, 65535
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 1
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %56, label %20

20:                                               ; preds = %1
  %21 = load ptr, ptr %3, align 8
  %22 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %21, i64 1
  %23 = call i32 @R_Newhashpjw(ptr noundef %22)
  store i32 %23, ptr %6, align 4
  br label %24

24:                                               ; preds = %20
  %25 = load ptr, ptr %3, align 8
  store ptr %25, ptr %7, align 8
  %26 = load i32, ptr %6, align 4
  %27 = sext i32 %26 to i64
  store i64 %27, ptr %8, align 8
  %28 = load ptr, ptr %3, align 8
  %29 = getelementptr inbounds %struct.SEXPREC, ptr %28, i32 0, i32 0
  %30 = load i64, ptr %29, align 8
  %31 = lshr i64 %30, 7
  %32 = and i64 %31, 1
  %33 = trunc i64 %32 to i32
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %24
  call void (ptr, ...) @Rf_error(ptr noundef @.str.755) #6
  unreachable

36:                                               ; preds = %24
  %37 = load i64, ptr %8, align 8
  %38 = load ptr, ptr %7, align 8
  %39 = getelementptr inbounds %struct.VECTOR_SEXPREC, ptr %38, i32 0, i32 4
  %40 = getelementptr inbounds %struct.vecsxp_struct, ptr %39, i32 0, i32 1
  store i64 %37, ptr %40, align 8
  br label %41

41:                                               ; preds = %36
  %42 = load ptr, ptr %3, align 8
  %43 = getelementptr inbounds %struct.SEXPREC, ptr %42, i32 0, i32 0
  %44 = load i64, ptr %43, align 8
  %45 = lshr i64 %44, 8
  %46 = and i64 %45, 65535
  %47 = trunc i64 %46 to i32
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  %50 = load i64, ptr %43, align 8
  %51 = and i64 %49, 65535
  %52 = shl i64 %51, 8
  %53 = and i64 %50, -16776961
  %54 = or i64 %53, %52
  store i64 %54, ptr %43, align 8
  %55 = trunc i64 %51 to i32
  br label %60

56:                                               ; preds = %1
  %57 = load ptr, ptr %3, align 8
  %58 = call i64 @XTRUELENGTH(ptr noundef %57)
  %59 = trunc i64 %58 to i32
  store i32 %59, ptr %6, align 4
  br label %60

60:                                               ; preds = %56, %41
  %61 = load i32, ptr %6, align 4
  %62 = srem i32 %61, 49157
  store i32 %62, ptr %5, align 4
  %63 = load ptr, ptr @R_SymbolTable, align 8
  %64 = load i32, ptr %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds ptr, ptr %63, i64 %65
  %67 = load ptr, ptr %66, align 8
  store ptr %67, ptr %4, align 8
  br label %68

68:                                               ; preds = %87, %60
  %69 = load ptr, ptr %4, align 8
  %70 = load ptr, ptr @R_NilValue, align 8
  %71 = icmp ne ptr %69, %70
  br i1 %71, label %72, label %92

72:                                               ; preds = %68
  %73 = load ptr, ptr %3, align 8
  %74 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %73, i64 1
  %75 = load ptr, ptr %4, align 8
  %76 = call ptr @CAR(ptr noundef %75)
  %77 = getelementptr inbounds %struct.SEXPREC, ptr %76, i32 0, i32 4
  %78 = getelementptr inbounds %struct.symsxp_struct, ptr %77, i32 0, i32 0
  %79 = load ptr, ptr %78, align 8
  %80 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %79, i64 1
  %81 = call i32 @strcmp(ptr noundef %74, ptr noundef %80)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %72
  %84 = load ptr, ptr %4, align 8
  %85 = call ptr @CAR(ptr noundef %84)
  store ptr %85, ptr %2, align 8
  br label %203

86:                                               ; preds = %72
  br label %87

87:                                               ; preds = %86
  %88 = load ptr, ptr %4, align 8
  %89 = getelementptr inbounds %struct.SEXPREC, ptr %88, i32 0, i32 4
  %90 = getelementptr inbounds %struct.listsxp_struct, ptr %89, i32 0, i32 1
  %91 = load ptr, ptr %90, align 8
  store ptr %91, ptr %4, align 8
  br label %68, !llvm.loop !13

92:                                               ; preds = %68
  %93 = load ptr, ptr %3, align 8
  %94 = call i32 @LENGTH_EX(ptr noundef %93, ptr noundef @.str.745, i32 noundef 1293)
  store i32 %94, ptr %9, align 4
  %95 = load i32, ptr %9, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = call ptr @libintl_gettext(ptr noundef @.str.753)
  call void (ptr, ...) @Rf_error(ptr noundef %98) #6
  unreachable

99:                                               ; preds = %92
  %100 = load i32, ptr %9, align 4
  %101 = icmp sgt i32 %100, 10000
  br i1 %101, label %102, label %104

102:                                              ; preds = %99
  %103 = call ptr @libintl_gettext(ptr noundef @.str.754)
  call void (ptr, ...) @Rf_error(ptr noundef %103, i32 noundef 10000) #6
  unreachable

104:                                              ; preds = %99
  %105 = load ptr, ptr %3, align 8
  %106 = getelementptr inbounds %struct.SEXPREC, ptr %105, i32 0, i32 0
  %107 = load i64, ptr %106, align 8
  %108 = lshr i64 %107, 8
  %109 = and i64 %108, 65535
  %110 = trunc i64 %109 to i32
  %111 = and i32 %110, 64
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %137, label %113

113:                                              ; preds = %104
  %114 = load ptr, ptr %3, align 8
  %115 = getelementptr inbounds %struct.SEXPREC, ptr %114, i32 0, i32 0
  %116 = load i64, ptr %115, align 8
  %117 = lshr i64 %116, 8
  %118 = and i64 %117, 65535
  %119 = trunc i64 %118 to i32
  %120 = and i32 %119, 8
  %121 = icmp ne i32 %120, 0
  br i1 %121, label %122, label %125

122:                                              ; preds = %113
  %123 = load i32, ptr @utf8locale, align 4
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %137, label %125

125:                                              ; preds = %122, %113
  %126 = load ptr, ptr %3, align 8
  %127 = getelementptr inbounds %struct.SEXPREC, ptr %126, i32 0, i32 0
  %128 = load i64, ptr %127, align 8
  %129 = lshr i64 %128, 8
  %130 = and i64 %129, 65535
  %131 = trunc i64 %130 to i32
  %132 = and i32 %131, 4
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %134, label %141

134:                                              ; preds = %125
  %135 = load i32, ptr @latin1locale, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %134, %122, %104
  %138 = load ptr, ptr %3, align 8
  %139 = load ptr, ptr @R_UnboundValue, align 8
  %140 = call ptr @Rf_mkSYMSXP(ptr noundef %138, ptr noundef %139)
  store ptr %140, ptr %4, align 8
  br label %190

141:                                              ; preds = %134, %125
  %142 = load ptr, ptr %3, align 8
  %143 = call ptr @Rf_protect(ptr noundef %142)
  %144 = load ptr, ptr %3, align 8
  %145 = getelementptr inbounds %union.SEXPREC_ALIGN, ptr %144, i64 1
  %146 = call ptr @Rf_mkChar(ptr noundef %145)
  %147 = load ptr, ptr @R_UnboundValue, align 8
  %148 = call ptr @Rf_mkSYMSXP(ptr noundef %146, ptr noundef %147)
  store ptr %148, ptr %4, align 8
  br label %149

149:                                              ; preds = %141
  %150 = load ptr, ptr %4, align 8
  %151 = getelementptr inbounds %struct.SEXPREC, ptr %150, i32 0, i32 4
  %152 = getelementptr inbounds %struct.symsxp_struct, ptr %151, i32 0, i32 0
  %153 = load ptr, ptr %152, align 8
  store ptr %153, ptr %10, align 8
  %154 = load i32, ptr %6, align 4
  %155 = sext i32 %154 to i64
  store i64 %155, ptr %11, align 8
  %156 = load ptr, ptr %4, align 8
  %157 = getelementptr inbounds %struct.SEXPREC, ptr %156, i32 0, i32 4
  %158 = getelementptr inbounds %struct.symsxp_struct, ptr %157, i32 0, i32 0
  %159 = load ptr, ptr %158, align 8
  %160 = getelementptr inbounds %struct.SEXPREC, ptr %159, i32 0, i32 0
  %161 = load i64, ptr %160, align 8
  %162 = lshr i64 %161, 7
  %163 = and i64 %162, 1
  %164 = trunc i64 %163 to i32
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %149
  call void (ptr, ...) @Rf_error(ptr noundef @.str.755) #6
  unreachable

167:                                              ; preds = %149
  %168 = load i64, ptr %11, align 8
  %169 = load ptr, ptr %10, align 8
  %170 = getelementptr inbounds %struct.VECTOR_SEXPREC, ptr %169, i32 0, i32 4
  %171 = getelementptr inbounds %struct.vecsxp_struct, ptr %170, i32 0, i32 1
  store i64 %168, ptr %171, align 8
  br label %172

172:                                              ; preds = %167
  %173 = load ptr, ptr %4, align 8
  %174 = getelementptr inbounds %struct.SEXPREC, ptr %173, i32 0, i32 4
  %175 = getelementptr inbounds %struct.symsxp_struct, ptr %174, i32 0, i32 0
  %176 = load ptr, ptr %175, align 8
  %177 = getelementptr inbounds %struct.SEXPREC, ptr %176, i32 0, i32 0
  %178 = load i64, ptr %177, align 8
  %179 = lshr i64 %178, 8
  %180 = and i64 %179, 65535
  %181 = trunc i64 %180 to i32
  %182 = or i32 %181, 1
  %183 = zext i32 %182 to i64
  %184 = load i64, ptr %177, align 8
  %185 = and i64 %183, 65535
  %186 = shl i64 %185, 8
  %187 = and i64 %184, -16776961
  %188 = or i64 %187, %186
  store i64 %188, ptr %177, align 8
  %189 = trunc i64 %185 to i32
  call void @Rf_unprotect(i32 noundef 1)
  br label %190

190:                                              ; preds = %172, %137
  %191 = load ptr, ptr %4, align 8
  %192 = load ptr, ptr @R_SymbolTable, align 8
  %193 = load i32, ptr %5, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds ptr, ptr %192, i64 %194
  %196 = load ptr, ptr %195, align 8
  %197 = call ptr @Rf_cons(ptr noundef %191, ptr noundef %196)
  %198 = load ptr, ptr @R_SymbolTable, align 8
  %199 = load i32, ptr %5, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds ptr, ptr %198, i64 %200
  store ptr %197, ptr %201, align 8
  %202 = load ptr, ptr %4, align 8
  store ptr %202, ptr %2, align 8
  br label %203

203:                                              ; preds = %190, %83
  %204 = load ptr, ptr %2, align 8
  ret ptr %204
}

declare i64 @XTRUELENGTH(ptr noundef) #0

declare ptr @Rf_protect(ptr noundef) #0

declare void @Rf_unprotect(i32 noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @Rf_installS3Signature(ptr noundef %0, ptr noundef %1) #2 {
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  %6 = alloca [512 x i8], align 1
  %7 = alloca i32, align 4
  store ptr %0, ptr %3, align 8
  store ptr %1, ptr %4, align 8
  store i32 0, ptr %7, align 4
  %8 = load ptr, ptr %3, align 8
  store ptr %8, ptr %5, align 8
  br label %9

9:                                                ; preds = %26, %2
  %10 = load ptr, ptr %5, align 8
  %11 = load i8, ptr %10, align 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = load i32, ptr %7, align 4
  %15 = icmp eq i32 %14, 512
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = call ptr @libintl_gettext(ptr noundef @.str.756)
  %18 = load ptr, ptr %3, align 8
  call void (ptr, ...) @Rf_error(ptr noundef %17, ptr noundef %18) #6
  unreachable

19:                                               ; preds = %13
  %20 = load ptr, ptr %5, align 8
  %21 = load i8, ptr %20, align 1
  %22 = load i32, ptr %7, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, ptr %7, align 4
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %24
  store i8 %21, ptr %25, align 1
  br label %26

26:                                               ; preds = %19
  %27 = load ptr, ptr %5, align 8
  %28 = getelementptr inbounds i8, ptr %27, i32 1
  store ptr %28, ptr %5, align 8
  br label %9, !llvm.loop !14

29:                                               ; preds = %9
  %30 = load i32, ptr %7, align 4
  %31 = icmp eq i32 %30, 512
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = call ptr @libintl_gettext(ptr noundef @.str.756)
  %34 = load ptr, ptr %3, align 8
  call void (ptr, ...) @Rf_error(ptr noundef %33, ptr noundef %34) #6
  unreachable

35:                                               ; preds = %29
  %36 = load i32, ptr %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr %7, align 4
  %38 = sext i32 %36 to i64
  %39 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %38
  store i8 46, ptr %39, align 1
  %40 = load ptr, ptr %4, align 8
  store ptr %40, ptr %5, align 8
  br label %41

41:                                               ; preds = %58, %35
  %42 = load ptr, ptr %5, align 8
  %43 = load i8, ptr %42, align 1
  %44 = icmp ne i8 %43, 0
  br i1 %44, label %45, label %61

45:                                               ; preds = %41
  %46 = load i32, ptr %7, align 4
  %47 = icmp eq i32 %46, 512
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = call ptr @libintl_gettext(ptr noundef @.str.756)
  %50 = load ptr, ptr %3, align 8
  call void (ptr, ...) @Rf_error(ptr noundef %49, ptr noundef %50) #6
  unreachable

51:                                               ; preds = %45
  %52 = load ptr, ptr %5, align 8
  %53 = load i8, ptr %52, align 1
  %54 = load i32, ptr %7, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, ptr %7, align 4
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %56
  store i8 %53, ptr %57, align 1
  br label %58

58:                                               ; preds = %51
  %59 = load ptr, ptr %5, align 8
  %60 = getelementptr inbounds i8, ptr %59, i32 1
  store ptr %60, ptr %5, align 8
  br label %41, !llvm.loop !15

61:                                               ; preds = %41
  %62 = load i32, ptr %7, align 4
  %63 = icmp eq i32 %62, 512
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = call ptr @libintl_gettext(ptr noundef @.str.756)
  %66 = load ptr, ptr %3, align 8
  call void (ptr, ...) @Rf_error(ptr noundef %65, ptr noundef %66) #6
  unreachable

67:                                               ; preds = %61
  %68 = load i32, ptr %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 %69
  store i8 0, ptr %70, align 1
  %71 = getelementptr inbounds [512 x i8], ptr %6, i64 0, i64 0
  %72 = call ptr @Rf_install(ptr noundef %71)
  ret ptr %72
}

declare ptr @vmaxget() #0

declare i32 @Rf_isPairList(ptr noundef) #0

declare ptr @Rf_evalList(ptr noundef, ptr noundef, ptr noundef, i32 noundef) #0

declare void @Rf_check_stack_balance(ptr noundef, i32 noundef) #0

declare void @vmaxset(ptr noundef) #0

declare ptr @Rf_duplicate(ptr noundef) #0

declare ptr @Rf_mkString(ptr noundef) #0

declare ptr @Rf_setAttrib(ptr noundef, ptr noundef, ptr noundef) #0

; Function Attrs: noinline nounwind optnone ssp uwtable(sync)
define ptr @getPRIMNAME(ptr noundef %0) #2 {
  %2 = alloca ptr, align 8
  store ptr %0, ptr %2, align 8
  %3 = load ptr, ptr %2, align 8
  %4 = getelementptr inbounds %struct.SEXPREC, ptr %3, i32 0, i32 4
  %5 = getelementptr inbounds %struct.primsxp_struct, ptr %4, i32 0, i32 0
  %6 = load i32, ptr %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds [748 x %struct.FUNTAB], ptr @R_FunTab, i64 0, i64 %7
  %9 = getelementptr inbounds %struct.FUNTAB, ptr %8, i32 0, i32 0
  %10 = load ptr, ptr %9, align 8
  ret ptr %10
}

declare i32 @__snprintf_chk(ptr noundef, i64 noundef, i32 noundef, i64 noundef, ptr noundef, ...) #0

declare ptr @Rf_allocSExp(i32 noundef) #0

declare void @SET_SYMVALUE(ptr noundef, ptr noundef) #0

declare void @SET_ATTRIB(ptr noundef, ptr noundef) #0

declare void @SET_PRINTNAME(ptr noundef, ptr noundef) #0

declare void @SET_INTERNAL(ptr noundef, ptr noundef) #0

attributes #0 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #1 = { noreturn "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #2 = { noinline nounwind optnone ssp uwtable(sync) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #3 = { allocsize(0,1) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #4 = { nounwind "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { noreturn }
attributes #7 = { allocsize(0,1) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"clang version 16.0.0"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.mustprogress"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
!11 = distinct !{!11, !6}
!12 = distinct !{!12, !6}
!13 = distinct !{!13, !6}
!14 = distinct !{!14, !6}
!15 = distinct !{!15, !6}
