; ModuleID = 'tmp.c'
source_filename = "tmp.c"
target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
target triple = "arm64-apple-macosx13.0.0"

; Function Attrs: nounwind ssp uwtable(sync)
define ptr @foo(ptr noundef %n, ptr noundef %prob) local_unnamed_addr #0 {
entry:
  %call = tail call ptr @Rf_coerceVector(ptr noundef %prob, i32 noundef 14) #2
  %call1 = tail call i32 @Rf_length(ptr noundef %call) #2
  %call2 = tail call i32 @Rf_asInteger(ptr noundef %n) #2
  %call3 = tail call ptr @Rf_allocMatrix(i32 noundef 13, i32 noundef %call1, i32 noundef %call2) #2
  ret ptr %call3
}

declare ptr @Rf_coerceVector(ptr noundef, i32 noundef) local_unnamed_addr #1

declare i32 @Rf_length(ptr noundef) local_unnamed_addr #1

declare ptr @Rf_allocMatrix(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

declare i32 @Rf_asInteger(ptr noundef) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable(sync) "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #1 = { "frame-pointer"="non-leaf" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="apple-m1" "target-features"="+aes,+crc,+crypto,+dotprod,+fp-armv8,+fp16fml,+fullfp16,+lse,+neon,+ras,+rcpc,+rdm,+sha2,+sha3,+sm4,+v8.1a,+v8.2a,+v8.3a,+v8.4a,+v8.5a,+v8a,+zcm,+zcz" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"uwtable", i32 1}
!3 = !{i32 7, !"frame-pointer", i32 1}
!4 = !{!"clang version 16.0.0"}
